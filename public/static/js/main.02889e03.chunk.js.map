{"version":3,"sources":["utils/CookieManager.js","utils/SessionCookies.js","data/benefits sync /^/.//.*/.json$","hoc/Layout/Layout.js","hoc/LoginLayout/LoginLayout.js","components/BenefitsTool/StepCounter/StepCounter.js","components/BenefitsTool/Question/Question.js","components/UI/Controls/Controls.js","containers/BenefitsTool/Quiz/Quiz.js","components/BenefitsTool/AnswerList/AnswerList.js","utils/Api.js","containers/BenefitsTool/Confirmation/Confirmation.js","components/BenefitsTool/Response/Response.js","containers/BenefitsTool/Results/Results.js","components/BenefitsTool/Intro/Intro.js","utils/VisitorCookie.js","containers/BenefitsTool/BenefitsTool.js","components/LoginBox/LoginBox.js","containers/Login/Login.js","utils/LoginCookie.js","App.js","serviceWorker.js","index.js"],"names":["cm","Cookies","SessionCookies","key","cookiestring","CookieManager","get","cookieobj","this","expandData","answers","Object","keys","QUESTIONS","spec","a","val","cookiename","contractData","set","path","sameSite","text","Buffer","toString","JSON","parse","e","console","log","stringify","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","layout","props","className","href","src","alt","children","loginLayout","stepCounter","bullets","i","steps","length","step","currentStep","clicked","push","title","onClick","question","questionText","helpText","controls","buttons","button","attributes","cname","classNames","join","disabled","links","link","buttonLayout","Quiz","state","questions","QuestionsData","startQuiz","changeStep","clickAnswer","aKey","setState","prevState","newStep","completed","order","editAnswer","goBack","goToStep","stepNum","cancelQuiz","restartQuiz","isNaN","parseInt","stepCount","qstep","t","target","qspec","answerButtons","q","help","Component","answerList","qtext","atext","axiosInstance","axios","create","baseURL","data","getAxios","post","Confirmation","loading","email","zip","emailError","zipError","saveError","confirmAnswers","visitor_id","letter","answer","toUpperCase","Api","recordResponse","then","response","catch","error","edited","answerSections","section","items","header","para","resourceBlock","resources","j","linkList","Results","responses","ResponsesData","benefitResponses","customAnswers","splitTypeByEssential","type","splitTypeByHomeCare","splitBooksByTaxes","books","splitBooksByCompliance","splitLengthByYear","splitLengthByMonths","findReasonForFFCRA","findReasonForNYS","BENEFITS","benefit","r","require","answerKey","conditions","simple","complex","k","m","template","employeeType","item","replace","sections","loadBenefitResponses","b","buildAnswerKey","match","c","long","replaceEmployeeType","short","defaultNoBenefits","unshift","introWithBenefits","retaliationWarning","standardHeader","finalAnswer","getFinalAnswer","window","open","Response","intro","visitorCookie","maxAge","BenefitsTool","started","confirmed","flags","updateSession","qcode","newAnswers","newstate","VisitorCookie","uuidv4","sess_answers","sess_question","sess_answer","flag","todo","todo_flags","body","Intro","loginBox","loginError","class","method","onSubmit","submitted","name","value","username","onChange","usernameChanged","autoComplete","password","passwordChanged","Login","changeUsername","changePassword","validate","preventDefault","checkLogin","updateLoginState","token","loginCookie","session_id","App","loggedIn","updateLogin","LoginCookie","checkToken","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.02889e03.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\n\nconst cm = new Cookies();\n\nexport default cm;\n","import CookieManager from './CookieManager';\n\nimport QUESTIONS from '../data/questions.json';\n\nconst ANSWERS_COOKIE = 'hnct-answers';\nconst FLAGS_COOKIE = 'hnct-flags';\nconst STEP_COOKIE = 'hnct-step';\n\nclass SessionCookies {\n\n    get(key) {\n        if (key === 'answers') {\n            const cookiestring = CookieManager.get(ANSWERS_COOKIE);\n            if (typeof cookiestring === 'undefined') {\n                return {};\n            }\n            const cookieobj = this.expandData(cookiestring);\n            let answers = {};\n            if (cookieobj !== null) {\n                for (const key of Object.keys(QUESTIONS.spec)) {\n                    if (cookieobj[key] in QUESTIONS.spec[key].a) {\n                        answers[key] = cookieobj[key];\n                    }\n                }\n            }\n            return answers;\n\n        } else if (key === 'flags') {\n            const cookiestring = CookieManager.get(FLAGS_COOKIE);\n            if (typeof cookiestring === 'undefined') {\n                return {};\n            }\n            const cookieobj = this.expandData(cookiestring);\n            return cookieobj === null ? {} : cookieobj;\n\n        } else if (key === 'current_step') {\n            const val = CookieManager.get(STEP_COOKIE);\n            return val;\n        }\n\n        return null;\n    }\n\n    set(key, val) {\n        let cookiename = null;\n        let cookiestring = null;\n        if (key === 'answers') {\n            cookiename = ANSWERS_COOKIE;\n            cookiestring = this.contractData(val);\n        } else if (key === 'flags') {\n            cookiename = FLAGS_COOKIE;\n            cookiestring = this.contractData(val);\n        } else if (key === 'current_step') {\n            cookiename = STEP_COOKIE;\n            cookiestring = val;\n        }\n        if (cookiename !== null) {\n            CookieManager.set(cookiename, cookiestring, {\n                path: '/',\n                sameSite: 'strict'\n            });\n        }\n    }\n\n    expandData(cookiestring) {\n        let cookieobj = {};\n        try {\n            let buff = new Buffer(cookiestring, 'base64');\n            let text = buff.toString('utf8');\n            cookieobj = JSON.parse(text);\n        } catch (e) {\n            console.log('Cookie value was not valid json; starting over');\n            return null;\n        }\n        return cookieobj;\n    }\n\n    contractData(cookieobj) {\n        const text = JSON.stringify(cookieobj);\n        let buff = new Buffer(text);\n        return buff.toString('base64');\n    }\n\n};\n\nexport default new SessionCookies();\n","var map = {\n\t\"./ffcra.json\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60;","import React from 'react';\n\nimport './Layout.css';\n\nconst layout = (props) => {\n    return (\n        <div className=\"BenefitsTool\">\n            <div className=\"Logo\">\n                <a href=\"https://domesticemployers.org/\"><img src=\"/images/logo.png\" alt=\"Hand-In-Hand: The Domestic Employers Network\" /></a>\n            </div>\n            <div className=\"Header\">\n                <h1><a href=\"/\">NYC COVID-19 Benefits Tool</a></h1>\n            </div>\n            <div className=\"MainContent\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default layout;\n","import React from 'react';\n\nimport './LoginLayout.css';\n\nconst loginLayout = (props) => {\n    return (\n        <div className=\"LoginFrame\">\n            <div className=\"LoginMain\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default loginLayout;\n","import React from 'react';\n\nimport './StepCounter.css';\n\nconst stepCounter = (props) => {\n\n    let bullets = [];\n    for (let i = 0; i < props.steps.length; ++i) {\n        let step = props.steps[i];\n        let className = 'Bullet';\n        if (props.currentStep < i) {\n            className += ' Unvisited';\n        } else if (props.currentStep === i) {\n            className += ' Current';\n        } else {\n            className += ' Visited';\n        }\n        if (typeof(step.clicked) === 'function') {\n            className += ' Clickable';\n        }\n        bullets.push(<li key={step.title}\n            className={className}\n            title={step.title}\n            onClick={step.clicked}>&middot;</li>);\n    }\n\n    return (\n        <div className=\"StepCounter\">\n            <ul>\n                {bullets}\n            </ul>\n        </div>\n    );\n};\n\nexport default stepCounter;\n","import React from 'react';\n\nimport './Question.css';\n\nconst question = (props) => {\n    return (\n        <div className=\"Question\">\n            <h2 className=\"QuestionHeader\">{props.questionText}</h2>\n\n            {props.helpText ? <p className=\"Help\">{props.helpText}</p> : null}\n        </div>\n    );\n};\n\nexport default question;\n","import React from 'react';\n\nimport './Controls.css';\n\nconst controls = (props) => {\n\n    let buttons = {};\n    if (typeof props.buttons !== 'undefined') {\n        buttons = props.buttons\n            .map((button) => {\n                let attributes = {\n                    key: button.key ? button.key : button.text,\n                };\n                let cname = 'ControlButton';\n                if (button.classNames) {\n                    cname += ' ' + button.classNames.join(' ');\n                }\n                if (button.disabled) {\n                    attributes.disabled = true;\n                    cname += ' DisabledButton';\n                }\n                if (typeof button.clicked === 'function') {\n                    attributes.onClick = button.clicked;\n                }\n                attributes.className = cname;\n                return <button {...attributes}>{button.text}</button>;\n            });\n    }\n\n    let links = {};\n    if (typeof props.links !== 'undefined') {\n        links = props.links\n            .map((link) => {\n                let cname = 'ControlLink';\n                if (link.classNames) {\n                    cname += ' ' + link.classNames.join(' ');\n                }\n                return <div key={link.key ? link.key : link.text} className={cname} onClick={link.clicked}>{link.text}</div>;\n            });\n    }\n\n    return (\n        <div className=\"Controls\">\n        {buttons.length > 0 ?\n            <div className={props.buttonLayout === 'vert' ? 'VertButtonContainer' : 'ButtonContainer'}>\n                {buttons}\n            </div>\n        : null}\n        {links.length > 0 ?\n            <div className=\"LinkContainer\">\n                {links}\n            </div>\n        : null}\n        </div>\n    );\n\n};\n\nexport default controls;\n","import React, { Component } from 'react';\n\nimport StepCounter from '../../../components/BenefitsTool/StepCounter/StepCounter';\nimport Question from '../../../components/BenefitsTool/Question/Question';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport SessionCookies from '../../../utils/SessionCookies';\n\nimport QuestionsData from '../../../data/questions.json';\n\nclass Quiz extends Component {\n\n    state = {\n        step: 0\n    };\n\n    questions = QuestionsData;\n\n    componentDidMount() {\n        let newStep = SessionCookies.get('current_step');\n        if (isNaN(parseInt(newStep))) {\n            newStep = 0;\n        }\n        newStep = parseInt(newStep);\n        if (newStep < 0 || newStep >= this.questions.order.length) {\n            newStep = 0;\n        }\n        this.setState({ step: newStep });\n    }\n\n    changeStep(newStep) {\n        this.setState({ step: newStep });\n        SessionCookies.set('current_step', newStep);\n    }\n\n    startQuiz = () => {\n        this.changeStep(0);\n    };\n\n    clickAnswer = (aKey) => {\n        this.setState((prevState) => {\n            let newStep = prevState.step + 1;\n            let completed = false;\n            if (newStep === this.questions.order.length) {\n                newStep = 0;\n                completed = true;\n            }\n            this.props.editAnswer(\n                this.questions.order[prevState.step],\n                aKey,\n                completed\n            );\n            SessionCookies.set('current_step', newStep);\n            return { step: newStep };\n        });\n    };\n\n    goBack = () => {\n        this.setState((prevState) => {\n            let newStep = prevState.step - 1;\n            if (newStep < 0) {\n                return {};\n            } else {\n                SessionCookies.set('current_step', newStep);\n                return { step: newStep };\n            }\n        });\n    };\n\n    goToStep = (stepNum) => {\n        if (stepNum < 0 || stepNum >= this.questions.order.length) {\n            return;\n        }\n        this.changeStep(stepNum);\n    };\n\n    cancelQuiz = () => {\n        this.changeStep(0);\n        this.props.restartQuiz();\n    };\n\n    render() {\n\n        // Steps\n        let steps = [];\n        const stepCount = this.questions.order.length;\n        for (let i = 0; i < stepCount; ++i) {\n            const qstep = this.questions.order[i];\n            let step = {\n                title: this.questions.spec[qstep].t,\n                target: i,\n            };\n            if (typeof(this.props.answers[qstep]) !== 'undefined') {\n                step.clicked = () => { this.goToStep(i); };\n            }\n            steps.push(step);\n        }\n\n        // Question\n        let question = this.questions.order[this.state.step];\n        if (typeof question !== 'string') {\n            question = this.questions.order[0];\n        }\n        const qspec = this.questions.spec[question];\n\n        // Answers\n        const answerButtons = Object.keys(qspec.a)\n            .map((aKey) => {\n                let classNames = [ 'AnswerButton' ];\n                if (typeof this.props.answers[question] != 'undefined') {\n                    if (this.props.answers[question] === aKey) {\n                        classNames.push('Selected');\n                    }\n                }\n                return {\n                    key: aKey,\n                    classNames: classNames,\n                    clicked: () => { this.clickAnswer(aKey); },\n                    text: qspec.a[aKey]\n                };\n            });\n\n        // Links\n        const links = [\n            {\n                classNames: [ 'BackLink' ],\n                clicked: this.goBack,\n                text: 'go back'\n            },\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: this.cancelQuiz,\n                text: 'restart quiz'\n            }\n        ];\n\n        return (\n            <div className=\"Quiz\">\n                <StepCounter\n                    steps={steps}\n                    currentStep={this.state.step} />\n                <Question\n                    questionText={qspec.q}\n                    helpText={qspec.help} />\n                <Controls\n                    buttonLayout={qspec.layout}\n                    buttons={answerButtons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default Quiz;\n","import React from 'react';\n\nimport './AnswerList.css';\n\nconst answerList = (props) => {\n\n    // TODO: Add edit functionality\n    // <button class=\"EditButton\" title=\"Edit answer\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span>edit</span></button>\n    const answerList = props.questions.order\n        .map((question) => {\n            const qtext = props.questions.spec[question].q;\n            const atext = props.questions.spec[question].a[props.answers[question]];\n            return (\n                <li key={question}>\n                    <div className=\"QuestionConfirm\">{qtext}</div>\n                    <div className=\"AnswerConfirm\">{atext}</div>\n                </li>\n            );\n        });\n\n    return (\n        <div className=\"Answers\">\n            <h3 className=\"AnswersHeader\">Please confirm your answers</h3>\n            <ul>\n                {answerList}\n            </ul>\n        </div>\n    );\n\n};\n\nexport default answerList;\n","import axios from 'axios';\n\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/v1.0' : 'http://localhost2:3001/api/v1.0';\n\nclass Api {\n\n    // This will be created when it's needed\n    axiosInstance = null;\n\n    getAxios() {\n        if (this.axiosInstance === null) {\n            this.axiosInstance = axios.create({\n                baseURL: BASE_URL,\n            });\n        }\n        return this.axiosInstance;\n    }\n\n    recordResponse(data) {\n        return this.getAxios().post('/record', data);\n    }\n\n    checkLogin(data) {\n        return this.getAxios().post('/login', data);\n    }\n\n    checkToken(data) {\n        return this.getAxios().post('/session', data);\n    }\n}\n\nexport default new Api();\n","import React, { Component } from 'react';\n\nimport AnswerList from '../../../components/BenefitsTool/AnswerList/AnswerList';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Api from '../../../utils/Api';\n\nimport QuestionsData from '../../../data/questions.json';\n\nclass Confirmation extends Component {\n\n    state = {\n        loading: false,\n        email: '',\n        zip: '',\n        emailError: false,\n        zipError: false,\n        saveError: false\n    };\n\n    questions = QuestionsData;\n\n    confirmAnswers = () => {\n        const data = {\n            visitor_id: this.props.visitor_id,\n            answers: {}\n        };\n        for (const question of this.questions.order) {\n            const letter = this.props.answers[question];\n            const answer = this.questions.spec[question].a[letter];\n            data.answers[question] = answer.toUpperCase();\n        }\n        this.setState({ loading: true });\n        // TODO: Add email and zip intake\n        // TODO: Add response editing\n        Api.recordResponse(data)\n            .then(response => {\n                console.log(response);\n                this.setState({ loading: false });\n                this.props.confirmAnswers();\n            })\n            .catch(error => {\n                // We probably just want to continue if this is a disaster?\n                this.setState({ loading: false });\n                console.log(error);\n            });\n    };\n\n    render() {\n        const buttons = [\n            {\n                classNames: [ 'ConfirmButton' ],\n                clicked: this.confirmAnswers,\n                text: 'Confirm'\n            }\n        ];\n        if (this.state.loading) {\n            buttons[0].disabled = true;\n        }\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: this.props.restartQuiz,\n                text: 'restart quiz'\n            }\n        ];\n        return (\n            <div className=\"Confirmation\">\n                <AnswerList\n                    questions={this.questions}\n                    answers={this.props.answers}\n                    edited={(q, a) => this.props.editAnswer(q, a)} />\n                <Controls\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default Confirmation;\n","import React from 'react';\n\nconst response = (props) => {\n    let i = 0;\n    let answer = props.answerSections.map((section) => {\n            let items = [];\n            if (section.header) {\n                items.push(<h3 key={i}>{section.header}</h3>);\n                ++i;\n            }\n            for (const para of section.text) {\n                items.push(<p key={i}>{para}</p>);\n                ++i;\n            }\n            return items;\n        });\n    let resourceBlock = null;\n    if (props.resources.length > 0) {\n        let j = 0;\n        let linkList = props.resources.map((link) => {\n            ++j;\n            return <li key={j}><a href={link.href} title={link.title}>{link.text}</a></li>\n        });\n        resourceBlock = (\n            <div className=\"Resources\">\n                <h4>Resources</h4>\n                <ul>\n                    {linkList}\n                </ul>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <h2>{props.header}</h2>\n            {answer}\n            {resourceBlock}\n        </div>\n    );\n};\n\nexport default response;\n","import React, { Component } from 'react';\n\nimport Response from '../../../components/BenefitsTool/Response/Response';\nimport Controls from '../../../components/UI/Controls/Controls';\n\nimport BENEFITS from '../../../data/benefits.json';\nimport ResponsesData from '../../../data/responses.json';\n\n// TODO: rename responses data to something like language\n// TODO: add all other text\n\nclass Results extends Component {\n\n    responses = ResponsesData;\n\n    // This will be loaded on mount\n    benefitResponses = null;\n\n    customAnswers = {\n        splitTypeByEssential: (answers) => {\n            if (answers.type === 'D') {\n                return 'E';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitTypeByHomeCare: (answers) => {\n            if (answers.type === 'C' || answers.type === 'D') {\n                return 'H';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByTaxes: (answers) => {\n            if (answers.books === 'A' || answers.books === 'B') {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByCompliance: (answers) => {\n            if (answers.books === 'A') {\n                return 'C';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitLengthByYear: (answers) => {\n            if (answers['length of employment'] === 'C') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        splitLengthByMonths: (answers) => {\n            if (answers['length of employment'] === 'A') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        // For FFCRA, reasons break down as--\n        // * self-quarantine + school closed + any [B]\n        // * self-quarantine + any (but not school closed) [Q]\n        // * school closed + any (but not self-quarantine) [S]\n        // * family quarantine and/or stay at home [F]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForFFCRA: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' &&\n                answers['school closed'] === 'A'\n            ) {\n                return 'B';\n            }\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['family quarantine'] === 'A' ||\n                answers['stay at home'] === 'A'\n            ) {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['stay at home'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n        // For NYS, reasons break down as--\n        // * self-quarantine or family quarantine + any [Q]\n        // * school closed (but not either quarantine) + any [Q]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForNYS: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' ||\n                answers['family quarantine'] === 'A'\n            ) {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n    };\n\n    loadBenefitResponses() {\n        let responses = {};\n        for (const benefit of BENEFITS.order) {\n            let r = null;\n            try {\n                r = require('../../../data/benefits/' + benefit + '.json');\n            } catch {\n                r = null;\n            }\n            if (r) {\n                responses[benefit] = r;\n            } else {\n                responses[benefit] = [];\n            }\n        }\n        this.benefitResponses = responses;\n    }\n\n    buildAnswerKey(benefit) {\n        let answerKey = {};\n        for (const q of BENEFITS.spec[benefit].conditions.simple) {\n            answerKey[q] = this.props.answers[q];\n        }\n        for (const k of Object.keys(BENEFITS.spec[benefit].conditions.complex)) {\n            let m = BENEFITS.spec[benefit].conditions.complex[k];\n            answerKey[k] = this.customAnswers[m](this.props.answers);\n        }\n        return answerKey;\n    }\n\n    replaceEmployeeType(template) {\n        let employeeType = 'employee';\n        if (this.props.answers.type === 'A') {\n            employeeType = 'nanny';\n        } else if (this.props.answers.type === 'B') {\n            employeeType = 'house cleaner';\n        } else if (this.props.answers.type === 'C') {\n            employeeType = 'home attendant';\n        } else if (this.props.answers.type === 'D') {\n            employeeType = 'home health care worker';\n        }\n        return template.map((item) => {\n            return item.replace(/\\{\\{employee_type\\}\\}/g, employeeType);\n        });\n    }\n\n    getFinalAnswer() {\n        let sections = [];\n        let resources = [];\n\n        // For each benefit, see if we have any text to add\n        if (this.benefitResponses === null) {\n            this.loadBenefitResponses();\n        }\n        for (const b of BENEFITS.order) {\n            let template = [];\n\n            // Build the answer key\n            let answerKey = this.buildAnswerKey(b);\n\n            // Loop through and check for a matching response\n            for (const r of this.benefitResponses[b]) {\n                let match = true;\n                for (const c of Object.keys(r.conditions)) {\n                    if (answerKey[c] !== r.conditions[c]) {\n                        match = false;\n                    }\n                }\n                if (match) {\n                    template = r.text;\n                    break;\n                }\n            }\n\n            // If we have something to send back, replace the employee type and add a section\n            if (template.length > 0) {\n                sections.push({\n                    header: BENEFITS.spec[b].long,\n                    text: this.replaceEmployeeType(template)\n                });\n                resources.push({\n                    text: BENEFITS.spec[b].short,\n                    title: BENEFITS.spec[b].long,\n                    href: BENEFITS.spec[b].link\n                });\n            }\n        }\n\n        if (sections.length < 1) {\n            // Set the default text if we don't have anything to show\n            sections.push({\n                header: '',\n                text: this.replaceEmployeeType(this.responses.defaultNoBenefits)\n            });\n        } else {\n            // Or add the intro text if we do\n            sections.unshift({\n                header: '',\n                text: this.replaceEmployeeType(this.responses.introWithBenefits)\n            });\n        }\n\n        // Add the retaliation tag\n        sections.push({\n            header: 'Warning',\n            text: this.replaceEmployeeType(this.responses.retaliationWarning)\n        });\n\n        return {\n            sections: sections,\n            resources: resources\n        };\n    }\n\n    render() {\n        const header = this.replaceEmployeeType(this.responses.standardHeader);\n        const finalAnswer = this.getFinalAnswer();\n        const buttons = [\n            {\n                classNames: [ 'CTAButton' ],\n                clicked: () => { window.open('https://domesticemployers.org/take-the-pledge/', '_blank'); },\n                text: 'Take the Pledge'\n            },\n            {\n                classNames: [ 'CTAButton' ],\n                text: 'CTA Button #2'\n            },\n            {\n                classNames: [ 'CTAButton' ],\n                text: 'CTA Button #3'\n            }\n        ];\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: this.props.restartQuiz,\n                text: 'restart quiz'\n            }\n        ];\n        return (\n            <div className=\"Results\">\n                <Response\n                    header={header}\n                    answerSections={finalAnswer.sections}\n                    resources={finalAnswer.resources} />\n                <Controls\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default Results;\n","import React from 'react';\n\nimport Controls from '../../UI/Controls/Controls';\n\nconst intro = (props) => {\n\n    const buttons = [\n        {\n            classNames: [ 'StartButton' ],\n            clicked: props.clicked,\n            text: 'Start'\n        }\n    ];\n\n    return (\n        <div>\n            <h2>Welcome to the COVID-19 Employer Benefits Tool</h2>\n\n            <p>Domestic workers do the work that makes all other work possible. It's crucial to recognize the work of nannies, house cleaners and home attendants who are on the frontlines of our response to COVID-19.</p>\n\n            <p>This tool makes it easier for employers to discover what benefits their employees are entitled to, and provides links to find out more or apply.</p>\n\n            <p><strong>NB:</strong> This tool is currently a DRAFT.</p>\n\n            <Controls buttons={buttons} />\n        </div>\n    );\n};\n\nexport default intro;\n","import CookieManager from './CookieManager';\n\nconst VISITOR_COOKIE = 'hnct-visitor';\n\nconst visitorCookie = {\n\n    get: () => {\n        return CookieManager.get(VISITOR_COOKIE);\n    },\n\n    set: (visitor_id) => {\n        return CookieManager.set(VISITOR_COOKIE, visitor_id, {\n            path: '/',\n            maxAge: 60 * 60 * 24 * 365,\n            sameSite: 'strict'\n        });\n    }\n\n};\n\nexport default visitorCookie;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Quiz from './Quiz/Quiz';\nimport Confirmation from './Confirmation/Confirmation';\nimport Results from './Results/Results';\nimport Intro from '../../components/BenefitsTool/Intro/Intro';\nimport SessionCookies from '../../utils/SessionCookies';\nimport VisitorCookie from '../../utils/VisitorCookie';\n\nimport QuestionsData from '../../data/questions.json';\n\n// TODO: Cookie notice\n\nclass BenefitsTool extends Component {\n\n    state = {\n        visitor_id: null,\n        started: false,\n        completed: false,\n        confirmed: false, \n        answers: {}\n    };\n\n    flags = [ 'started', 'completed', 'confirmed' ];\n\n    questions = QuestionsData;\n\n    componentDidMount() {\n        let newstate = {};\n        let visitor_id = VisitorCookie.get();\n        if (visitor_id) {\n            newstate.visitor_id = visitor_id;\n        } else {\n            let visitor_id = uuidv4();\n            VisitorCookie.set(visitor_id);\n        }\n\n        newstate.answers = {};\n        let sess_answers = SessionCookies.get('answers');\n        if (sess_answers) {\n            for (const sess_question in sess_answers) {\n                if (sess_question in this.questions.spec) {\n                    const sess_answer = sess_answers[sess_question];\n                    if (sess_answer in this.questions.spec[sess_question].a) {\n                        newstate.answers[sess_question] = sess_answer;\n                    }\n                }\n            }\n        }\n\n        let flags = SessionCookies.get('flags');\n        if (flags) {\n            for (const flag of this.flags) {\n                if (flags[flag]) {\n                    newstate[flag] = true;\n                }\n            }\n        }\n\n        this.setState(newstate);\n    }\n\n    updateSession(newstate) {\n        this.setState(newstate);\n        let todo = {};\n        if ('answers' in newstate) {\n            todo.answers = newstate.answers;\n        }\n        let todo_flags = {};\n        for (const flag of this.flags) {\n            if (flag in newstate) {\n                todo_flags[flag] = newstate[flag];\n            }\n        }\n        if (Object.keys(todo_flags).length > 0) {\n            todo.flags = todo_flags;\n        }\n        for (const key in todo) {\n            SessionCookies.set(key, todo[key]);\n        }\n    }\n\n    startQuiz = () => {\n        this.updateSession({ \n            started: true,\n            answers: {}\n        });\n    };\n\n    editAnswer = (qcode, letter, completed) => {\n        let newAnswers = { ...this.state.answers };\n        if (typeof this.questions.spec[qcode] === 'undefined' ||\n            typeof this.questions.spec[qcode].a[letter] === 'undefined') {\n            return;\n        }\n        newAnswers[qcode] = letter;\n        let newstate = { answers: newAnswers };\n        if (completed) {\n            newstate.completed = true;\n        }\n        this.updateSession(newstate);\n    };\n\n    restartQuiz = () => {\n        this.updateSession({ \n            started: false,\n            completed: false,\n            confirmed: false,\n            answers: {}\n        });\n    };\n\n    confirmAnswers = () => {\n        this.updateSession({ \n            confirmed: true\n        });\n    };\n\n    render() {\n\n        // Default to the intro\n        let body = <Intro clicked={this.startQuiz} />;\n\n        // If we're done, find the response\n        if (this.state.confirmed) {\n            body = <Results\n                answers={this.state.answers}\n                restartQuiz={this.restartQuiz} />;\n\n        // If we're done answering questions, show a confirm\n        } else if (this.state.completed) {\n            body = <Confirmation\n                visitor_id={this.state.visitor_id}\n                answers={this.state.answers}\n                confirmAnswers={this.confirmAnswers}\n                editAnswer={this.editAnswer}\n                restartQuiz={this.restartQuiz} />;\n\n        // Otherwise, show the quiz\n        } else if (this.state.started) {\n            body = <Quiz\n                answers={this.state.answers}\n                editAnswer={this.editAnswer}\n                restartQuiz={this.restartQuiz} />\n        }\n\n        return (\n            <div className=\"BenefitsTool\">\n                {body}\n            </div>\n        );\n    }\n\n}\n\nexport default BenefitsTool;\n","import React from 'react';\n\nimport './LoginBox.css';\n\nconst loginBox = (props) => {\n    let button = null;\n    if (props.loading) {\n        button = <button disabled=\"disabled\" className=\"Loading\">Submit</button>;\n    } else {\n        button = <button type=\"submit\">Submit</button>;\n    }\n\n    return (\n        <div className=\"LoginBox\">\n            {props.loginError ?\n                <div class=\"Error\">You could not be logged in.</div>\n            : null}\n            <form method=\"post\" onSubmit={props.submitted}>\n                <label>Username</label>\n                <input type=\"text\" name=\"username\" value={props.username} onChange={props.usernameChanged} autoComplete=\"username\" />\n                <label>Password</label>\n                <input type=\"password\" name=\"password\" value={props.password} onChange={props.passwordChanged} autoComplete=\"current-password\" />\n                <div className=\"ButtonContainer\">\n                    {button}\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default loginBox;\n","import React, { Component } from 'react';\n\nimport LoginBox from '../../components/LoginBox/LoginBox';\nimport Api from '../../utils/Api';\n\nclass Login extends Component {\n\n    state = {\n        loading: false,\n        username: '',\n        password: '',\n        loginError: false\n    };\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    };\n\n    changePassword = (e) => {\n        this.setState({ password: e.target.value });\n    };\n\n    validate = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true,\n            loginError: false\n        });\n        Api.checkLogin({\n            username: this.state.username,\n            password: this.state.password\n        })\n        .then(response => {\n            this.setState({\n                loading: false,\n            });\n            this.props.updateLoginState(response.data.token);\n            console.log(response);\n        })\n        .catch(error => {\n            console.log(error);\n            this.setState({ \n                loading: false,\n                loginError: true\n            });\n        });\n    }\n\n    render() {\n        return <LoginBox\n            loading={this.state.loading}\n            loginError={this.state.loginError}\n            username={this.state.username}\n            password={this.state.password}\n            usernameChanged={this.changeUsername}\n            passwordChanged={this.changePassword}\n            submitted={this.validate} />;\n    }\n\n}\n\nexport default Login;\n","import CookieManager from './CookieManager';\n\nconst LOGIN_COOKIE = 'hnct-prelaunch';\n\nconst loginCookie = {\n\n    get: () => {\n        return CookieManager.get(LOGIN_COOKIE);\n    },\n\n    set: (session_id) => {\n        return CookieManager.set(LOGIN_COOKIE, session_id, {\n            path: '/',\n            maxAge: 60 * 60,\n            sameSite: 'strict'\n        });\n    }\n\n};\n\nexport default loginCookie;\n","import React, { Component } from 'react';\n\nimport Layout from './hoc/Layout/Layout';\nimport LoginLayout from './hoc/LoginLayout/LoginLayout';\nimport BenefitsTool from './containers/BenefitsTool/BenefitsTool';\nimport Login from './containers/Login/Login';\nimport LoginCookie from './utils/LoginCookie';\nimport Api from './utils/Api';\n\nimport './App.css';\n\nclass App extends Component {\n\n    state = {\n        loggedIn: false,\n    };\n\n    updateLogin = (token) => {\n        this.setState({ loggedIn: true });\n        LoginCookie.set(token);\n    };\n\n    componentDidMount() {\n        let token = LoginCookie.get();\n        if (token) {\n            Api.checkToken({ token: token })\n                .then(response => {\n                    this.setState({ loggedIn: true });\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    }\n    render() {\n        let layout = null;\n        if (this.state.loggedIn) {\n            layout = (\n                <Layout>\n                    <BenefitsTool />\n                </Layout>\n            );\n        } else {\n            layout = (\n                <LoginLayout>\n                    <Login updateLoginState={this.updateLogin} />\n                </LoginLayout>\n            );\n        }\n        return (\n            <div className=\"App\">\n                {layout}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}