{"version":3,"sources":["storage/CookieBase.js","utils/CookieManager.js","components/UI/Spinner/Spinner.js","hoc/Aux/Aux.js","hoc/Layout/Layout.js","components/UI/IconButton/IconButton.js","components/UI/Message/Message.js","components/UI/Controls/Controls.js","components/BenefitsTool/Intro/Intro.js","storage/cookies/IdentifierCookie.js","storage/Api.js","utils/Logger.js","storage/cookies/LanguageCookie.js","utils/Language.js","containers/BenefitsTool/Landing/Landing.js","components/BenefitsTool/StepCounter/StepCounter.js","components/BenefitsTool/Question/Question.js","logic/Questions.js","containers/BenefitsTool/Quiz/Quiz.js","components/BenefitsTool/AnswerList/ViewAnswer/ViewAnswer.js","components/BenefitsTool/AnswerList/EditAnswer/EditAnswer.js","components/BenefitsTool/AnswerList/AnswerList.js","containers/BenefitsTool/Confirmation/EditAnswers/EditAnswers.js","components/BenefitsTool/ContactInfo/ContactInfo.js","containers/BenefitsTool/Confirmation/Confirmation.js","components/UI/LinkList/LinkList.js","components/UI/ExpandedSection/ExpandedSection.js","components/BenefitsTool/Response/Response.js","logic/results/Screening.js","logic/results/Eligibility.js","logic/results/ProcessText.js","logic/results/Resources.js","logic/CollectResults.js","containers/BenefitsTool/Results/Results.js","components/BenefitsTool/Basic/Basic.js","containers/BenefitsTool/Disclaimer/Disclaimer.js","storage/cookies/AnswersCookie.js","storage/cookies/VisitorCookie.js","containers/BenefitsTool/BenefitsTool.js","hoc/AdminPage/AdminPage.js","components/Admin/DeployMessage/DeployMessage.js","components/UI/Table/Table.js","containers/Admin/Advanced/List/List.js","components/UI/ProcessingButton/ProcessingButton.js","components/UI/RawTextBox/RawTextBox.js","components/Admin/FunctionBox/FunctionBox.js","containers/Admin/Advanced/Save/Save.js","containers/Admin/Advanced/Load/Load.js","containers/Admin/Advanced/Replace/Replace.js","containers/Admin/Advanced/Advanced.js","containers/Admin/Results/List/List.js","components/UI/SelectFilters/SelectFilters.js","components/Admin/CompareTable/CompareTable.js","utils/Markdown.js","containers/Admin/Results/Filter/Filter.js","components/Admin/EditMarkdown/EditMarkdown.js","components/Admin/Form/Form.js","components/Admin/Form/Element/Element.js","containers/Admin/Results/Edit/Edit.js","containers/Admin/Results/Results.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Admin/ConfirmDeleteResource/ConfirmDeleteResource.js","components/Admin/ActionButtons/ActionButtons.js","containers/Admin/Resources/List/List.js","containers/Admin/Resources/Edit/Edit.js","containers/Admin/Resources/Resources.js","components/UI/SearchFilters/SearchFilters.js","containers/Admin/Language/List/List.js","containers/Admin/Language/Edit/Edit.js","containers/Admin/Language/Language.js","components/Admin/DashboardBlock/DashboardBlock.js","containers/Admin/Dashboard/Dashboard.js","hoc/AdminLayout/AdminLayout.js","components/LoginBox/LoginBox.js","containers/Login/Login.js","storage/cookies/LoginCookie.js","containers/Admin/Admin.js","components/UI/Notice/Notice.js","storage/cookies/CookieNoticeCookie.js","containers/CookieNotice/CookieNotice.js","containers/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["CookieBase","name","specs","compressed","filter","manager","CookieManager","this","val","get","cookieobj","expandData","cookiestring","contractData","set","remove","text","Buffer","toString","JSON","parse","e","console","log","stringify","cm","Cookies","spinner","props","classes","color","push","className","join","aux","children","layout","copyrightDate","Date","getFullYear","href","src","alt","lang","logo_alt_text","header_title","title","facebook_title","twitter_title","iconButton","icon","icon_type","add_class","onClick","clicked","append_text","message","type","tryagain_text","closed","tryagain","custom_button","controls","buttons","map","button","attributes","key","cname","classNames","disabled","links","link","errorMessage","length","buttonLayout","intro","header","dangerouslySetInnerHTML","__html","disclaimer_title","to","disclaimer_link","error","identifierCookie","path","maxAge","sameSite","axiosInstance","axios","create","baseURL","headers","info","toJSON","context","request_url","config","request_data","data","response","status","code","msg","request","visitor_id","on_success","on_error","token","IdentifierCookie","checkToken","then","catch","isAxiosError","parsed","parseAxiosError","Logger","alert","api_error","bumpSessionInit","initSession","returned","getAxios","post","id","which","version","uuid","LEVELS","logger_settings","level","options","cutoffLevel","cutoffLevelConsole","cutoffLevelApi","getLevelRank","clevel","console_level","alevel","api_level","levelNum","indexOf","writeToConsole","Api","trackError","languageCookie","TRANSLATIONS","en","English","TOKEN_OPTIONS","employee_type","Language","language_code","loaded","translations","allowed_languages","r","cookie_lang","LanguageCookie","includes","load","tokens","translation","get_raw","replace_tokens","Keys","markdown_allowed","markdown","match","init","doc","md","require","render","get_token_options","regexp","RegExp","replace","Landing","state","loaded_lang","startQuiz","setState","bumpSession","goToQuiz","errorOrMoveOn","current","clearAnswers","history","error_msg","Component","withRouter","stepCounter","bullets","i","steps","step","currentStep","question","questionText","helpText","question_order","question_spec","answer_count","help","agency","books","localized_data","english_data","qcode","letter","ascii","charCodeAt","letters","String","fromCharCode","answerKey","answers","validAnswer","loadLocalizedData","loadEnglishData","english_answers","answer","toUpperCase","confirmation","aspec","selected","Object","keys","sort","getData","Local","LangObj","lang_key","lc","uc","Quiz","hasError","clickAnswer","Questions","getCodeByStep","saveAnswer","count","newStep","currentUrlStep","goBack","err","goToStep","stepNum","warn","cancelQuiz","restartQuiz","error_message","back_link_text","restart_link_text","cancel_link_text","params","test","parseInt","isNaN","stepCount","getLocalSpec","target","qspec","answerButtons","aKey","viewAnswer","selectedAnswer","edit_title","clickedEdit","edit_alt","editAnswer","abuttons","btn","cancel_title","clickedCancel","cancel_alt","answerList","questions","answerBlock","isEditing","EditAnswer","ViewAnswer","EditAnswers","editingAnswer","edited","getLocalConfirmation","saveEdit","cancelEdit","startEdit","contactInfo","invitation","method","onSubmit","preventDefault","email_label","emailError","email_error","value","email","onChange","emailChanged","autoComplete","zip_label","zipError","zip_error","zip","zipChanged","Confirmation","loading","saveError","contactValidOrEmpty","hasRecordingError","regexValidZip","changeEmail","newstate","EmailValidator","okToSubmitContact","changeZip","confirmAnswers","getEnglishAnswers","trim","contact","recordResponse","edit_answers","confirm_button","restart_link","recording_error","validOrEmpty","goto","needsRedirect","q","a","linkList","elem","rel","description","class","ExpandedSection","useState","expanded","setExpanded","readmore_link","expanded_block","read_more","more_classes","read_less","resources","LinkList","resources_header","answerSections","section","resourceBlock","resources_intro","conditions","ConditionsData","firstPass","simple","splitTypeByEssential","splitBooksByTaxes","splitBooksByCompliance","splitLengthByYear","splitLengthByMonths","employedByYearAndHours","workForNYS","findReasonForFFCRA","rolling","findReasonForNYS","secondPass","eligibility","byBenefit","benefit","scenario","cond","pass","k","m","scenarios","newScenarios","ScenariosData","found","bdata","enabled","c","type_answer","type_replacement","typeAnswer","getAnswerLetters","toLowerCase","f","result_key","findTypeReplacement","ResourceData","benefits","other","BenefitsData","Screening","runFirstPass","Eligibility","screen","runSecondPass","ProcessText","setEmployeeType","process","sections","getAllSections","getOtherResources","benefitSections","getBenefitSections","getBooksSection","order","result","lang_key_result","lang_key_expanded","Resources","getBenefitResources","Results","clickCTAButton","window","open","scrollTo","results","CollectResults","compile","ctas","CtaData","Math","floor","random","cta","basic","body","back","back_title","back_link","Disclaimer","answersCookie","filterAnswers","visitorCookie","BenefitsTool","AnswersCookie","completed","newAnswers","ready","started","debug","q_code","VisitorCookie","uuidv4","doQuiz","component","adminPage","advanced","breadcrumbs","deployMessage","deployTime","DateTime","fromISO","DeployData","date_deployed","toLocaleString","DATETIME_FULL","version_num","table","header_cells","cols","h","body_rows","rows","cells","clickable","snip","full","short","substring","size","AdminAdvancedList","deploys","row","revertToRow","refresh","fetchDeploys","getAllDeploys","all","item","formatted","DATETIME_SHORT","url","getDownloadUrl","fname","download","deployment_id","deploy_date","Aux","DeployMessage","processingButton","content","doWork","working","rawTextBox","rawtext","contents","emptytext","functionBox","emptyText","boxContents","explainer","buttonText","successBox","AdminAdvancedSave","processing","process_data","download_info","deploy","deployAdmin","vnum","downloadLink","AdminAdvancedLoad","initDeploys","deployment","revertAdmin","getId","fetchDeployment","getDeploymentInfo","functionTitle","functionExplainer","toFormat","AdminAdvancedReplace","replaceDatabase","alldata","lang_en","LangEnData","lang_keys","LangKeysData","ResourcesData","replaceAdmin","AdminAdvanced","goToSave","goToList","goToReplace","doLoad","Load","Replace","AdminResultsList","language","editScenarios","editResources","fetchBenefits","editCommonResources","editCommonLanguage","getBenefits","abbreviation","selectFilters","empty","selects","select","option","label","changed","CompareTable","doChange","choice","layout_selector","AdminResultsFilter","filters","list_cols","list_snip","filterResponses","condition","getAttribute","selectedIndex","prevState","newFilters","setLayout","newLayout","fetchBenefit","getScenarios","key_name","markup","split","Markdown","condition_map","crumbs","selectProps","helpToElem","enabled_row","short_row","long_row","edit_row","eligibleFlag","markdownToElem","en_result","en_expanded","getEditLink","combined","EditMarkdown","viewtype","setViewType","replacement","setReplacement","previewText","setPreviewText","wrapped","setWrapped","highlighted","setHighlighted","toggle","doHelp","replacementButtons","doValueChange","newtext","replace_token","replace_options","preview","hlclasses","regexp1","TOKEN_REGEX_TAG_OPEN","regexp2","previewBox","minrows","editBox","minRows","defaultValue","adminForm","success","submitted","valid","button_text","adminElement","AdminResultsEdit","processing_error","saved","form","formValid","fetchScenario","submitForm","saveScenario","scenario_id","clickedEnabled","stopPropagation","newForm","copyForm","validate","changedResult","changedExpanded","getScenario","buildHelp","allhelp","scenarioLines","elements","checked","AdminResults","Edit","Filter","backdrop","show","modal","cancel","confirmDeleteResource","candidate","desc","confirm","confirming","actionButtons","AdminResourcesList","confirming_delete","delete_candidate","processing_delete","deleted","resources_clickable","delete","resources_snip","newResource","getBenefitCode","fetchResources","cancelDelete","confirmDelete","deleteResource","closeDeleteMessage","fetch_all","getResources","b_code","getBenefitInfo","resources_rows","resource","edit_link","en_text","en_desc","edit","resources_cols","AdminResourcesEdit","reload_id","all_benefits","benefit_id","link_en","changedBenefitID","changedLink","changedText","changedDescription","lang_key_text","lang_key_desc","form_id","NaN","b","saveResource","doNext","fetchResource","getResource","refreshForm","newState","markLoaded","oldForm","unshift","AdminResources","doEdit","doList","searchFilters","searches","search","clearButton","clear_title","cleared","SKIP_SECTIONS","AdminLanguageList","english","editRow","fetchLanguage","setSectionFilter","newFilter","doSearch","clearSearch","getAllLanguage","base","getSection","s","filterBySection","filterRows","tablerow","sectitle","w","AdminLanguageEdit","language_info","original_english","fetchInfo","changeEnglish","submitEdit","getKey","saveTranslation","getLanguageInfo","helptext","helpbox","input","elem_class","token_replace","AdminLanguage","dashboardBlock","AdminDashboard","responses_loaded","responses_error","responses","contacts_loaded","contacts_error","contacts","responses_headers","contacts_headers","refreshResponses","fetchRecentResponses","refreshContacts","fetchRecentContacts","getRecentResponses","recent","date","getRecentContacts","AdminLayout","exact","loginBox","loginError","login_error","username_label","username","usernameChanged","password_label","password","passwordChanged","Login","changeUsername","changePassword","login_type","checkPrelaunchLogin","checkAdminLogin","updateLoginState","loginCookie","Admin","loggedIn","updateLogin","LoginCookie","checkAdminToken","Dashboard","notice","accepted","accept_button_text","cookieNoticeCookie","CookieNotice","showNotice","noticeAccepted","hideNotice","acceptNotice","CookieNoticeCookie","close_alt","Main","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.2f1d81d5.chunk.js","sourcesContent":["import CookieManager from '../utils/CookieManager';\n\nclass CookieBase {\n\n    manager = CookieManager;\n    name = null;\n    specs = {};\n    compressed = false;\n    filter = null;\n\n    constructor(name, specs, compressed, filter) {\n        this.name = name;\n        this.specs = typeof(specs) === 'object' ? specs : {};\n        this.compressed = compressed ? true : false;\n        this.filter = typeof(filter) === 'function' ? filter : null;\n    }\n\n    get() {\n        let val = this.manager.get(this.name);\n        if (this.compressed) {\n            let cookieobj = this.expandData(val);\n            if (cookieobj === null) {\n                return {};\n            }\n            val = cookieobj;\n        }\n        if (this.filter) {\n            return this.filter(val);\n        }\n        return val;\n    }\n\n    set(val) {\n        if (this.filter) {\n            val = this.filter(val);\n        }\n        if (this.compressed) {\n            let cookiestring = this.contractData(val);\n            if (cookiestring) {\n                val = cookiestring;\n            }\n        }\n        return this.manager.set(this.name, val, this.specs);\n    }\n\n    remove() {\n        this.manager.remove(this.name);\n    }\n\n    expandData(cookiestring) {\n        let cookieobj = {};\n        try {\n            let buff = new Buffer(cookiestring, 'base64');\n            let text = buff.toString('utf8');\n            cookieobj = JSON.parse(text);\n        } catch (e) {\n            console.log('Cookie value was not valid json; starting over');\n            return null;\n        }\n        return cookieobj;\n    }\n\n    contractData(cookieobj) {\n        const text = JSON.stringify(cookieobj);\n        let buff = new Buffer(text);\n        return buff.toString('base64');\n    }\n\n};\n\nexport default CookieBase;\n\n","import Cookies from 'universal-cookie';\n\nconst cm = new Cookies();\n\nexport default cm;\n","import React from 'react';\n\nimport './Spinner.css';\n\n// NB: We can't use language here because this is what we show when language data isn't loaded!\n\nconst spinner = (props) => {\n    let classes = [ 'Spinner' ];\n    if (props.color === 'gray-flipped') {\n        classes.push('GrayFlipped');\n    }\n    return (\n        <div className={classes.join(' ')}><span>Loading...</span></div>\n    );\n};\n\nexport default spinner;\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport './Layout.css';\n\nconst layout = (props) => {\n\n    const copyrightDate = (new Date()).getFullYear();\n\n    return (\n        <div className=\"BenefitsTool\">\n            <div className=\"Logo\">\n                <a href=\"https://domesticemployers.org/\"><img src=\"/images/logo.png\" alt={props.lang.logo_alt_text} /></a>\n            </div>\n            <div className=\"Header\">\n                <h1><a href=\"/\">{props.lang.header_title}</a></h1>\n            </div>\n            <div className=\"MainContent\">\n                {props.children}\n            </div>\n            <div className=\"Footer\">\n                <ul className=\"SocialIcons\">\n                    <li><a href=\"https://www.facebook.com/domesticemployers/\"><i className=\"fab fa-facebook-f\" title={props.lang.facebook_title}></i></a></li>\n                    <li><a href=\"https://twitter.com/HiHemployers\"><i className=\"fab fa-twitter\" title={props.lang.twitter_title}></i></a></li>\n                </ul>\n                <ul className=\"Links\">\n                    <li><a href=\"https://domesticemployers.org/\">&copy; {copyrightDate} Hand In Hand</a></li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default layout;\n","import React from 'react';\n\nimport './IconButton.css';\n\nconst iconButton = (props) => {\n    let classes = [ 'IconButton' ];\n    let title = null;\n    let icon = 'fas fa-question';\n    if (props.icon_type === 'refresh') {\n        title = 'refresh';\n        icon = 'fas fa-sync-alt';\n    } else if (props.icon_type === 'edit') {\n        title = 'edit';\n        icon = 'fas fa-pencil-alt';\n    } else if (props.icon_type === 'preview') {\n        title = 'preview';\n        icon = 'far fa-eye';\n    } else if (props.icon_type === 'new') {\n        title = 'new';\n        icon = 'fas fa-plus-circle';\n    } else if (props.icon_type === 'close') {\n        title = 'close';\n        icon = 'fas fa-times';\n    }\n    if (props.title) {\n        title = props.title;\n    }\n    if (props.icon) {\n        icon = props.icon;\n    }\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n    return (\n        <button className={classes.join(' ')} onClick={props.clicked}>\n            <i className={icon} title={title}></i>\n            {props.append_text ?\n                <span>{props.append_text}</span>\n            : null}\n        </button>\n    );\n};\n\nexport default iconButton;\n","import React from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './Message.css';\n\nconst message = (props) => {\n    let classes = [ 'Message' ];\n    if (props.type === 'error') {\n        classes.push('ErrorMessage');\n    } else if (props.type === 'success') {\n        classes.push('SuccessMessage');\n    }\n    let tryagain_text = props.tryagain_text ? props.tryagain_text : 'Try Again?';\n    return (\n        <div className={classes.join(' ')}>\n            {props.closed ?\n                <div className=\"CloseButton\">\n                    <IconButton icon_type=\"close\"\n                        clicked={props.closed} />\n                </div>\n            : null}\n            <p>{props.text}</p>\n            {props.tryagain ?\n                <IconButton icon_type=\"refresh\"\n                    clicked={props.tryagain}\n                    title={tryagain_text} />\n            : null}\n            {props.custom_button}\n        </div>\n    );\n\n};\n\nexport default message;\n\n","import React from 'react';\n\nimport Message from '../Message/Message';\n\nimport './Controls.css';\n\nconst controls = (props) => {\n\n    let buttons = {};\n    if (typeof props.buttons !== 'undefined') {\n        buttons = props.buttons\n            .map((button) => {\n                let attributes = {\n                    key: button.key ? button.key : button.text,\n                };\n                let cname = 'ControlButton';\n                if (button.classNames) {\n                    cname += ' ' + button.classNames.join(' ');\n                }\n                if (button.disabled) {\n                    attributes.disabled = true;\n                    cname += ' DisabledButton';\n                }\n                if (typeof button.clicked === 'function') {\n                    attributes.onClick = button.clicked;\n                }\n                attributes.className = cname;\n                return <button {...attributes}>{button.text}</button>;\n            });\n    }\n\n    let links = {};\n    if (typeof props.links !== 'undefined') {\n        links = props.links\n            .map((link) => {\n                let cname = 'ControlLink';\n                if (link.classNames) {\n                    cname += ' ' + link.classNames.join(' ');\n                }\n                return <div key={link.key ? link.key : link.text} className={cname} onClick={link.clicked}>{link.text}</div>;\n            });\n    }\n\n    return (\n        <div className=\"Controls\">\n        {props.errorMessage ?\n            <Message type=\"error\" text={props.errorMessage} />\n        : null}\n        {buttons.length > 0 ?\n            <div className={props.buttonLayout === 'vert' ? 'VertButtonContainer' : 'ButtonContainer'}>\n                {buttons}\n            </div>\n        : null}\n        {links.length > 0 ?\n            <div className=\"LinkContainer\">\n                {links}\n            </div>\n        : null}\n        </div>\n    );\n\n};\n\nexport default controls;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Controls from '../../UI/Controls/Controls';\n\nimport './Intro.css';\n\nconst intro = (props) => {\n\n    const buttons = [\n        {\n            classNames: [ 'StartButton' ],\n            clicked: props.clicked,\n            text: 'Start'\n        }\n    ];\n\n    return (\n        <div>\n            <h2>{props.lang.header}</h2>\n\n            <div className=\"IntroMessage\" dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n\n            <div className=\"DisclaimerLink\" title={props.lang.disclaimer_title}>\n                <Link to=\"/disclaimer\">{props.lang.disclaimer_link}</Link>\n            </div>\n\n            <Controls buttons={buttons} errorMessage={props.error} />\n        </div>\n    );\n};\n\nexport default intro;\n","import CookieBase from '../CookieBase';\n\nconst identifierCookie = new CookieBase(\n    'hnct-sessionid', // name\n    {\n        path: '/',\n        maxAge: 60 * 10,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default identifierCookie;\n","import axios from 'axios';\n\nimport IdentifierCookie from './cookies/IdentifierCookie';\nimport Logger from '../utils/Logger';\n\nconst BASE_BACKEND = process.env.NODE_ENV === 'production' ? '' : 'http://localhost2:3001';\nconst BASE_URL = BASE_BACKEND + '/api/v1.0';\n\nclass Api {\n\n    // This will be created when it's needed\n    axiosInstance = null;\n\n    getAxios() {\n        if (this.axiosInstance === null) {\n            this.axiosInstance = axios.create({\n                baseURL: BASE_URL,\n                headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\",\n                }\n            });\n        }\n        return this.axiosInstance;\n    }\n\n    parseAxiosError(error) {\n        const info = error.toJSON();\n        let context = {\n            message: info.message,\n            request_url: info.config.baseURL,\n            request_data: info.config.data\n        };\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            context.status = error.response.status;\n            return {\n                code: error.response.data.code,\n                message: error.response.data.msg,\n                context: context\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            return {\n                code: 'NETWORK_FAILURE',\n                message: context.message,\n                context: context\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            return {\n                code: 'UNKNOWN',\n                message: error.message,\n                context: context\n            };\n        }\n    }\n\n    // Front end\n\n    bumpSession(visitor_id, on_success, on_error) {\n        let token = IdentifierCookie.get();\n        if (token) {\n            this.checkToken({ visitor_id: visitor_id, token: token })\n                .then(response => {\n                    IdentifierCookie.set(token); // re-up on the expiration\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = this.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Session check failed', { api_error: parsed });\n                        if (typeof on_error === 'function') {\n                            on_error();\n                        }\n                    }\n                    this.bumpSessionInit(visitor_id, on_success, on_error);\n                });\n        } else {\n            this.bumpSessionInit(visitor_id, on_success, on_error);\n        }\n    }\n\n    bumpSessionInit(visitor_id, on_success, on_error) {\n        this.initSession({ visitor_id: visitor_id })\n            .then(response => {\n                if (response.data.token) {\n                    IdentifierCookie.set(response.data.token);\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                } else {\n                    Logger.alert('Session init succeeded without returning a token', { returned: response.data });\n                    if (typeof on_error === 'function') {\n                        on_error();\n                    }\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = this.parseAxiosError(error);\n                Logger.alert('Session init failed', { api_error: parsed });\n                if (typeof on_error === 'function') {\n                    on_error();\n                }\n            });\n    }\n\n    initSession(data) {\n        return this.getAxios().post('/session/init', data);\n    }\n\n    checkToken(data) {\n        return this.getAxios().post('/session/check', data);\n    }\n\n    recordResponse(data) {\n        return this.getAxios().post('/response', data);\n    }\n\n    // Admin\n\n    checkAdminLogin(data) {\n        return this.getAxios().post('/admin/session/login', data);\n    }\n\n    checkAdminToken(data) {\n        return this.getAxios().post('/admin/session/check', data);\n    }\n\n    getRecentResponses(data) {\n        return this.getAxios().post('/admin/responses/recent', data);\n    }\n\n    getRecentContacts(data) {\n        return this.getAxios().post('/admin/contacts/recent', data);\n    }\n\n    getAllLanguage(data) {\n        return this.getAxios().post('/admin/language', data);\n    }\n\n    getLanguageForSection(data) {\n        return this.getAxios().post('/admin/language/section', data);\n    }\n\n    getLanguageInfo(data) {\n        return this.getAxios().post('/admin/language/info', data);\n    }\n\n    saveTranslation(data) {\n        return this.getAxios().post('/admin/language/save', data);\n    }\n\n    getBenefits(data) {\n        return this.getAxios().post('/admin/benefits', data);\n    }\n\n    getBenefitInfo(code, data) {\n        return this.getAxios().post('/admin/benefits/' + code, data);\n    }\n\n    getScenarios(code, data) {\n        return this.getAxios().post('/admin/benefits/' + code + '/scenarios', data);\n    }\n\n    getScenario(code, id, data) {\n        return this.getAxios().post('/admin/benefits/' + code + '/scenario/' + id, data);\n    }\n\n    saveScenario(code, id, data) {\n        return this.getAxios().post('/admin/benefits/' + code + '/scenario/' + id + '/save', data);\n    }\n\n    getResources(data, which) {\n        if (which) {\n            return this.getAxios().post('/admin/resources/' + which, data);\n        } else {\n            return this.getAxios().post('/admin/resources', data);\n        }\n    }\n\n    getResource(id, data) {\n        return this.getAxios().post('/admin/resources/info/' + id, data);\n    }\n\n    saveResource(data) {\n        return this.getAxios().post('/admin/resources/save', data);\n    }\n\n    deleteResource(data) {\n        return this.getAxios().post('/admin/resources/delete', data);\n    }\n\n    getAllDeploys(data) {\n        return this.getAxios().post('/admin/deploy', data);\n    }\n\n    getDeploymentInfo(data) {\n        return this.getAxios().post('/admin/deploy/info', data);\n    }\n\n    revertAdmin(data) {\n        return this.getAxios().post('/admin/deploy/revert', data);\n    }\n\n    replaceAdmin(data) {\n        return this.getAxios().post('/admin/deploy/replace', data);\n    }\n\n    deployAdmin(data) {\n        return this.getAxios().post('/admin/deploy/save', data);\n    }\n\n    getDownloadUrl(version, uuid, token) {\n        return BASE_BACKEND + '/download/' + version + '/' + uuid + '/' + token;\n    }\n\n    // Prelaunch\n\n    checkPrelaunchLogin(data) {\n        return this.getAxios().post('/prelaunch/login', data);\n    }\n\n    checkPrelaunchToken(data) {\n        return this.getAxios().post('/prelaunch/check', data);\n    }\n}\n\nexport default new Api();\n","import Api from '../storage/Api';\n\nconst LEVELS = [\n    'EMERG',   // Emergency: system is unusable\n    'ALERT',   // Alert: action must be taken immediately\n    'CRIT',    // Critical: critical conditions\n    'ERR',     // Error: error conditions\n    'WARN',    // Warning: warning conditions\n    'NOTICE',  // Notice: normal but significant condition\n    'INFO',    // Informational: informational messages\n    'DEBUG'    // Debug: debug messages\n];\n\nclass Logger {\n\n    cutoffLevel = 0;\n    cutoffLevelConsole = 0;\n    cutoffLevelApi = 0;\n\n    constructor(level, options) {\n        this.cutoffLevel = this.getLevelRank(level ? level : 'WARN');\n        let clevel = 'DEBUG';\n        if (options && 'console_level' in options) {\n            clevel = options.console_level;\n        }\n        this.cutoffLevelConsole = this.getLevelRank(clevel);\n        let alevel = 'ALERT';\n        if (options && 'api_level' in options) {\n            alevel = options.api_level;\n        }\n        this.cutoffLevelApi = this.getLevelRank(alevel);\n    }\n\n    getLevelRank(level) {\n        const levelNum = LEVELS.indexOf[level];\n        if (levelNum < 0) {\n            this.writeToConsole('WARN', 'Log level ' + level + ' unknown');\n        }\n        return levelNum;\n    }\n\n    emerg(message, context) { this.log('EMERG', message, context); }\n    alert(message, context) { this.log('ALERT', message, context); }\n    crit(message, context) { this.log('CRIT', message, context); }\n    err(message, context) { this.log('ERR', message, context); }\n    warn(message, context) { this.log('WARN', message, context); }\n    notice(message, context) { this.log('NOTICE', message, context); }\n    info(message, context) { this.log('INFO', message, context); }\n    debug(message, context) { this.log('DEBUG', message, context); }\n\n    log(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevel) {\n            return;\n        }\n        this.writeToConsole(level, message, context);\n    }\n\n    writeToConsole(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelConsole) {\n            return;\n        }\n        console.log('[' + level + '] ' + message);\n        if (context) {\n            console.log(context);\n        }\n    }\n\n    writeToApi(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelApi) {\n            return;\n        }\n        const data = {\n            level: level,\n            message: message,\n            context: context\n        };\n        Api.trackError(data)\n            .then(response => {\n                // Log the response, but ignore it otherwise\n                console.log(response);\n            })\n            .catch(error => {\n                // Log the error, but ignore it otherwise\n                console.log(error);\n            });\n    }\n\n}\n\nlet logger_settings = {};\nif (process.env.NODE_ENV === 'production') {\n    logger_settings = {\n        level: 'NOTICE',\n        options: null\n    };\n} else {\n    logger_settings = {\n        level: 'DEBUG',\n        options: {\n            console_level: 'DEBUG'\n        }\n    };\n}\n\nexport default new Logger(logger_settings.level, logger_settings.options);\n","import CookieBase from '../CookieBase';\n\nconst languageCookie = new CookieBase(\n    'hnct-language', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default languageCookie;\n","import Logger from './Logger';\nimport LanguageCookie from '../storage/cookies/LanguageCookie';\n\nimport Keys from '../data/lang_keys.json';\n\nimport English from '../data/lang_en.json';\n\nconst TRANSLATIONS = {\n    en: English\n};\n\nconst TOKEN_OPTIONS = {\n    employee_type: [ 'nanny', 'house cleaner', 'home attendant', 'home health care worker' ],\n};\n\nconst TOKEN_REGEX_TAG_OPEN = '\\\\{\\\\{';\nconst TOKEN_REGEX_TAG_CLOSE = '\\\\}\\\\}';\n\nclass Language {\n\n    language_code = null;\n    loaded = false;\n    translations = null;\n    allowed_languages = [ 'en' ];\n\n    load(code) {\n        let r = null;\n        if (code in TRANSLATIONS) {\n            r = TRANSLATIONS[code];\n        } else {\n            Logger.alert('No such language', { lang: code });\n            return false;\n        }\n        this.translations = r;\n        this.language_code = code;\n        this.loaded = true;\n    }\n\n    init() {\n        let cookie_lang = LanguageCookie.get();\n        if (cookie_lang && this.allowed_languages.includes(cookie_lang)) {\n            this.load(cookie_lang);\n        } else {\n            this.load('en');\n        }\n    }\n\n    get(key, tokens) {\n        let translation = this.get_raw(key);\n        if (translation === null) {\n            return key;\n        }\n        if (tokens) {\n            translation = this.replace_tokens(translation, tokens);\n        }\n        if (key in Keys) {\n            if (Keys[key].markdown_allowed) {\n                translation = this.markdown(translation);\n                if (!translation.match(/^</)) {\n                    translation = '<p>' + translation + '</p>';\n                }\n            }\n        }\n        return translation;\n    }\n\n    get_raw(key) {\n        if (!this.loaded) {\n            this.init();\n            if (!this.loaded) {\n                Logger.alert('Translation was requested, but the current language could not be loaded ', { key: key });\n                return null;\n            }\n        }\n        if (key in this.translations) {\n            return this.translations[key];\n        } else {\n            if (key in Keys) {\n                Logger.alert('Missing translation', { lang: this.language_code, key: key, doc: Keys[key] });\n            } else {\n                Logger.alert('Translation requested for undocumented key', { key: key });\n            }\n        }\n        return null;\n    }\n\n    markdown(translation) {\n        if (!this.md) {\n            this.md = require('markdown-it')();\n        }\n        return this.md.render(translation);\n    }\n\n    replace_tokens(translation, tokens) {\n        for (const token in tokens) {\n            if (this.get_token_options(token).includes(tokens[token])) {\n                const regexp = new RegExp(TOKEN_REGEX_TAG_OPEN +\n                    token + TOKEN_REGEX_TAG_CLOSE, 'g');\n                translation = translation.replace(regexp, tokens[token]);\n            }\n        }\n        return translation;\n    }\n\n    get_token_options(token) {\n        if (token in TOKEN_OPTIONS) {\n            return TOKEN_OPTIONS[token];\n        }\n        return [];\n    }\n\n}\n\nexport { Language, TOKEN_REGEX_TAG_OPEN, TOKEN_REGEX_TAG_CLOSE };\nexport default new Language('en');\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Intro from '../../../components/BenefitsTool/Intro/Intro';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\n\nclass Landing extends Component {\n\n    state = {\n        loaded_lang: false,\n        error: false\n    };\n\n    lang = null;\n\n    startQuiz = () => {\n        this.setState({ error: false });\n        Api.bumpSession(this.props.visitor_id, () => {\n                this.goToQuiz();\n            },\n            () => {\n                this.errorOrMoveOn();\n            });\n    };\n\n    errorOrMoveOn() {\n        // These are alert-level errors for me the programmer, but not\n        // for the user -- if the API is malfunctioning, let's give it\n        // one chance to get over a hiccup, then send them on to the\n        // quiz page without getting a token to record their answers\n        this.setState((current) => {\n            if (current.error) {\n                this.goToQuiz();\n                return { error: false };\n            } else {\n                return { error: true };\n            }\n        });\n    }\n\n    goToQuiz() {\n        this.setState({ error: false }, () => {\n            this.props.clearAnswers();\n            this.props.history.push('/quiz');\n        });\n    }\n\n    componentDidMount() {\n        this.lang = {\n            header: Language.get('landing_header'),\n            message: Language.get('landing_message'),\n            error_msg: Language.get('landing_error'),\n            disclaimer_link: Language.get('landing_disclaimer_link'),\n            disclaimer_title: Language.get('landing_disclaimer_title')\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return <Intro\n            error={this.state.error ? this.lang.error_msg : null}\n            clicked={this.startQuiz}\n            lang={this.lang} />;\n    }\n}\n\nexport default withRouter(Landing);\n","import React from 'react';\n\nimport './StepCounter.css';\n\nconst stepCounter = (props) => {\n\n    let bullets = [];\n    for (let i = 0; i < props.steps.length; ++i) {\n        let step = props.steps[i];\n        let className = 'Bullet';\n        if (props.currentStep < i) {\n            className += ' Unvisited';\n        } else if (props.currentStep === i) {\n            className += ' Current';\n        } else {\n            className += ' Visited';\n        }\n        if (typeof(step.clicked) === 'function') {\n            className += ' Clickable';\n        }\n        bullets.push(<li key={step.title}\n            className={className}\n            title={step.title}\n            onClick={step.clicked}>&middot;</li>);\n    }\n\n    return (\n        <div className=\"StepCounter\">\n            <ul>\n                {bullets}\n            </ul>\n        </div>\n    );\n};\n\nexport default stepCounter;\n","import React from 'react';\n\nimport './Question.css';\n\nconst question = (props) => {\n    return (\n        <div className=\"Question\">\n            <h2 className=\"QuestionHeader\">{props.questionText}</h2>\n\n            {props.helpText ? <p className=\"Help\" dangerouslySetInnerHTML={{__html: props.helpText}}></p> : null}\n        </div>\n    );\n};\n\nexport default question;\n","\nimport Local, { Language } from '../utils/Language';\n\nconst ASCII_CODE_FOR_CAPITAL_A = 65;\n\nclass Questions {\n    question_order = [\n        'type', 'agency', 'books', 'hours per week',\n        'length of employment', 'hours per year', 'self-quarantine',\n        'family quarantine', 'stay at home', 'school closed'\n    ];\n\n    question_spec = {\n        type: {\n            answer_count: 4,\n            layout: 'vert',\n            help: true\n        },\n        agency: {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        books: {\n            answer_count: 3,\n            layout: 'horiz',\n            help: true\n        },\n        'hours per week': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'length of employment': {\n            answer_count: 3,\n            layout: 'horiz',\n            help: false\n        },\n        'hours per year': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'self-quarantine': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'family quarantine': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: true\n        },\n        'stay at home': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'school closed': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        }\n    };\n\n    localized_data = null;\n    english_data = null;\n\n    validAnswer(qcode, letter) {\n        if (!letter || letter.length > 1) {\n            return false;\n        }\n        if (qcode in this.question_spec) {\n            const ascii = letter.charCodeAt(0);\n            if (ascii < ASCII_CODE_FOR_CAPITAL_A) {\n                return false;\n            }\n            if (ascii > ASCII_CODE_FOR_CAPITAL_A + this.question_spec[qcode].answer_count - 1) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    getAnswerLetters(qcode) {\n        if (qcode in this.question_spec) {\n            let letters = [];\n            for (let i = 0; i < this.question_spec[qcode].answer_count; ++i) {\n                letters.push(String.fromCharCode(ASCII_CODE_FOR_CAPITAL_A + i));\n            }\n            return letters;\n        }\n        return [];\n    }\n\n    filterAnswers(answerKey) {\n        let answers = {};\n        for (const qcode of this.question_order) {\n            if (this.validAnswer(qcode, answerKey[qcode])) {\n                answers[qcode] = answerKey[qcode];\n            }\n        }\n        return answers;\n    }\n\n    count() {\n        return this.question_order.length;\n    }\n\n    getCodeByStep(step) {\n        if (typeof this.question_order[step] === 'undefined') {\n            return null;\n        }\n        return this.question_order[step];\n    }\n\n    // spec looks like this:\n    // {\n    //   q: the full question,\n    //   t: the short title,\n    //   a: the answers, as: {\n    //     'A': the first answer,\n    //     'B': the second answer, ... etc\n    //   },\n    //   layout: 'vert' or 'horiz',\n    //   help: any help text (optional),\n    // }\n    getLocalSpec(qcode) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        if (typeof this.localized_data[qcode] === 'undefined') {\n            return null;\n        }\n        return this.localized_data[qcode];\n    }\n\n    getEnglishAnswers(answerKey) {\n        if (this.english_data === null) {\n            this.loadEnglishData();\n        }\n        let english_answers = {};\n        for (const qcode of this.question_order) {\n            const letter = answerKey[qcode];\n            const answer = this.english_data[qcode].answers[letter];\n            english_answers[qcode] = answer.toUpperCase();\n        }\n        return english_answers;\n    }\n\n    getLocalConfirmation(answerKey) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        let confirmation = [];\n        for (const qcode of this.question_order) {\n            const aspec = this.localized_data[qcode].answers;\n            let answers = [];\n            let selected = null;\n            for (const letter of Object.keys(aspec).sort()) {\n                let answer = {\n                    letter: letter,\n                    text: aspec[letter]\n                };\n                if (letter === answerKey[qcode]) {\n                    selected = { ...answer };\n                }\n                answers.push(answer);\n            }\n            confirmation.push({\n                code: qcode,\n                text: this.localized_data[qcode].question,\n                help: this.localized_data[qcode].help,\n                layout: this.localized_data[qcode].layout,\n                answers: answers,\n                selected: selected\n            });\n        }\n        return confirmation;\n    }\n\n    loadLocalizedData() {\n        this.localized_data = this.getData(Local);\n    }\n\n    loadEnglishData() {\n        if (Local.language_code === 'en') {\n            if (this.localized_data === null) {\n                this.loadLocalizedData();\n            }\n            this.english_data = this.localized_data;\n        } else {\n            const English = new Language('en');\n            this.english_data = this.getData(English);\n        }\n    }\n\n    getData(LangObj) {\n        let data = {};\n        for (let name of this.question_order) {\n            data[name] = {\n                question: LangObj.get(this.lang_key(name, 'question')),\n                title: LangObj.get(this.lang_key(name, 'short')),\n                layout: this.question_spec[name].layout,\n                answers: {}\n            }\n            for (let i = 0; i < this.question_spec[name].answer_count; ++i) {\n                const lc = String.fromCharCode(97 + i);\n                const uc = String.fromCharCode(65 + i);\n                data[name].answers[uc] = LangObj.get(this.lang_key(name, 'answer_' + lc));\n            }\n            if (this.question_spec[name].help) {\n                data[name].help = LangObj.get(this.lang_key(name, 'help'));\n            }\n        }\n        return data;\n    }\n\n    lang_key(name, which) {\n        return 'quiz_' + name.replace(/[^a-z]/g, '_') + '_' + which;\n    }\n\n}\n\nexport default new Questions();\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport StepCounter from '../../../components/BenefitsTool/StepCounter/StepCounter';\nimport Question from '../../../components/BenefitsTool/Question/Question';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\n\nimport Questions from '../../../logic/Questions';\n\nclass Quiz extends Component {\n\n    state = {\n        loaded_lang: false,\n        hasError: false\n    };\n\n    clickAnswer = (letter) => {\n        const qcode = Questions.getCodeByStep(this.currentStep());\n        const ok = this.props.saveAnswer(qcode, letter);\n        if (ok) {\n            if (this.currentStep() + 1 >= Questions.count()) {\n                this.props.history.push('/confirm');\n            } else {\n                const newStep = this.currentUrlStep() + 1;\n                this.props.history.push('/quiz/' + newStep);\n            }\n        } else {\n            Logger.alert('Could not save answer', { qcode: qcode, letter: letter });\n            this.setState({ hasError: true });\n        }\n    };\n\n    goBack = () => {\n        // NB: the urls are 1-indexed, so the current step in 0-index form is\n        // actually back by one\n        let newStep = this.currentUrlStep() - 1;\n        if (newStep < 1) {\n            newStep = 0;\n            Logger.err('Request to go back before step 1');\n        }\n        this.props.history.push('/quiz/' + newStep);\n    };\n\n    goToStep = (stepNum) => {\n        if (stepNum < 1 || stepNum > Questions.count()) {\n            Logger.warn('Event request to go to an out-of-bounds step', { step: stepNum });\n            return;\n        }\n        this.props.history.push('/quiz/' + stepNum);\n    };\n\n    cancelQuiz = () => {\n        this.props.history.push('/');\n    };\n\n    restartQuiz = () => {\n        this.props.history.push('/quiz/1');\n    };\n\n    componentDidMount() {\n        this.lang = {\n            error_message: Language.get('quiz_save_failed_error'),\n            back_link_text: Language.get('quiz_back_link_text'),\n            restart_link_text: Language.get('util_restart_link_text'),\n            cancel_link_text: Language.get('quiz_cancel_link_text'),\n        };\n        this.setState({ loaded_lang: true });\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    currentStep() {\n        let current = 0;\n        if (this.props.match.params.step) {\n            let test = parseInt(this.props.match.params.step);\n            if (!isNaN(test) && test > 0 && test <= Questions.count()) {\n                current = test - 1;\n            } else {\n                Logger.warn('URL request to go to an out-of-bounds step', { step: this.props.match.params.step });\n            }\n        }\n        return current;\n    }\n\n    currentUrlStep() {\n        return this.currentStep() + 1;\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        // Steps\n        let steps = [];\n        const stepCount = Questions.count();\n        for (let i = 0; i < stepCount; ++i) {\n            const qcode = Questions.getCodeByStep(i);\n            const qspec = Questions.getLocalSpec(qcode);\n            let step = {\n                title: qspec.title,\n                target: i,\n            };\n            if (typeof(this.props.answers[qcode]) !== 'undefined') {\n                step.clicked = () => { this.goToStep(i + 1); };\n            }\n            steps.push(step);\n        }\n\n        // Question\n        let qcode = Questions.getCodeByStep(this.currentStep());\n        if (typeof qcode !== 'string') {\n            qcode = Questions.getCodeByStep(0);\n        }\n        const qspec = Questions.getLocalSpec(qcode);\n\n        // Answers\n        const answerButtons = Object.keys(qspec.answers).sort()\n            .map((aKey) => {\n                let classNames = [ 'AnswerButton' ];\n                if (typeof this.props.answers[qcode] != 'undefined') {\n                    if (this.props.answers[qcode] === aKey) {\n                        classNames.push('Selected');\n                    }\n                }\n                return {\n                    key: aKey,\n                    classNames: classNames,\n                    clicked: () => { this.clickAnswer(aKey); },\n                    text: qspec.answers[aKey]\n                };\n            });\n\n        // Links\n        let links = [];\n        if (this.currentStep() > 0) {\n            links.push({\n                classNames: [ 'BackLink' ],\n                clicked: this.goBack,\n                text: this.lang.back_link_text\n            });\n            links.push({\n                classNames: [ 'RestartLink' ],\n                clicked: this.restartQuiz,\n                text: this.lang.restart_link_text\n            });\n        } else {\n            links.push({\n                classNames: [ 'CancelLink' ],\n                clicked: this.cancelQuiz,\n                text: this.lang.cancel_link_text\n            });\n        }\n\n        let message = null;\n        if (this.state.hasError) {\n            message = this.lang.error_message;\n        }\n\n        return (\n            <div className=\"Quiz\">\n                <StepCounter\n                    steps={steps}\n                    currentStep={this.currentStep()} />\n                <Question\n                    questionText={qspec.question}\n                    helpText={qspec.help} />\n                <Controls\n                    errorMessage={message}\n                    buttonLayout={qspec.layout}\n                    buttons={answerButtons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Quiz);\n","import React from 'react';\n\nconst viewAnswer = (props) => {\n    return (\n        <div className=\"AnswerConfirm\">\n            <span className=\"SelectedAnswer\">{props.selectedAnswer.text}</span>\n            <button\n                className=\"EditButton\"\n                title={props.lang.edit_title}\n                onClick={props.clickedEdit}>\n                <i className=\"fas fa-pencil-alt\" title={props.lang.edit_alt}></i>\n            </button>\n        </div>\n    );\n}\n\nexport default viewAnswer;\n","import React from 'react';\n\nimport Controls from '../../../UI/Controls/Controls';\n\nconst editAnswer = (props) => {\n    const abuttons = props.answers\n        .map((answer) => {\n            let btn = {\n                key: answer.letter,\n                classNames: [ 'AnswerButton' ],\n                text: answer.text,\n                clicked: answer.clicked\n            };\n            if (answer.letter === props.selectedAnswer.letter) {\n                btn.classNames.push('Selected');\n            }\n            return btn;\n        });\n\n    return (\n        <div className=\"AnswerEdit\">\n            <button className=\"CancelButton\"\n                title={props.lang.cancel_title}\n                onClick={props.clickedCancel}>\n                <i className=\"fas fa-times\" title={props.lang.cancel_alt}></i>\n            </button>\n            <Controls\n                buttons={abuttons}\n                buttonLayout={props.layout} />\n        </div>\n    );\n}\n\nexport default editAnswer;\n","import React from 'react';\n\nimport ViewAnswer from './ViewAnswer/ViewAnswer';\nimport EditAnswer from './EditAnswer/EditAnswer';\n\nimport './AnswerList.css';\n\nconst answerList = (props) => {\n\n    const answerList = props.questions\n        .map((question) => {\n            let answerBlock = null;\n            if (question.isEditing) {\n                answerBlock = <EditAnswer\n                    lang={props.lang}\n                    answers={question.answers}\n                    selectedAnswer={question.selected}\n                    clickedCancel={question.clickedCancel}\n                    layout={question.layout} />;\n            } else {\n                answerBlock = <ViewAnswer\n                    lang={props.lang}\n                    selectedAnswer={question.selected}\n                    clickedEdit={question.clickedEdit} />\n            }\n            return (\n                <li key={question.code}>\n                    <div className=\"QuestionConfirm\">{question.text}</div>\n                    {answerBlock}\n                </li>\n            );\n        });\n\n    return (\n        <div className=\"Answers\">\n            <h3 className=\"AnswersHeader\">{props.lang.header}</h3>\n            <ul>\n                {answerList}\n            </ul>\n        </div>\n    );\n\n}\n\nexport default answerList;\n","import React, { Component } from 'react';\n\nimport AnswerList from '../../../../components/BenefitsTool/AnswerList/AnswerList';\n\nimport Questions from '../../../../logic/Questions';\n\nclass EditAnswers extends Component {\n\n    state = {\n        editingAnswer: null\n    };\n\n    startEdit(question) {\n        this.setState({ editingAnswer: question });\n    }\n\n    cancelEdit(question) {\n        this.setState({ editingAnswer: null });\n    }\n\n    saveEdit(question, letter) {\n        this.props.edited(question, letter);\n        this.setState({ editingAnswer: null });\n    }\n\n    render() {\n        let questions = Questions.getLocalConfirmation(this.props.answers)\n            .map(question => {\n                let answers = question.answers.map(answer => {\n                    return { ...answer, \n                        clicked: () => this.saveEdit(question.code, answer.letter)\n                    };\n                });\n                return { ...question,\n                    answers: answers,\n                    isEditing: this.state.editingAnswer === question.code,\n                    clickedCancel: () => this.cancelEdit(question.code),\n                    clickedEdit: () => this.startEdit(question.code),\n                };\n            });\n        return <AnswerList questions={questions} lang={this.props.lang} />;\n    };\n}\n\nexport default EditAnswers;\n","import React from 'react';\n\nimport './ContactInfo.css';\n\nconst contactInfo = (props) => {\n    return (\n        <div className=\"ContactInfo\">\n            <h3>{props.lang.header}</h3>\n            <div className=\"invitation\" dangerouslySetInnerHTML={{__html: props.lang.invitation}}></div>\n            <form method=\"post\" onSubmit={(e) => e.preventDefault()}>\n                <label>{props.lang.email_label}</label>\n                {props.emailError ?\n                    <div className=\"Error\">{props.lang.email_error}</div>\n                : null}\n                <input type=\"text\" name=\"email\" value={props.email} onChange={props.emailChanged} autoComplete=\"email\" />\n                <label>{props.lang.zip_label}</label>\n                {props.zipError ?\n                   <div className=\"Error\">{props.lang.zip_error}</div>\n                : null}\n                <input type=\"zip\" name=\"zip\" value={props.zip} onChange={props.zipChanged} autoComplete=\"current-zip\" />\n            </form>\n        </div>\n    );\n}\n\nexport default contactInfo;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport * as EmailValidator from 'email-validator';\n\nimport EditAnswers from './EditAnswers/EditAnswers';\nimport ContactInfo from '../../../components/BenefitsTool/ContactInfo/ContactInfo';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport IdentifierCookie from '../../../storage/cookies/IdentifierCookie';\n\nimport Questions from '../../../logic/Questions';\n\nclass Confirmation extends Component {\n\n    state = {\n        loaded_lang: false,\n        loading: false,\n        email: '',\n        zip: '',\n        emailError: false,\n        zipError: false,\n        saveError: false,\n        contactValidOrEmpty: true,\n        hasRecordingError: false\n    };\n\n    lang = null;\n\n    regexValidZip = /^[0-9]{5}(?:-[0-9]{4})?$/;\n\n    changeEmail = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { email: val };\n            if (val !== '' && !EmailValidator.validate(val)) {\n                newstate.emailError = true;\n            } else {\n                newstate.emailError = false;\n            }\n            if (val !== '') {\n                if (this.state.zip === '') {\n                    newstate.zipError = true;\n                }\n            } else {\n                if (this.state.zip === '') {\n                    newstate.zipError = false;\n                }\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    changeZip = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { zip: val };\n            if (val === '' && this.state.email !== '') {\n                newstate.zipError = true;\n            } else if (val !== '' && !this.regexValidZip.test(val)) {\n                newstate.zipError = true;\n            } else {\n                newstate.zipError = false;\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    confirmAnswers = () => {\n        const data = {\n            token: IdentifierCookie.get(),\n            visitor_id: this.props.visitor_id,\n            answers: Questions.getEnglishAnswers(this.props.answers)\n        };\n        if (this.state.email.trim() !== '') {\n            data.contact = {\n                email: this.state.email.trim()\n            };\n            if (this.state.zip.trim() !== '') {\n                data.contact.zip = this.state.zip.trim();\n            }\n        }\n        this.setState({ loading: true });\n        Api.recordResponse(data)\n            .then(response => {\n                IdentifierCookie.remove();\n                this.setState({ loading: false });\n                this.props.history.push('/results');\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                // This is an alert-level error for me the programmer, but not\n                // for the user -- if the API is malfunctioning, let's give it\n                // one chance to get over a hiccup, then send them on to the\n                // results page without recording anything\n                Logger.alert('Could not record response', { api_error: Api.parseAxiosError(error) });\n                this.setState((current) => {\n                    if (this.state.hasRecordingError) {\n                        IdentifierCookie.remove();\n                        this.props.history.push('/results');\n                        return { loading: false, hasRecordingError: false };\n                    } else {\n                        return { loading: false, hasRecordingError: true };\n                    }\n                });\n            });\n    };\n\n    componentDidMount() {\n        this.lang = {\n            edit_answers: {\n                header: Language.get('confirm_answerlist_header'),\n                cancel_title: Language.get('confirm_answerlist_cancel_edit_link_title'),\n                cancel_alt: Language.get('util_cancel_alt_text'),\n                edit_title: Language.get('confirm_answerlist_edit_link_title'),\n                edit_alt: Language.get('confirm_answerlist_edit_link_title'),\n            },\n            contact: {\n                header: Language.get('confirm_contact_header'),\n                invitation: Language.get('confirm_contact_invitation'),\n                email_label: Language.get('confirm_contact_email_label'),\n                email_error: Language.get('confirm_contact_email_error'),\n                zip_label: Language.get('confirm_contact_zip_label'),\n                zip_error: Language.get('confirm_contact_zip_error')\n            },\n            controls: {\n                confirm_button: Language.get('confirm_button_text'),\n                restart_link: Language.get('confirm_restart_link_text'),\n                recording_error: Language.get('confirm_recording_error')\n            }\n        };\n        this.setState({ loaded_lang: true });\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    okToSubmitContact() {\n        let validOrEmpty = null;\n        if (this.state.email === '' && this.state.zip === '') {\n            validOrEmpty = true;\n        } else if (this.state.email === '' || this.state.zip === '') {\n            validOrEmpty = false;\n        } else {\n            if (this.state.emailError || this.state.zipError) {\n                validOrEmpty = false;\n            } else {\n                validOrEmpty = true;\n            }\n        }\n        this.setState({ contactValidOrEmpty: validOrEmpty });\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        const goto = this.props.needsRedirect();\n        if (goto) {\n            return <Redirect to={goto} />;\n        }\n\n        const buttons = [\n            {\n                classNames: [ 'ConfirmButton' ],\n                clicked: this.confirmAnswers,\n                text: this.lang.controls.confirm_button\n            }\n        ];\n        if (this.state.loading || !this.state.contactValidOrEmpty) {\n            buttons[0].disabled = true;\n        }\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: this.lang.controls.restart_link\n            }\n        ];\n\n        return (\n            <div className=\"Confirmation\">\n                <EditAnswers\n                    answers={this.props.answers}\n                    edited={(q, a) => this.props.saveAnswer(q, a)}\n                    lang={this.lang.edit_answers} />\n                <ContactInfo\n                    emailError={this.state.emailError}\n                    zipError={this.state.zipError}\n                    email={this.state.email}\n                    zip={this.state.zip}\n                    emailChanged={this.changeEmail}\n                    zipChanged={this.changeZip}\n                    lang={this.lang.contact} />\n                <Controls\n                    errorMessage={this.state.hasRecordingError ? this.lang.controls.recording_error : null}\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Confirmation);\n","import React from 'react';\n\nconst linkList = (props) => {\n    let i = 0;\n    const links = props.links.map(link => {\n        let elem = null;\n        if (link.sameSite) {\n            elem = <a href={link.link}>{link.text}</a>\n        } else {\n            elem = <a href={link.link} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a>\n        }\n        ++i;\n        return (\n            <li key={i}>\n                {elem}\n                {link.description ?\n                    <p class=\"LinkDescription\">{link.description}</p>\n                : null}\n            </li>\n        );\n    });\n    return (\n        <div className=\"LinkList\">\n            {props.header ?\n                <h5>{props.header}</h5>\n            : null}\n            <ul>\n                {links}\n            </ul>\n        </div>\n    );\n};\n\nexport default linkList;\n","import React, { useState } from 'react';\n\nimport LinkList from '../LinkList/LinkList';\nimport IconButton from '../IconButton/IconButton';\n\nimport './ExpandedSection.css';\n\nconst ExpandedSection = (props) => {\n    const [expanded, setExpanded] = useState(false);\n    let readmore_link = null;\n    let expanded_block = null;\n    let classes = [ 'ExpandedSection' ];\n\n    if (props.read_more) {\n        classes.push('ReadMore');\n        let more_classes = [ 'MoreBlock' ];\n\n        const doExpand = (e) => {\n            e.preventDefault();\n            setExpanded(true);\n        };\n\n        const doCollapse = (e) => {\n            e.preventDefault();\n            setExpanded(false);\n        };\n\n        if (expanded) {\n            more_classes.push('ExpandedMore');\n            readmore_link = (\n                <div className=\"ReadLessLink\">\n                    <IconButton\n                        icon=\"fas fa-arrow-circle-up\"\n                        title={props.lang.read_less}\n                        append_text={props.lang.read_less}\n                        clicked={doCollapse} />\n                </div>\n            );\n        } else {\n            more_classes.push('CollapsedMore');\n            readmore_link = (\n                <div className=\"ReadMoreLink\">\n                    <IconButton\n                        icon=\"fas fa-arrow-circle-down\"\n                        title={props.lang.read_more}\n                        append_text={props.lang.read_more}\n                        clicked={doExpand} />\n                </div>\n            );\n        }\n\n        expanded_block = (\n            <div className={more_classes.join(' ')}>\n                <div dangerouslySetInnerHTML={{__html: props.read_more}}></div>\n                {props.resources ?\n                    <LinkList header={props.resources_header} links={props.resources} />\n                : null}\n            </div>\n        );\n    }\n\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n\n    return (\n        <div className={classes.join(' ')}>\n            {props.header ?\n                <h3 className=\"SectionHeader\">{props.header}</h3>\n            : null}\n            <div className=\"MainBlock\">\n                <div dangerouslySetInnerHTML={{__html: props.text}}></div>\n                {readmore_link}\n            </div>\n            {expanded_block}\n        </div>\n    );\n};\n\nexport default ExpandedSection;\n","import React from 'react';\n\nimport ExpandedSection from '../../UI/ExpandedSection/ExpandedSection';\nimport LinkList from '../../UI/LinkList/LinkList';\n\nimport './Response.css';\n\nconst response = (props) => {\n    let i = 0;\n    let answer = props.answerSections.map((section) => {\n        ++i;\n        return <ExpandedSection key={i}\n            add_class={section.type === 'benefit' ? 'Benefit' : ''}\n            lang={props.lang}\n            {...section} />;\n    });\n    let resourceBlock = null;\n    if (props.resources.length > 0) {\n        resourceBlock = (\n            <div className=\"Resources\">\n                <h3>{props.resources_header}</h3>\n                {props.resources_intro ? (\n                <div className=\"ResourcesIntro\" dangerouslySetInnerHTML={{__html: props.resources_intro}}></div>\n                ) : null}\n                <LinkList links={props.resources} />\n            </div>\n        );\n    }\n    return (\n        <div className=\"Response\">\n            <h2>{props.header}</h2>\n            {answer}\n            {resourceBlock}\n        </div>\n    );\n};\n\nexport default response;\n","\nimport ConditionsData from '../../data/conditions.json';\n\nclass Screening {\n\n    conditions = ConditionsData;\n\n    firstPass = {\n\n        simple: (answers, key) => {\n            return answers[key];\n        },\n\n        splitTypeByEssential: (answers, key) => {\n            if (answers.type === 'D') {\n                return 'E';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByTaxes: (answers, key) => {\n            if (answers.books === 'A' || answers.books === 'B') {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByCompliance: (answers, key) => {\n            if (answers.books === 'A') {\n                return 'C';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitLengthByYear: (answers, key) => {\n            if (answers['length of employment'] === 'C') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        splitLengthByMonths: (answers, key) => {\n            if (answers['length of employment'] === 'A') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        employedByYearAndHours: (answers, key) => {\n            if (answers['length of employment'] === 'C'\n                && answers['hours per year'] === 'B') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        // The hours-worked requirements for NYS are simple for domestic workers\n        // employed directly, but complicated for agencies, so we want to\n        // collapse this to something simple rather than checking agency vs not\n        // AND the time requirements.  The options are:\n        // * agency + any [A]\n        // * non-agency + 40+/week + 6+ months [E]\n        // * non-agency + anything else [N]\n        workForNYS: (answers, key) => {\n            if (answers['agency'] === 'A') {\n                return 'A';\n            }\n            if (\n                answers['hours per week'] === 'B' &&\n                (\n                    answers['length of employment'] === 'B' ||\n                    answers['length of employment'] === 'C'\n                )\n            ) {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        // For FFCRA, reasons break down as--\n        // * self-quarantine + school closed + any [B]\n        // * self-quarantine + any (but not school closed) [Q]\n        // * school closed + any (but not self-quarantine) [S]\n        // * family quarantine and/or stay at home [F]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForFFCRA: (answers, key, rolling) => {\n            if (\n                answers['self-quarantine'] === 'A' &&\n                answers['school closed'] === 'A'\n            ) {\n                return 'B';\n            }\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['family quarantine'] === 'A' ||\n                answers['stay at home'] === 'A'\n            ) {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['stay at home'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n        // For NYS, reasons break down as--\n        // * self-quarantine + any [Q]\n        // * family quarantine + any [F]\n        // * any combination of the other options [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForNYS: (answers, key, rolling) => {\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['family quarantine'] === 'A') {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        }\n\n    };\n\n    secondPass = {\n        simple: (answers, key, eligibility) => {\n            if (key in eligibility) {\n                return 'Y';\n            }\n            return 'N';\n        }\n    };\n\n    runFirstPass(answerKey) {\n        let byBenefit = {};\n        for (const benefit in this.conditions) {\n            let scenario = {};\n            for (const cond of this.conditions[benefit]) {\n                if (cond.pass !== 'first') {\n                    continue;\n                }\n                let k = cond.code;\n                let m = cond.method;\n                scenario[k] = this.firstPass[m](answerKey, k);\n            }\n            byBenefit[benefit] = scenario;\n        }\n        return byBenefit;\n    }\n\n    runSecondPass(answerKey, scenarios, eligibility) {\n        let newScenarios = {};\n        for (const benefit in this.conditions) {\n            let scenario = scenarios[benefit];\n            for (const cond of this.conditions[benefit]) {\n                if (cond.pass !== 'second') {\n                    continue;\n                }\n                let k = cond.code;\n                let m = cond.method;\n                scenario[k] = this.secondPass[m](answerKey, k, eligibility);\n            }\n            newScenarios[benefit] = scenario;\n        }\n        return newScenarios;\n    }\n\n}\n\nexport default new Screening();\n","\nimport ScenariosData from '../../data/scenarios.json';\n\nclass Eligibility {\n\n    eligibility = ScenariosData;\n\n    screen(scenarios) {\n        let eligibility = {};\n        for (let benefit in scenarios) {\n            let found = null;\n            const bdata = benefit in this.eligibility ? this.eligibility[benefit] : [];\n            for (let r of bdata) {\n                let match = true;\n                if (!r.enabled) {\n                    match = false;\n                } else {\n                    for (const c of Object.keys(r.conditions)) {\n                        if (scenarios[benefit][c] !== r.conditions[c]) {\n                            match = false;\n                        }\n                    }\n                }\n                if (match) {\n                    found = r;\n                    break;\n                }\n            }\n            if (found !== null) {\n                eligibility[benefit] = found;\n            }\n        }\n        return eligibility;\n    }\n\n}\n\nexport default new Eligibility();\n","\nimport Questions from '../Questions';\nimport Language from '../../utils/Language';\n\nclass ProcessText {\n\n    type_answer = null;\n    type_replacement = null;\n\n    setEmployeeType(typeAnswer) {\n        this.type_answer = typeAnswer;\n    }\n\n    findTypeReplacement() {\n        let r = Language.get('results_employee_type_unknown');\n        const letters = Questions.getAnswerLetters('type');\n        if (letters.includes(this.type_answer)) {\n            let k = 'results_employee_type_' + this.type_answer.toLowerCase();\n            let f = Language.get(k);\n            if (f) {\n                r = f;\n            }\n        }\n        this.type_replacement = r;\n    }\n\n    process(result_key) {\n        if (this.type_replacement === null) {\n            this.findTypeReplacement();\n        }\n        return Language.get(result_key, {\n            employee_type: this.type_replacement\n        });\n    }\n\n}\n\nexport default new ProcessText();\n","import Language from '../../utils/Language';\n\nimport ResourceData from '../../data/resources.json';\n\nclass Resources {\n\n    getBenefitResources(eligibility, benefit) {\n        const lang = Language.language_code;\n        let resources = [];\n        if (benefit in ResourceData.benefits) {\n            for (let r of ResourceData.benefits[benefit]) {\n                if (lang in r.link) {\n                    resources.push({\n                        text: r.text,\n                        link: r.link[lang]\n                    });\n                }\n            }\n        }\n        return resources;\n    }\n\n    getOtherResources() {\n        let resources = [];\n        const lang = Language.language_code;\n        for (let r of ResourceData.other) {\n            if (lang in r.link) {\n                resources.push({\n                    text: r.text,\n                    link: r.link[lang]\n                });\n            }\n        }\n        return resources;\n    }\n\n}\n\nexport default new Resources();\n","\nimport Screening from './results/Screening';\nimport Eligibility from './results/Eligibility';\nimport ProcessText from './results/ProcessText';\nimport Resources from './results/Resources';\nimport Language from '../utils/Language';\n\nimport BenefitsData from '../data/benefits.json';\n\nclass CollectResults {\n\n    benefits = BenefitsData;\n\n    compile(answerKey) {\n\n        // Calculate benefits\n        let scenarios = Screening.runFirstPass(answerKey);\n        let eligibility = Eligibility.screen(scenarios);\n        scenarios = Screening.runSecondPass(answerKey, scenarios, eligibility);\n        eligibility = Eligibility.screen(scenarios);\n\n        // Switch on employee type replacement\n        ProcessText.setEmployeeType(answerKey.type);\n\n        // Build text sections and resource links\n        let results = {\n            header: ProcessText.process('results_main_header'),\n            sections: this.getAllSections(eligibility, answerKey),\n            resources_header: ProcessText.process('results_resources_header'),\n            resources_intro: ProcessText.process('results_resources_intro'),\n            resources: this.getOtherResources(eligibility)\n        };\n\n        return results;\n    }\n\n    getAllSections(eligibility, answerKey) {\n        let sections = [];\n        \n        // Push all benfit responses into sections\n        const benefitSections = this.getBenefitSections(eligibility);\n\n        // If we found nothing, add the no-results text\n        if (benefitSections.length < 1) {\n            sections.push({\n                type: 'no_benefits',\n                header: null,\n                text: ProcessText.process('results_no_benefits')\n            });\n        }\n\n        // Otherwise, add an intro and the benefits\n        else {\n            sections.push({\n                header: null,\n                text: ProcessText.process('results_intro')\n            });\n            for (let section of benefitSections) {\n                sections.push(section);\n            }\n        }\n\n        // Do we need an on-the-books section?\n        let books = this.getBooksSection(answerKey);\n        if (books !== null) {\n            sections.push(books);\n        }\n\n        // Always add the retaliation warning section\n        sections.push({\n            type: 'warning',\n            header: ProcessText.process('results_retaliation_warning_header'),\n            text: ProcessText.process('results_retaliation_warning_text')\n        });\n\n        return sections;\n    }\n\n    getBenefitSections(eligibility) {\n        const benefitSections = [];\n        for (const benefit of this.benefits.order) {\n            const header = Language.get('results_section_header_' + benefit);\n            if (benefit in eligibility) {\n                const result = ProcessText.process(eligibility[benefit].lang_key_result);\n                const expanded = ProcessText.process(eligibility[benefit].lang_key_expanded);\n                const resources = Resources.getBenefitResources(eligibility, benefit);\n                let section = {\n                    type: 'benefit',\n                    header: header,\n                    text: result,\n                    read_more: expanded,\n                    resources_header: Language.get('results_section_resources_header'),\n                    resources: []\n                };\n                for (const r of resources) {\n                    section.resources.push({\n                        text: ProcessText.process(r.text),\n                        link: r.link\n                    });\n                }\n                benefitSections.push(section);\n            }\n        }\n        return benefitSections;\n    }\n\n    getBooksSection(answerKey) {\n        // totally in compliance; skip\n        if (answerKey.books === 'A') {\n            return null;\n        }\n\n        // partial compliance: message about insurance\n        if (answerKey.books === 'B') {\n            return {\n                header: ProcessText.process('results_off_the_books_partial_header'),\n                text: ProcessText.process('results_off_the_books_partial_text')\n            };\n        }\n\n        // no to on the books: message about getting on\n        return {\n            type: 'books',\n            header: ProcessText.process('results_off_the_books_header'),\n            text: ProcessText.process('results_off_the_books_text')\n        };\n    }\n\n    getOtherResources(eligibility) {\n        let links = [];\n        const resources = Resources.getOtherResources();\n        for (let r of resources) {\n            links.push({\n                text: ProcessText.process(r.text),\n                link: r.link\n            });\n        }\n        return links;\n    }\n\n}\n\nexport default new CollectResults();\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Response from '../../../components/BenefitsTool/Response/Response';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Language from '../../../utils/Language';\nimport CollectResults from '../../../logic/CollectResults';\n\nimport CtaData from '../../../data/cta.json';\n\nconst CTA_TRACKING_CODE = '?utm_source=hih-covid-quiz';\n\nclass Results extends Component {\n\n    state = {\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    clickCTAButton = (link) => {\n        window.open(link + CTA_TRACKING_CODE, '_blank');\n    };\n\n    componentDidMount() {\n        this.lang = {\n            restart_link_text: Language.get('util_restart_link_text'),\n            read_less: Language.get('util_read_less_link_text'),\n            read_more: Language.get('util_read_more_link_text')\n        };\n        this.setState({ loaded_lang: true });\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        const goto = this.props.needsRedirect();\n        if (goto) {\n            return <Redirect to={goto} />;\n        }\n\n        const results = CollectResults.compile(this.props.answers);\n\n        let ctas = [];\n        if (CtaData.length > 3) {\n            for (let i = 0; i < 3; i++) {\n                const r = CtaData[Math.floor(Math.random() * CtaData.length)];\n                ctas.push(r);\n            }\n        } else {\n            ctas = CtaData;\n        }\n        const buttons = ctas.map((cta) => {\n            return {\n                classNames: [ 'CTAButton' ],\n                clicked: () => { this.clickCTAButton(cta.link); },\n                text: Language.get(cta.text),\n                title: Language.get(cta.title)\n            };\n        });\n\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: this.lang.restart_link_text\n            }\n        ];\n\n        return (\n            <div className=\"Results\">\n                <Response\n                    header={results.header}\n                    answerSections={results.sections}\n                    resources_header={results.resources_header}\n                    resources_intro={results.resources_intro}\n                    resources={results.resources}\n                    lang={this.lang} />\n                <Controls\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Results);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Basic.css';\n\nconst basic = (props) => {\n\n    return (\n        <div>\n            <h2>{props.lang.header}</h2>\n\n            <div className=\"BasicBody\" dangerouslySetInnerHTML={{__html: props.lang.body}}></div>\n\n            {props.back ? (\n            <div className=\"BackLink\" title={props.lang.back_title}>\n                <Link to={props.back}>{props.lang.back_link}</Link>\n            </div>\n            ) : null }\n        </div>\n    );\n};\n\nexport default basic;\n","import React, { Component } from 'react';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Language from '../../../utils/Language';\nimport Basic from '../../../components/BenefitsTool/Basic/Basic';\n\nclass Disclaimer extends Component {\n\n    state = {\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    componentDidMount() {\n        this.lang = {\n            header: Language.get('disclaimer_header'),\n            body: Language.get('disclaimer_text'),\n            back_link: Language.get('util_back_to_quiz'),\n            back_title: Language.get('util_back_to_quiz')\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return (\n            <Basic lang={this.lang} back=\"/\" />\n        );\n    }\n}\n\nexport default Disclaimer;\n","import CookieBase from '../CookieBase';\n\nimport Questions from '../../logic/Questions';\n\nlet answersCookieFilter = (cookieobj) => {\n    return Questions.filterAnswers(cookieobj);\n};\n\nconst answersCookie = new CookieBase(\n    'hnct-answers', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    }, // spec\n    true, // compressed\n    answersCookieFilter // filter function\n);\n\nexport default answersCookie;\n","import CookieBase from '../CookieBase';\n\nconst visitorCookie = new CookieBase(\n    'hnct-visitor', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 365,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default visitorCookie;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Landing from './Landing/Landing';\nimport Quiz from './Quiz/Quiz';\nimport Confirmation from './Confirmation/Confirmation';\nimport Results from './Results/Results';\nimport Disclaimer from './Disclaimer/Disclaimer';\nimport AnswersCookie from '../../storage/cookies/AnswersCookie';\nimport VisitorCookie from '../../storage/cookies/VisitorCookie';\nimport Logger from '../../utils/Logger';\nimport Questions from '../../logic/Questions';\n\nclass BenefitsTool extends Component {\n\n    state = {\n        visitor_id: null,\n        answers: {},\n        loaded: false\n    };\n\n    componentDidMount() {\n        let newstate = {};\n        // Fetch visitor ID from the cookie\n        let visitor_id = VisitorCookie.get();\n        if (!visitor_id) {\n            visitor_id = uuidv4();\n            VisitorCookie.set(visitor_id);\n        }\n        newstate.visitor_id = visitor_id;\n        // Fetch answers from the cookie\n        newstate.answers = AnswersCookie.get() || {};\n        // Mark this component loaded\n        newstate.loaded = true;\n        this.setState(newstate);\n    }\n\n    clearAnswers = () => {\n        AnswersCookie.set({});\n        this.setState({ answers: {} });\n    }\n\n    saveAnswer = (qcode, letter, completed) => {\n        if (!Questions.validAnswer(qcode, letter)) {\n            Logger.warn('Request to save unknown question/answer pair ' + qcode + '/' + letter);\n            return false;\n        }\n        let newAnswers = { ...this.state.answers };\n        newAnswers[qcode] = letter;\n        AnswersCookie.set(newAnswers);\n        this.setState({ answers: newAnswers });\n        return true;\n    };\n\n    needsRedirect = () => {\n        let ready = true;\n        let started = false;\n        let step = 0;\n        for (const qcode of Questions.question_order) {\n            if (typeof this.state.answers[qcode] === 'undefined') {\n                Logger.debug('Needs redirect because of undefined question code ' + qcode, { answers: this.state.answers });\n                ready = false;\n                break;\n            } else {\n                started = true;\n            }\n            const letter = this.state.answers[qcode];\n            if (!Questions.validAnswer(qcode, letter)) {\n                Logger.warn('Needs redirect because of undefined answer letter ' + letter, { q_code: qcode, answers: this.state.answers });\n                ready = false;\n                break;\n            }\n            ++step;\n        }\n        if (!ready) {\n            if (started) {\n                return '/quiz/' + step;\n            } else {\n                return '/';\n            }\n        }\n        return false;\n    };\n\n    render() {\n\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        const doQuiz = () => <Quiz\n            visitor_id={this.state.visitor_id}\n            answers={this.state.answers}\n            saveAnswer={this.saveAnswer} />;\n\n        const doConfirmation = () => <Confirmation\n            visitor_id={this.state.visitor_id}\n            answers={this.state.answers}\n            needsRedirect={this.needsRedirect}\n            saveAnswer={this.saveAnswer} />;\n\n        const doResults = () => <Results\n            answers={this.state.answers}\n            needsRedirect={this.needsRedirect} />;\n\n        const doLanding = () => <Landing\n            visitor_id={this.state.visitor_id}\n            clearAnswers={this.clearAnswers} />;\n\n        return (\n            <div className=\"BenefitsTool\">\n                <Switch>\n                    <Route path=\"/quiz/:step\" render={doQuiz} />\n                    <Route path=\"/quiz\" render={doQuiz} />\n                    <Route path=\"/confirm\" render={doConfirmation} />\n                    <Route path=\"/results\" render={doResults} />\n                    <Route path=\"/disclaimer\" component={Disclaimer} />\n                    <Route path=\"/\" render={doLanding} />\n                </Switch>\n            </div>\n        );\n    }\n\n}\n\nexport default BenefitsTool;\n","import React from 'react';\n\nimport './AdminPage.css';\n\nconst adminPage = (props) => {\n    return (\n        <div className=\"AdminSection\">\n            {props.advanced ?\n                <p className=\"Warning\"><i>Should you be here?</i></p>\n            : null}\n            <h2>{props.title}</h2>\n            <p className=\"AdminBreadcrumbs\">{props.breadcrumbs.join(' > ')}</p>\n            <div className=\"AdminBody\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default adminPage;\n","import React from 'react';\nimport { DateTime } from 'luxon';\n\nimport Message from '../../UI/Message/Message';\nimport DeployData from '../../../data/deployment.json';\n\nconst deployMessage = (props) => {\n    const dt = DateTime.fromISO(DeployData.date_deployed);\n    const deployTime = dt.toLocaleString(DateTime.DATETIME_FULL);\n    return (\n        <Message type=\"info\"\n            text={'The current deployment is v' + DeployData.version_num + ', deployed ' + deployTime} />\n    );\n};\n\nexport default deployMessage;\n","import React from 'react';\n\nimport './Table.css';\n\nconst table = (props) => {\n    let header_cells = props.cols.map((h) => {\n        return <th key={h.key}>{h.title}</th>\n    });\n    let i = 0;\n    let body_rows = props.rows.map((r) => {\n        ++i;\n        let cells = [];\n        let clickable = props.clickable || {};\n        let snip = props.snip || {};\n        for (const h of props.cols) {\n            let classes = [];\n            let clicked = null;\n            let value = r[h.key];\n            let title = null;\n            if (h.key in clickable) {\n                clicked = () => { clickable[h.key](r, h.key); };\n                classes.push('Clickable');\n            }\n            if (h.key in snip) {\n                let full = value;\n                if (full && full.length > snip[h.key]) {\n                    let short = value.substring(0, snip[h.key]) + '...';\n                    value = short;\n                    title = full;\n                    classes.push('Snipped');\n                }\n            }\n            cells.push(<td key={i}\n                className={classes.join(' ')}\n                onClick={clicked}\n                title={title}>{value}</td>);\n            ++i;\n        }\n        return <tr key={i}>{cells}</tr>;\n    });\n    let classes = [ 'AdminTable' ];\n    if (props.size === 'tiny') {\n        classes.push('TinyTable');\n    }\n    return (\n        <div className={classes.join(' ')}>\n            <table>\n                <thead>\n                    <tr>\n                        {header_cells}\n                    </tr>\n                </thead>\n                <tbody>\n                    {body_rows}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default table;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DateTime } from 'luxon';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Table from '../../../../components/UI/Table/Table';\nimport Message from '../../../../components/UI/Message/Message';\nimport IconButton from '../../../../components/UI/IconButton/IconButton';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport './List.css';\n\nclass AdminAdvancedList extends Component {\n\n    state = {\n        loaded: false,\n        deploys: null,\n        error: null\n    };\n\n    cols = [\n        { key: 'version_num', title: 'Version Number' },\n        { key: 'deploy_date', title: 'Created At' },\n        { key: 'download', title: 'Download' },\n        { key: 'load', title: 'Revert' },\n    ];\n\n    clickable = {\n        load: (row) => { this.revertToRow(row); }\n    };\n\n    refresh = () => {\n        this.fetchDeploys();\n    };\n\n    componentDidMount() {\n        this.fetchDeploys();\n    }\n\n    fetchDeploys() {\n        this.setState({ loaded: false, deploys: null, error: null });\n        const data = { token: this.props.token };\n        Api.getAllDeploys(data)\n            .then((response) => {\n                const all = response.data.all ? response.data.all : [];\n                this.setState({ loaded: true, deploys: all });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch deployments', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch deployments' });\n            });\n    }\n\n    revertToRow(row) {\n        this.props.history.push('/admin/advanced/load/' + row.id);\n    }\n\n    render() {\n        let body = null;\n        if (this.state.loaded) {\n            const rows = this.state.deploys.map(item => {\n                const dt = DateTime.fromISO(item.date_deployed);\n                const formatted = dt.toLocaleString(DateTime.DATETIME_SHORT);\n                const url = Api.getDownloadUrl(\n                    item.version_num,\n                    item.uuid,\n                    this.props.token);\n                const fname = 'hnct-' + item.version_num + '.zip';\n                const download = (\n                    <a className=\"DownloadDeploy\" download={fname} href={url}>\n                        <i className=\"fas fa-download\" title=\"download\"></i>\n                    </a>\n                );\n                return {\n                    id: item.deployment_id,\n                    version_num: item.version_num,\n                    uuid: item.uuid,\n                    deploy_date: formatted,\n                    download: download,\n                    load: <i className=\"fas fa-history\" title=\"revert\"></i>\n                };\n            });\n            body = (\n                <div className=\"DeployList\">\n                    <div className=\"RefreshWrapper\">\n                    <IconButton icon_type=\"refresh\"\n                        clicked={this.refresh} />\n                    </div>\n                    <Table rows={rows}\n                        cols={this.cols}\n                        clickable={this.clickable} />\n                </div>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Deployments\"\n                breadcrumbs={['Admin', 'Advanced', 'Deployments']}\n                advanced={true}>\n                <DeployMessage />\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nexport default withRouter(AdminAdvancedList);\n","import React from 'react';\n\nimport Spinner from '../Spinner/Spinner';\n\nimport './ProcessingButton.css';\n\nconst processingButton = (props) => {\n    let classes = [ 'ProcessingButton' ];\n    let content = null;\n    let doWork = props.clicked;\n    let disabled = false;\n    if (props.working) {\n        classes.push('Working');\n        content = <Spinner color=\"gray-flipped\" />;\n        doWork = null;\n    } else {\n        content = props.text;\n    }\n    if (props.disabled) {\n        classes.push('Disabled');\n        disabled = true;\n    }\n    if (props.size === 'large') {\n        classes.push('LargeSize');\n    }\n    return (\n        <div className={classes.join(' ')} onClick={doWork} disabled={disabled}>{content}</div>\n    );\n};\n\nexport default processingButton;\n","import React from 'react';\n\nimport './RawTextBox.css';\n\nconst rawTextBox = (props) => {\n    let classes = [ 'RawTextBox' ];\n    let rawtext = null;\n    if (!props.contents) {\n        classes.push('Empty');\n        rawtext = props.emptytext || 'empty';\n    } else {\n        rawtext = props.contents;\n    }\n    return (\n        <div className={classes.join(' ')}>\n            {props.title ?\n                <h6 className=\"RawTextBoxTitle\">{props.title}</h6>\n            : null}\n            <code>\n            {rawtext}\n            </code>\n        </div>\n    );\n};\n\nexport default rawTextBox;\n","import React from 'react';\n\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\nimport RawTextBox from '../../UI/RawTextBox/RawTextBox';\nimport Message from '../../UI/Message/Message';\n\nimport './FunctionBox.css';\n\nconst functionBox = (props) => {\n    let emptytext = null;\n    if (props.working) {\n        emptytext = 'processing...';\n    } else if (props.emptyText) {\n        emptytext = props.emptyText;\n    }\n    let boxContents = null;\n    if (props.results) {\n        boxContents = props.results;\n    }\n    return (\n        <div className=\"FunctionBox\">\n            <h3>{props.title}</h3>\n            <p className=\"Explainer\">{props.explainer}</p>\n            <ProcessingButton\n                size=\"large\"\n                working={props.working}\n                clicked={props.clicked}\n                text={props.buttonText} />\n            {props.error ?\n                <Message type=\"error\" text={props.error} />\n            : props.successBox}\n            <RawTextBox contents={boxContents} emptytext={emptytext} />\n        </div>\n    );\n};\n\nexport default functionBox;\n","import React, { Component } from 'react';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport './Save.css';\n\nclass AdminAdvancedSave extends Component {\n\n    state = {\n        processing: false,\n        process_data: null,\n        error: null,\n        download_info: null\n    };\n\n    deploy = () => {\n        this.setState({\n            processing: true,\n            process_data: null,\n            error: null\n        });\n        const data = {\n            token: this.props.token\n        };\n        Api.deployAdmin(data)\n            .then(response => {\n                this.setState({\n                    processing: false,\n                    process_data: JSON.stringify(response.data),\n                    download_info: response.data,\n                    error: null\n                });\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = Api.parseAxiosError(error);\n                Logger.alert('Could not deploy recent changes', { api_error: parsed });\n                this.setState({\n                    processing: false,\n                    error: '[' + parsed.code + '] ' + parsed.message\n                });\n            });\n    }\n\n    render() {\n        let successBox = null;\n        if (this.state.download_info) {\n            const vnum = this.state.download_info.version;\n            const uuid = this.state.download_info.uuid;\n            const url = Api.getDownloadUrl(vnum, uuid, this.props.token);\n            const fname = 'hnct-' + vnum + '.zip';\n            const downloadLink = (\n                <a className=\"DownloadDeploy\" download={fname} href={url}>\n                    <i className=\"fas fa-download\" title=\"download\"></i>\n                </a>\n            );\n            successBox = <Message type=\"success\"\n                text=\"Download the deploy here:\"\n                custom_button={downloadLink} />;\n        }\n\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Save Deploy\"\n                breadcrumbs={['Admin', 'Advanced', 'Save Deploy']}\n                advanced={true}>\n                <DeployMessage />\n                <FunctionBox\n                    working={this.state.processing}\n                    emptyText=\"Click Go to deploy all changes...\"\n                    results={this.state.process_data}\n                    title=\"Wrap all changes from the admin into a new deployment\"\n                    explainer=\"This will create a zip file you can download containing the new versions of the data files to be commited and deployed\"\n                    clicked={this.deploy}\n                    buttonText=\"Go\"\n                    error={this.state.error}\n                    successBox={successBox}\n                    />\n            </AdminPage>\n        );\n    }\n}\n\nexport default AdminAdvancedSave;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DateTime } from 'luxon';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport DeployData from '../../../../data/deployment.json';\n\nclass AdminAdvancedLoad extends Component {\n\n    state = {\n        loaded: false,\n        processing: false,\n        process_data: null,\n        error: null,\n    };\n\n    initDeploys = () => {\n        this.setState({\n            processing: true,\n            process_data: null,\n            error: null\n        });\n        const data = {\n            token: this.props.token,\n            id: this.state.deployment.deployment_id\n        };\n        Api.revertAdmin(data)\n            .then(response => {\n                this.setState({\n                    processing: false,\n                    process_data: JSON.stringify(response.data),\n                    error: null\n                });\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = Api.parseAxiosError(error);\n                Logger.alert('Could not initialize the language deploy', { api_error: parsed });\n                this.setState({\n                    processing: false,\n                    error: '[' + parsed.code + '] ' + parsed.message\n                });\n            });\n    }\n\n    componentDidMount() {\n        const id = this.getId();\n        if (!id) {\n            this.setState({ loaded: true, deployment: DeployData });\n        } else {\n            this.fetchDeployment();\n        }\n    }\n\n    fetchDeployment() {\n        this.setState({ loaded: false, error: null });\n        const data = { token: this.props.token, id: this.getId() };\n        Api.getDeploymentInfo(data)\n            .then((response) => {\n                this.setState({\n                    loaded: true,\n                    deployment: response.data.deployment\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch deployment info', { api_error: Api.parseAxiosError(error), key: this.getId() });\n                this.setState({ error: 'Could not fetch deployment info' });\n            });\n    }\n\n    getId() {\n        if (this.props.match.params.id) {\n            return this.props.match.params.id;\n        }\n        return null;\n    }\n\n    render() {\n        let body = null;\n        if (!this.state.loaded) {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        } else {\n            let functionTitle = 'Replace the admin database with version ' + this.state.deployment.version_num;\n            let dt = DateTime.fromISO(this.state.deployment.date_deployed);\n            let formatted = dt.toFormat('LLL dd');\n            let functionExplainer = 'This will destroy any changes that have been made in the admin since ' + formatted;\n            body = (\n                <FunctionBox\n                    working={this.state.processing}\n                    emptyText=\"Click Go to re-intitalize the translations...\"\n                    results={this.state.process_data}\n                    title={functionTitle}\n                    explainer={functionExplainer}\n                    clicked={this.initDeploys}\n                    buttonText=\"Go\"\n                    error={this.state.error}\n                    />\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Load Deploy\"\n                breadcrumbs={['Admin', 'Advanced', 'Load Deploy']}\n                advanced={true}>\n                <DeployMessage />\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminAdvancedLoad);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport DeployData from '../../../../data/deployment.json';\nimport BenefitsData from '../../../../data/benefits.json';\nimport ConditionsData from '../../../../data/conditions.json';\nimport CtaData from '../../../../data/cta.json';\nimport LangEnData from '../../../../data/lang_en.json';\nimport LangKeysData from '../../../../data/lang_keys.json';\nimport ResourcesData from '../../../../data/resources.json';\nimport ScenariosData from '../../../../data/scenarios.json';\n\nclass AdminAdvancedReplace extends Component {\n\n    state = {\n        loaded: false,\n        processing: false,\n        process_data: null,\n        error: null,\n    };\n\n    replaceDatabase = () => {\n        this.setState({\n            processing: true,\n            process_data: null,\n            error: null\n        });\n        const data = {\n            token: this.props.token,\n            deployment: DeployData,\n            alldata: {\n                benefits: BenefitsData,\n                conditions: ConditionsData,\n                cta: CtaData,\n                lang_en: LangEnData,\n                lang_keys: LangKeysData,\n                resources: ResourcesData,\n                scenarios: ScenariosData\n            }\n        };\n        Api.replaceAdmin(data)\n            .then(response => {\n                this.setState({\n                    processing: false,\n                    process_data: JSON.stringify(response.data),\n                    error: null\n                });\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = Api.parseAxiosError(error);\n                Logger.alert('Could not replace the admin database', { api_error: parsed });\n                this.setState({\n                    processing: false,\n                    error: '[' + parsed.code + '] ' + parsed.message\n                });\n            });\n    }\n\n    render() {\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Replace Database\"\n                breadcrumbs={['Admin', 'Advanced', 'Replace Database']}\n                advanced={true}>\n                <DeployMessage />\n                <FunctionBox\n                    working={this.state.processing}\n                    emptyText=\"Click Go to replace the database...\"\n                    results={this.state.process_data}\n                    title=\"Replace the admin database with the current files and create a new deployment\"\n                    explainer=\"This will destroy any changes that have been made in the admin that have not been saved to a deployment\"\n                    clicked={this.replaceDatabase}\n                    buttonText=\"Go\"\n                    error={this.state.error}\n                    />\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminAdvancedReplace);\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport List from './List/List';\nimport Save from './Save/Save';\nimport Load from './Load/Load';\nimport Replace from './Replace/Replace';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport './Advanced.css';\n\nclass AdminAdvanced extends Component {\n\n    goToSave = () => {\n        this.props.history.push('/admin/advanced/save');\n    }\n\n    goToList = () => {\n        this.props.history.push('/admin/advanced');\n    }\n\n    goToReplace = () => {\n        this.props.history.push('/admin/advanced/replace');\n    }\n\n    render() {\n        const doSave = () => {\n            return <Save token={this.props.token} />;\n        };\n        const doLoad = () => {\n            return <Load token={this.props.token} />;\n        };\n        const doReplace = () => {\n            return <Replace token={this.props.token} />;\n        };\n        const doList = () => {\n            return <List token={this.props.token} />;\n        };\n        return (\n            <Aux>\n                <Switch>\n                    <Route path=\"/admin/advanced/load/:id\" render={doLoad} />\n                    <Route path=\"/admin/advanced/load\" render={doLoad} />\n                    <Route path=\"/admin/advanced/replace\" render={doReplace} />\n                    <Route path=\"/admin/advanced/save\" render={doSave} />\n                    <Route path=\"/\" render={doList} />\n                </Switch>\n                <div className=\"OtherFunctions\">\n                    <h4>Advanced Functions</h4>\n                    <ul>\n                        <li><button onClick={this.goToSave}>Save Deploy</button></li>\n                        <li><button onClick={this.goToList}>List Deployments</button></li>\n                        <li><button onClick={this.goToReplace}>Replace Database</button></li>\n                    </ul>\n                </div>\n            </Aux>\n        );\n    }\n\n}\n\nexport default withRouter(AdminAdvanced);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Table from '../../../../components/UI/Table/Table';\nimport IconButton from '../../../../components/UI/IconButton/IconButton';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nclass AdminResultsList extends Component {\n\n    state = {\n        loaded: false,\n        benefits: null,\n        language: null,\n        error: null\n    };\n\n    cols = [\n        { key: 'name', title: 'Name' },\n        { key: 'abbreviation', title: 'Abbreviation' },\n        { key: 'scenarios', title: 'Scenarios' },\n        { key: 'resources', title: 'Resources' }\n    ];\n\n    clickable = {\n        scenarios: (row) => { this.editScenarios(row); },\n        resources: (row) => { this.editResources(row); }\n    };\n\n    refresh = () => {\n        this.fetchBenefits();\n    };\n\n    editCommonResources = () => {\n        this.props.history.push('/admin/resources/common');\n    };\n\n    editCommonLanguage = () => {\n        this.props.history.push('/admin/language/results');\n    };\n\n    componentDidMount() {\n        this.fetchBenefits();\n    }\n\n    fetchBenefits() {\n        this.setState({ loaded: false, benefits: null, error: null });\n        const data = { token: this.props.token };\n        Api.getBenefits(data)\n            .then((response) => {\n                const benefits = response.data.benefits ? response.data.benefits : [];\n                this.setState({ loaded: true, benefits: benefits });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch benefits', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch benefits' });\n            });\n    }\n\n    editScenarios(row) {\n        this.props.history.push('/admin/results/' + row.code);\n    }\n\n    editResources(row) {\n        this.props.history.push('/admin/resources/' + row.code);\n    }\n\n    render() {\n        let body = null;\n        if (this.state.loaded) {\n            let rows = this.state.benefits\n                .sort()\n                .map(benefit => {\n                    return {\n                        code: benefit.code,\n                        name: benefit.name,\n                        abbreviation: benefit.abbreviation,\n                        scenarios: <i className=\"fas fa-align-justify\" title=\"Edit Scenarios\"></i>,\n                        resources: <i className=\"fas fa-link\" title=\"Resources\"></i>,\n                    };\n                });\n            body = (\n                <Aux>\n                    <h3>Results By Benefit</h3>\n                    <Table\n                        rows={rows}\n                        cols={this.cols}\n                        clickable={this.clickable} />\n                    <div className=\"Extras\">\n                        <h3>Non-Benefit Related Results</h3>\n                        <p><IconButton icon=\"fas fa-align-justify\"\n                            title=\"Language\"\n                            append_text=\"Common Language\"\n                            clicked={this.editCommonLanguage} /></p>\n                        <p><IconButton icon=\"fas fa-link\"\n                            title=\"Resources\"\n                            append_text=\"Common Resources\"\n                            clicked={this.editCommonResources} /></p>\n                    </div>\n                </Aux>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Results: Manage the Results Page\"\n                breadcrumbs={['Admin', 'Results', 'List']}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nexport default withRouter(AdminResultsList);\n","import React from 'react';\n\nimport './SelectFilters.css';\n\nconst selectFilters = (props) => {\n    let empty = null;\n    if (props.empty) {\n        empty = <option value=\"\">-- {props.empty} --</option>;\n    }\n    const selects = props.selects.map(select => {\n        const options = select.options.map(option => {\n            return (\n                <option key={option.value} value={option.value}>\n                    {option.text}\n                </option>\n            );\n        });\n        return (\n            <div className=\"Filter\" key={select.label}>\n                <label>{select.label}</label>\n                <select name={select.name} onChange={props.changed}>\n                    {empty}\n                    {options}\n                </select>\n            </div>\n        );\n    });\n    return (\n        <div className=\"SelectFilters\">\n            {selects}\n        </div>\n    );\n};\n\nexport default selectFilters;\n","import React from 'react';\n\nimport Table from '../../UI/Table/Table';\nimport IconButton from '../../UI/IconButton/IconButton';\n\nimport './CompareTable.css';\n\nconst LIST_LAYOUT = 'list';\nconst COMPARE_LAYOUT = 'compare';\n\nconst CompareTable = (props) => {\n\n    let classes = [ 'CompareTable' ];\n    if (props.current === COMPARE_LAYOUT) {\n        classes.push('CompareLayout');\n    } else {\n        classes.push('ListLayout');\n    }\n\n    const doChange = (e, choice) => {\n        e.preventDefault();\n        props.changed(choice);\n    };\n    const layout_selector = (\n        <div className=\"LayoutToggle\">\n            <IconButton icon=\"fas fa-table\"\n                title=\"List View\"\n                clicked={(e) => doChange(e, LIST_LAYOUT)}\n                append_text=\"List\"\n                add_class={props.current === LIST_LAYOUT ? 'Active' : null} />\n            <IconButton icon=\"fas fa-columns\"\n                title=\"Compare View\"\n                clicked={(e) => doChange(e, COMPARE_LAYOUT)}\n                append_text=\"Compare\"\n                add_class={props.current === COMPARE_LAYOUT ? 'Active' : null} />\n        </div>\n    );\n\n    const rows = props.rows || [];\n    const cols = props.cols || [];\n    const other = props.other || {};\n\n    return (\n        <div className={classes.join(' ')}>\n            {layout_selector}\n            <Table {...other}\n                rows={rows}\n                cols={cols} />\n        </div>\n    );\n};\n\nexport { LIST_LAYOUT, COMPARE_LAYOUT };\nexport default CompareTable;\n","const md = require('markdown-it')();\n\nexport default md;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport SelectFilters from '../../../../components/UI/SelectFilters/SelectFilters';\nimport CompareTable from '../../../../components/Admin/CompareTable/CompareTable';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\nimport Markdown from '../../../../utils/Markdown';\n\nclass AdminResultsFilter extends Component {\n\n    state = {\n        loaded: false,\n        benefit: null,\n        conditions: null,\n        scenarios: null,\n        error: null,\n        filters: {},\n        layout: 'list'\n    };\n\n    list_cols = [\n        { key: 'help', title: 'Scenario' },\n        { key: 'enabled', title: 'Eligible?' },\n        { key: 'result', title: 'Response' }\n    ];\n\n    list_snip = {\n        result: 120\n    };\n\n    filterResponses = (e) => {\n        const condition = e.target.getAttribute('name');\n        const letter = e.target.options[e.target.selectedIndex].value;\n        this.setState((prevState) => {\n            let newFilters = {};\n            for (const key in prevState.filters) {\n                if (key === condition) {\n                    if (letter) {\n                        newFilters[key] = letter;\n                    } else {\n                        newFilters[key] = null;\n                    }\n                } else if (prevState.filters[key]) {\n                    newFilters[key] = prevState.filters[key];\n                } else {\n                    newFilters[key] = null;\n                }\n            }\n            return { filters: newFilters };\n        });\n    };\n\n    setLayout = (newLayout) => {\n        this.setState({ layout: newLayout });\n    };\n\n    refresh = () => {\n        this.fetchBenefit();\n    };\n\n    componentDidMount() {\n        this.fetchBenefit();\n    }\n\n    fetchBenefit() {\n        this.setState({\n            loaded: false,\n            benefit: null,\n            conditions: null,\n            scenarios: null,\n            error: null,\n            filters: null\n        });\n        const data = { token: this.props.token };\n        Api.getScenarios(this.props.match.params.benefit, data)\n            .then((response) => {\n                if (!response.data.benefit) {\n                    this.setState({ error: 'That benefit is unknown' });\n                } else {\n                    const benefit = response.data.benefit;\n                    const conditions = response.data.conditions ? response.data.conditions : [];\n                    const scenarios = response.data.scenarios ? response.data.scenarios : [];\n                    const filters = {};\n                    for (const c of conditions) {\n                        filters[c.key_name] = null;\n                    }\n                    this.setState({\n                        loaded: true,\n                        benefit: benefit,\n                        conditions: conditions,\n                        scenarios: scenarios,\n                        filters: filters\n                    });\n                }\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch benefit scenarios', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch benefit scenarios' });\n            });\n    }\n\n    helpToElem(help) {\n        const markup = help.split(/\\n/).join('<br />\\n');\n        return <p dangerouslySetInnerHTML={{__html: markup}}></p>\n    }\n\n    markdownToElem(markdown) {\n        const markup = Markdown.render(markdown || '');\n        return <div dangerouslySetInnerHTML={{__html: markup}}></div>\n    }\n\n    getEditLink(id) {\n        return '/admin/results/' + this.state.benefit.code + '/edit/' + id;\n    }\n\n    filter() {\n        return this.state.scenarios.filter(scenario => {\n            for (const key in this.state.filters) {\n                if (this.state.filters[key] !== null) {\n                    if (scenario.condition_map[key] !== this.state.filters[key]) {\n                        return false;\n                    } else {\n                    }\n                }\n            }\n            return true;\n        });\n    }\n\n    render() {\n        let body = null;\n        let title = 'Results: ';\n        let crumbs = ['Admin', 'Results'];\n        if (this.state.loaded) {\n            title += this.state.benefit.abbreviation + ': Filter Responses';\n            crumbs.push(this.state.benefit.abbreviation);\n            crumbs.push('Filter');\n\n            // Filtering\n            const selectProps = this.state.conditions.map(condition => {\n                const options = condition.options.map(option => {\n                    return {\n                        value: option.letter,\n                        text: option.answer,\n                    };\n                });\n                return {\n                    label: condition.name,\n                    name: condition.key_name,\n                    options: options\n                };\n            });\n            const selects = (\n                <SelectFilters\n                    selects={selectProps}\n                    empty=\"any\"\n                    changed={this.filterResponses} />\n            );\n\n            // Table\n            let rows = [];\n            let cols = [];\n            let snip = {};\n            if (this.state.layout === 'compare') {\n                cols = this.filter().map(scenario => {\n                    return {\n                        key: scenario.lang_key_result,\n                        title: this.helpToElem(scenario.help)\n                    };\n                });\n                let enabled_row = {};\n                let short_row = {};\n                let long_row = {};\n                let edit_row = {};\n                for (const scenario of this.filter()) {\n                    const code = scenario.lang_key_result;\n                    let eligibleFlag = null;\n                    if (scenario.enabled) {\n                        eligibleFlag = (\n                            <span className=\"EligibleFlag GenericSuccess\">\n                                <i class=\"fas fa-check-square\"></i>\n                                &nbsp;\n                                Eligible\n                            </span>\n                        );\n                    } else {\n                        eligibleFlag = (\n                            <span className=\"EligibleFlag GenericError\">\n                                <i class=\"fas fa-times\"></i>\n                                &nbsp;\n                                Not Eligible\n                            </span>\n                        );\n                    }\n                    enabled_row[code] = eligibleFlag;\n                    short_row[code] = this.markdownToElem(scenario.en_result);\n                    long_row[code] = this.markdownToElem(scenario.en_expanded);\n                    edit_row[code] = (\n                        <Link to={this.getEditLink(scenario.id)}>\n                            <i className=\"fas fa-pencil-alt\"></i> Edit\n                        </Link>\n                    );\n                }\n                rows.push(enabled_row);\n                rows.push(short_row);\n                rows.push(long_row);\n                rows.push(edit_row);\n            } else {\n                rows = this.filter().map(scenario => {\n                    const link = (\n                        <Link to={this.getEditLink(scenario.id)}>\n                            {this.helpToElem(scenario.help)}\n                        </Link>\n                    );\n                    let combined = '';\n                    if (scenario.en_result || scenario.en_expanded) {\n                        combined += scenario.en_result || '';\n                        combined += \"\\n\\n---\\n\\n\";\n                        combined += scenario.en_expanded || '';\n                    }\n                    return {\n                        id: scenario.id,\n                        help: link,\n                        enabled: scenario.enabled ? 'Yes' : 'No',\n                        result: combined\n                    };\n                });\n                cols = this.list_cols;\n                snip = this.list_snip;\n            }\n\n            body = (\n                <Aux>\n                    {selects}\n                    <CompareTable\n                        current={this.state.layout}\n                        changed={this.setLayout}\n                        rows={rows}\n                        cols={cols}\n                        other={{snip: snip}} />\n                </Aux>\n            );\n        } else {\n            title += 'Filter Benefit Responses';\n            crumbs.push('Filter');\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nexport default withRouter(AdminResultsFilter);\n","import React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport IconButton from '../../UI/IconButton/IconButton';\nimport Markdown from '../../../utils/Markdown';\nimport { TOKEN_REGEX_TAG_OPEN, TOKEN_REGEX_TAG_CLOSE } from '../../../utils/Language';\n\nimport './EditMarkdown.css';\n\nconst MARKDOWN_HELP_LINK = 'https://www.markdownguide.org/basic-syntax';\nconst HIGHLIGHT_OPEN = 'BEGIN_HIGHLIGHT';\nconst HIGHLIGHT_CLOSE = 'END_HIGHLIGHT';\nconst HIGHLIGHT_TOKEN_OPEN = '{{' + HIGHLIGHT_OPEN + '}}';\nconst HIGHLIGHT_TOKEN_CLOSE = '{{' + HIGHLIGHT_CLOSE + '}}';\n\nconst EditMarkdown = (props) => {\n    const [viewtype, setViewType] = useState('split');\n    const [replacement, setReplacement] = useState('');\n    const [previewText, setPreviewText] = useState(props.value || '');\n    const [wrapped, setWrapped] = useState(false);\n    const [highlighted, setHighlighted] = useState(false);\n\n    // Toggle buttons\n    const doChange = (e, choice) => {\n        e.preventDefault();\n        setViewType(choice);\n    };\n    const doHelp = (e) => {\n        e.preventDefault();\n        window.open(MARKDOWN_HELP_LINK, '_blank');\n    };\n    const toggle = (\n        <div className=\"ViewToggle\">\n            <IconButton icon=\"fas fa-columns\"\n                title=\"Split View\"\n                clicked={(e) => doChange(e, 'split')}\n                append_text=\"split\"\n                add_class={viewtype === 'split' ? 'Active' : null} />\n            <IconButton icon_type=\"edit\"\n                clicked={(e) => doChange(e, 'edit')}\n                append_text=\"edit\"\n                add_class={viewtype === 'edit' ? 'Active' : null} />\n            <IconButton icon_type=\"preview\"\n                clicked={(e) => doChange(e, 'preview')}\n                append_text=\"preview\"\n                add_class={viewtype === 'preview' ? 'Active' : null} />\n            <IconButton icon=\"far fa-life-ring\"\n                clicked={(e) => doHelp(e)}\n                title=\"Markdown Help\"\n                append_text=\"help\" />\n        </div>\n    );\n\n    // Replacement buttons\n    let replacementButtons = null;\n    let doValueChange = (e) => {\n        props.changed(e);\n        let newtext = e.target.value;\n        setPreviewText(newtext);\n    };\n    if (props.replace_token && (viewtype === 'split' || viewtype === 'preview')) {\n        const regexp = new RegExp(TOKEN_REGEX_TAG_OPEN +\n            props.replace_token + TOKEN_REGEX_TAG_CLOSE, 'g');\n\n        const doReplacement = (e) => {\n            if (e) {\n                e.preventDefault();\n            }\n            var choice = e.target.options[e.target.selectedIndex].value;\n            setReplacement(choice);\n            let newtext = props.value || '';\n            if (choice) {\n                const elem = HIGHLIGHT_TOKEN_OPEN + choice + HIGHLIGHT_TOKEN_CLOSE;\n                newtext = newtext.replace(regexp, elem);\n                setWrapped(true);\n            }\n            setPreviewText(newtext);\n        };\n\n        doValueChange = (e) => {\n            props.changed(e);\n            if (props.replace_token && (viewtype === 'split' || viewtype === 'preview')) {\n                let newtext = e.target.value;\n                if (replacement) {\n                    const elem = HIGHLIGHT_TOKEN_OPEN + replacement + HIGHLIGHT_TOKEN_CLOSE;\n                    newtext = newtext.replace(regexp, elem);\n                    setWrapped(true);\n                }\n                setPreviewText(newtext);\n            }\n        }\n\n        let doHighlight = (e) => {\n            setHighlighted(!highlighted);\n        };\n\n        let token = '{{' + props.replace_token + '}}';\n        let options = props.replace_options.map(option => {\n            return <option key={option} value={option}>{option}</option>;\n        });\n\n        replacementButtons = (\n            <div className=\"ViewReplacement\">\n                <div className=\"ExplainReplacement\">\n                    Replace\n                    <span className=\"ReplacementToken\">{token}</span>\n                    with:\n                </div>\n                <div className=\"ReplacementOptions\">\n                    <select name=\"replacement\" onChange={doReplacement} value={replacement}>\n                        <option value=\"\">-- do not replace --</option>\n                        {options}\n                    </select>\n                </div>\n                <div className=\"ReplacementHighlight\">\n                    <label>\n                        <input type=\"checkbox\" onChange={doHighlight} />\n                        Highlight\n                    </label>\n                </div>\n            </div>\n        );\n    }\n\n    // Preview window\n    let preview = Markdown.render(previewText);\n    if (props.replace_token && (viewtype === 'split' || viewtype === 'preview')) {\n        let hlclasses = [ 'PreviewToken' ];\n        if (highlighted) {\n            hlclasses.push('Active');\n        }\n        if (wrapped) {\n            const regexp1 = new RegExp(TOKEN_REGEX_TAG_OPEN + HIGHLIGHT_OPEN + TOKEN_REGEX_TAG_CLOSE, 'g');\n            const regexp2 = new RegExp(TOKEN_REGEX_TAG_OPEN + HIGHLIGHT_CLOSE + TOKEN_REGEX_TAG_CLOSE, 'g');\n            console.log(regexp1);\n            preview = preview.replace(regexp1, '<span class=\"' + hlclasses.join(' ') + '\">');\n            preview = preview.replace(regexp2, '</span>');\n        } else {\n            const regexp = new RegExp(TOKEN_REGEX_TAG_OPEN +\n                props.replace_token + TOKEN_REGEX_TAG_CLOSE, 'g');\n            preview = preview.replace(regexp, '<span class=\"' + hlclasses.join(' ') + '\">{{' + props.replace_token + '}}</span>');\n        }\n    }\n    const previewBox = (\n        <div className=\"PreviewBox\">\n            <div className=\"View\" dangerouslySetInnerHTML={{__html: preview}} />\n        </div>\n    );\n\n    // Edit window\n    const minrows = props.minrows || 5;\n    const editBox = (\n        <div className=\"EditorBox\">\n            <TextareaAutosize rows=\"5\" cols=\"75\"\n                minRows={minrows}\n                name={props.name}\n                defaultValue={props.value}\n                onChange={doValueChange} />\n        </div>\n    );\n\n    if (viewtype === 'split') {\n        return (\n            <div className=\"EditMarkdown SplitEditor\">\n                {toggle}\n                {replacementButtons}\n                <div className=\"SplitWrapper\">\n                    <div className=\"SplitContainer\">\n                        <div className=\"SplitInternal\">\n                            <h5>Edit</h5>\n                            {editBox}\n                        </div>\n                        <div className=\"SplitInternal\">\n                            <h5>Preview</h5>\n                            {previewBox}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else if (viewtype === 'edit') {\n        return (\n            <div className=\"EditMarkdown SoloEditor\">\n                {toggle}\n                {editBox}\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"EditMarkdown PreviewOnly\">\n                {toggle}\n                {replacementButtons}\n                {previewBox}\n            </div>\n        );\n    }\n\n};\n\nexport default EditMarkdown;\n","import React from 'react';\n\nimport Message from '../../UI/Message/Message';\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\n\nimport './Form.css';\n\nconst adminForm = (props) => {\n\n    const doSubmit = (e) => {\n        props.submitted(e);\n        window.scrollTo(0, 0);\n    };\n\n    return (\n        <div className=\"AdminForm\">\n            {props.success ?\n                <Message type=\"success\" text={props.success} />\n            : null}\n            {props.error ?\n                <Message type=\"error\" text={props.error} />\n            : null}\n\n            {props.help ?\n                <div className=\"FormHeader\">\n                    <div className=\"HelpBox\">{props.help}</div>\n                </div>\n            : null}\n\n            <form method=\"post\" onSubmit={props.submitted}>\n                <div className=\"FormElements\">\n                    {props.children}\n                </div>\n\n                <div className=\"ButtonHolder\">\n                    <ProcessingButton\n                        disabled={!props.valid}\n                        working={props.processing}\n                        clicked={doSubmit}\n                        text={props.button_text || 'Submit'} />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default adminForm;\n","import React from 'react';\n\nimport './Element.css';\n\nconst adminElement = (props) => {\n    let classes = [ 'AdminFormElement' ];\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n    return (\n        <div className={classes.join(' ')}>\n            <h3>{props.label}</h3>\n            {props.help ?\n                <div className=\"Description\">\n                    {props.help}\n                </div>\n            : null}\n            {props.error ?\n                <p className=\"Error\">{props.error}</p>\n            : null}\n            {props.children}\n        </div>\n    );\n};\n\nexport default adminElement;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport EditMarkdown from '../../../../components/Admin/EditMarkdown/EditMarkdown';\nimport Form from '../../../../components/Admin/Form/Form';\nimport Element from '../../../../components/Admin/Form/Element/Element';\nimport Api from '../../../../storage/Api';\nimport Language from '../../../../utils/Language';\nimport Logger from '../../../../utils/Logger';\n\nclass AdminResultsEdit extends Component {\n\n    state = {\n        loaded: false,\n        benefit: null,\n        scenario: null,\n        error: null,\n        processing: false,\n        processing_error: null,\n        saved: false,\n        help: null,\n        form: {\n            enabled: {\n                value: false,\n                error: null\n            },\n            en_result: {\n                value: null,\n                error: null\n            },\n            en_expanded: {\n                value: null,\n                error: null\n            }\n        },\n        formValid: true\n    };\n\n    refresh = () => {\n        this.fetchScenario();\n    };\n\n    submitForm = (e) => {\n        e.preventDefault();\n        this.setState({\n            processing: true,\n            processing_error: null,\n            saved: false\n        });\n        const data = {\n            token: this.props.token,\n            enabled: this.state.form.enabled.value,\n            en_result: this.state.form.en_result.value,\n            en_expanded: this.state.form.en_expanded.value\n        };\n        Api.saveScenario(\n                this.props.match.params.benefit,\n                this.props.match.params.id,\n                data\n            )\n            .then((response) => {\n                this.setState({\n                    processing: false,\n                    processing_error: false,\n                    saved: true\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not save scenario', { api_error: Api.parseAxiosError(error), benefit: this.props.match.params.benefit, scenario_id: this.props.match.params.id });\n                this.setState({\n                    processing: false,\n                    processing_error: 'Could not save scenario'\n                });\n            });\n    };\n\n    clickedEnabled = (e) => {\n        e.stopPropagation();\n        this.setState(prevState => {\n            let newForm = this.copyForm(prevState.form);\n            newForm.enabled.value = !prevState.form.enabled.value;\n            return { form: newForm };\n        }, () => { this.validate(); });\n    };\n\n    changedResult = (e) => {\n        let newForm = this.copyForm(this.state.form);\n        newForm.en_result.value = e.target.value;\n        this.setState({ form: newForm }, () => { this.validate(); });\n    };\n\n    changedExpanded = (e) => {\n        let newForm = this.copyForm(this.state.form);\n        newForm.en_expanded.value = e.target.value;\n        this.setState({ form: newForm }, () => { this.validate(); });\n    };\n\n    componentDidMount() {\n        this.fetchScenario();\n    }\n\n    fetchScenario() {\n        this.setState({\n            loaded: false,\n            benefit: null,\n            scenario: null,\n            error: null\n        });\n        const data = { token: this.props.token };\n        Api.getScenario(\n                this.props.match.params.benefit,\n                this.props.match.params.id,\n                data\n            )\n            .then((response) => {\n                if (!response.data.benefit || !response.data.scenario) {\n                    this.setState({ error: 'That scenario is unknown' });\n                } else {\n                    const benefit = response.data.benefit;\n                    const scenario = response.data.scenario;\n                    this.setState(prevState => {\n                        let newForm = this.copyForm(prevState.form);\n                        newForm.enabled.value = scenario.enabled;\n                        newForm.en_result.value = scenario.en_result;\n                        newForm.en_expanded.value = scenario.en_expanded;\n                        return {\n                            loaded: true,\n                            benefit: benefit,\n                            scenario: scenario,\n                            form: newForm,\n                            help: this.buildHelp(scenario)\n                        };\n                    }, () => { this.validate(); });\n                }\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch scenario', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch scenario' });\n            });\n    }\n\n    buildHelp(scenario) {\n        let allhelp = {};\n\n        const scenarioLines = scenario.help.split(\"\\n\").join('<br />');\n        allhelp.form = <p dangerouslySetInnerHTML={{__html: scenarioLines}}></p>;\n\n        allhelp.enabled = <p>When this is flag is on, the user will get a response for this scenario.  If we're confident that their employee is not eligible for this benefits, uncheck the box.</p>;\n\n        allhelp.en_result = (\n            <Aux>\n                <p>This text should be kept very short and should answer the following questions where relevant:</p>\n                <ul>\n                    <li>What is this benefit?</li>\n                    <li>Who pays for it?</li>\n                    <li>How do they apply?</li>\n                </ul>\n            </Aux>\n        );\n\n        allhelp.en_expanded = (\n            <p>When the user clicks the \"read more\" button, this is what appears below the main result.  It will be followed by any resource links that have been set for the benefit, and can be collapsed out of view when they click \"read less\".</p>\n        );\n\n        return allhelp;\n    }\n\n    copyForm(form) {\n        let newForm = {};\n        for (const k in form) {\n            newForm[k] = { ...form[k] };\n        }\n        return newForm;\n    }\n\n    validate() {\n        let newForm = this.copyForm(this.state.form);\n        newForm.enabled.error = null;\n        newForm.en_result.error = null;\n        newForm.en_expanded.error = null;\n        let formValid = true;\n        if (this.state.form.enabled.value) {\n            const result = this.state.form.en_result.value;\n            if (!result || result.trim().length < 1) {\n                newForm.en_result.error = 'Please enter some text for the response';\n                formValid = false;\n            }\n        }\n        this.setState({ form: newForm, formValid: formValid });\n    }\n\n    render() {\n        let body = null;\n        let title = 'Results: ';\n        let crumbs = ['Admin', 'Results'];\n\n        if (this.state.loaded) {\n            title += this.state.benefit.abbreviation + ': Edit Scenario';\n            crumbs.push(this.state.benefit.abbreviation);\n            crumbs.push('Scenario');\n\n            let i = 0;\n            const elements = [];\n\n            // Enabled\n            ++i;\n            elements.push(\n                <Element key={i} add_class=\"Checkbox\"\n                    label=\"Eligibility\"\n                    help={this.state.help.enabled}\n                    error={this.state.form.enabled.error}>\n                    <input type=\"checkbox\"\n                        name=\"enabled\"\n                        checked={this.state.form.enabled.value}\n                        onChange={this.clickedEnabled} />\n                    <label onClick={this.clickedEnabled}>The employee would be eligible in this scenario</label>\n                </Element>\n            );\n\n            // Main Result\n            if (this.state.form.enabled.value) {\n                ++i;\n                elements.push(\n                    <Element key={i} add_class=\"Markdown\"\n                        label=\"Main Result\"\n                        help={this.state.help.en_result}\n                        error={this.state.form.en_result.error}>\n                        <EditMarkdown\n                            name=\"en_result\"\n                            value={this.state.form.en_result.value}\n                            changed={this.changedResult}\n                            replace_token=\"employee_type\"\n                            replace_options={Language.get_token_options('employee_type')} />\n                    </Element>\n                );\n            }\n\n            // Expanded Result\n            if (this.state.form.enabled.value) {\n                ++i;\n                elements.push(\n                    <Element key={i} add_class=\"Markdown\"\n                        label=\"Expanded Info\"\n                        help={this.state.help.en_expanded}\n                        error={this.state.form.en_expanded.error}>\n                        <EditMarkdown\n                            name=\"en_expanded\"\n                            value={this.state.form.en_expanded.value}\n                            changed={this.changedExpanded}\n                            replace_token=\"employee_type\"\n                            replace_options={Language.get_token_options('employee_type')} />\n                    </Element>\n                );\n            }\n\n            body = (\n                <Form\n                    help={this.state.help.form}\n                    success={this.state.saved ? 'The scenario response has been saved' : null}\n                    error={this.state.processing_error}\n                    valid={this.state.formValid}\n                    processing={this.state.processing}\n                    submitted={this.submitForm}>\n                    {elements}\n                </Form>\n            );\n\n        } else {\n            title += 'Edit Scenario';\n            crumbs.push('Scenario');\n\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nexport default withRouter(AdminResultsEdit);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Filter from './Filter/Filter';\nimport Edit from './Edit/Edit';\n\nclass AdminResults extends Component {\n\n    render() {\n        const doEdit = () => {\n            return <Edit token={this.props.token} />;\n        };\n        const doFilter = () => {\n            return <Filter token={this.props.token} />;\n        };\n        const doList = () => {\n            return <List token={this.props.token} />;\n        };\n        // /admin/results/resources/edit/1\n        return (\n            <Switch>\n                <Route path=\"/admin/results/:benefit/edit/:id\" render={doEdit} />\n                <Route path=\"/admin/results/:benefit\" render={doFilter} />\n                <Route path=\"/\" render={doList} />\n            </Switch>\n        );\n    }\n\n}\n\nexport default AdminResults;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    if (props.show) {\n        return (\n            <div className=\"Backdrop\" onClick={props.clicked}></div>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default backdrop;\n","import React from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport './Modal.css';\n\nconst modal = (props) => {\n    let classes = [ 'Modal' ];\n    if (props.show) {\n        classes.push('Show');\n    } else {\n        classes.push('Hide');\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.show} clicked={props.cancel} />\n            <div className={classes.join(' ')}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n};\n\nexport default modal;\n","import React from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Modal from '../../UI/Modal/Modal';\nimport Markdown from '../../../utils/Markdown';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\n\nimport './ConfirmDeleteResource.css';\n\nconst confirmDeleteResource = (props) => {\n\n    let contents = null;\n\n    if (props.candidate) {\n        console.log(props.candidate);\n        contents = (\n            <Aux>\n                <h4>Are you sure you want to delete this resource?</h4>\n                <div>\n                    <p><strong>Group:</strong> {props.candidate.benefit}</p>\n                    <p><strong>URL:</strong> {props.candidate.link}</p>\n                    <p><strong>Text:</strong> {props.candidate.text}</p>\n                    {props.candidate.desc ?\n                    <div>\n                        <p><strong>Description:</strong></p>\n                        <div dangerouslySetInnerHTML={{__html: Markdown.render(props.candidate.desc)}}></div>\n                    </div>\n                    : null}\n                </div>\n                <div className=\"DeleteButton\">\n                    <ProcessingButton\n                        working={props.working}\n                        clicked={props.confirm}\n                        text=\"Delete\" />\n                </div>\n            </Aux>\n        );\n    }\n\n    return (\n        <Modal show={props.confirming} cancel={props.cancel}>\n            <div className=\"ConfirmDeleteResource\">\n                <div className=\"CloseButton\">\n                    <IconButton icon_type=\"close\" clicked={props.cancel} />\n                </div>\n                {contents}\n            </div>\n        </Modal>\n    );\n\n};\n\nexport default confirmDeleteResource;\n","import React from 'react';\n\nimport IconButton from '../../UI/IconButton/IconButton';\n\nimport './ActionButtons.css';\n\nconst actionButtons = (props) => {\n    let i = 0;\n    const buttons = props.buttons.map(button => {\n        ++i;\n        const action = (e) => {\n            e.preventDefault();\n            button.clicked(e);\n        }\n        return (\n            <IconButton key={i}\n                icon={button.icon}\n                title={button.title}\n                append_text={button.title}\n                clicked={action} />\n        );\n    });\n    return (\n        <div className=\"ActionButtons\">\n            {buttons}\n        </div>\n    );\n};\n\nexport default actionButtons;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport ConfirmDeleteResource from '../../../../components/Admin/ConfirmDeleteResource/ConfirmDeleteResource';\nimport ActionButtons from '../../../../components/Admin/ActionButtons/ActionButtons';\nimport Table from '../../../../components/UI/Table/Table';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nconst COMMON_CODE = 'common';\n\nclass AdminResourcesList extends Component {\n\n    state = {\n        loaded: false,\n        benefit: null,\n        resources: null,\n        error: null,\n        confirming_delete: false,\n        delete_candidate: null,\n        processing_delete: false,\n        deleted: false\n    };\n\n    resources_clickable = {\n        delete: (row) => {\n            this.setState({ confirming_delete: true, delete_candidate: row });\n        },\n    };\n\n    resources_snip = {\n        link: 40\n    };\n\n    newResource = () => {\n        const code = this.getBenefitCode();\n        if (code && code !== COMMON_CODE) {\n            this.props.history.push('/admin/resources/new/' + code);\n        } else {\n            this.props.history.push('/admin/resources/new');\n        }\n    }\n\n    refresh = () => {\n        this.fetchResources(true);\n    };\n\n    cancelDelete = () => {\n        this.setState({ confirming_delete: false, delete_candidate: null });\n    };\n\n    confirmDelete = () => {\n        this.deleteResource();\n    };\n\n    closeDeleteMessage = () => {\n        this.setState({ deleted: false });\n    };\n\n    componentDidMount() {\n        this.fetchResources(true);\n    }\n\n    fetchResources(fetch_all) {\n        this.setState({ loaded: false, resources: null, error: null });\n        const data = { token: this.props.token };\n        Api.getResources(data, this.getBenefitCode())\n            .then((response) => {\n                const resources = response.data.resources ? response.data.resources : [];\n                if (fetch_all) {\n                    this.setState({ resources: resources });\n                    this.fetchBenefit();\n                } else {\n                    this.setState({ loaded: true, resources: resources });\n                }\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch resources', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch resources' });\n            });\n    }\n\n    fetchBenefit() {\n        const b_code = this.getBenefitCode();\n        if (b_code && b_code !== COMMON_CODE) {\n            this.setState({ loaded: false, benefit: null, error: null });\n            const data = { token: this.props.token };\n            Api.getBenefitInfo(this.getBenefitCode(), data)\n                .then((response) => {\n                    if (!response.data.benefit) {\n                        this.setState({ error: 'That benefit is unknown' });\n                    } else {\n                        this.setState({ loaded: true, benefit: response.data.benefit });\n                    }\n                })\n                .catch((error) => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    Logger.alert('Could not fetch benefit', { api_error: Api.parseAxiosError(error) });\n                    this.setState({ error: 'Could not fetch benefit' });\n                });\n        } else {\n            this.setState({ loaded: true });\n        }\n    }\n\n    deleteResource() { \n        this.setState({ processing_delete: true, deleted: false });\n        const data = {\n            token: this.props.token,\n            id: this.state.delete_candidate.id\n        };\n        Api.deleteResource(data)\n            .then((response) => {\n                this.setState({ processing_delete: false, deleted: true, confirming_delete: false });\n                this.fetchResources();\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not delete resource', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not delete resource', processing_delete: false });\n            });\n    }\n\n    getBenefitCode() {\n        return this.props.match.params.benefit;\n    }\n\n    render() {\n        let body = null;\n        let title = 'Results: ';\n        let crumbs = ['Admin' ];\n        if (this.state.loaded) {\n            if (this.state.benefit) {\n                title += this.state.benefit.abbreviation + ': Resources';\n                crumbs.push(this.state.benefit.abbreviation);\n                crumbs.push('Resources');\n            } else if (this.getBenefitCode() === COMMON_CODE) {\n                title += 'Common Resources';\n                crumbs.push('Resources');\n            } else {\n                title += 'All Resources';\n                crumbs.push('Resources');\n            }\n            let resources_rows = this.state.resources\n                .map(resource => {\n                    let edit_link = (\n                        <Link to={'/admin/resources/edit/' + resource.id}>\n                            <i className=\"fas fa-pencil-alt\" title=\"Edit Resource\"></i>\n                        </Link>\n                    );\n                    let row = {\n                        id: resource.id,\n                        code: resource.code,\n                        text: resource.en_text,\n                        desc: resource.en_desc,\n                        link: resource.links.en,\n                        edit: edit_link,\n                        delete: <i className=\"fas fa-trash-alt\" title=\"Delete Resource\"></i>\n                    };\n                    if (!this.state.benefit) {\n                        row.benefit = resource.benefit || 'Common';\n                    }\n                    return row;\n                });\n            let resources_cols = [];\n            if (!this.state.benefit) {\n                resources_cols.push({ key: 'benefit', title: 'Benefit' });\n            }\n            resources_cols.push({ key: 'link', title: 'Link' });\n            resources_cols.push({ key: 'text', title: 'Text' });\n            resources_cols.push({ key: 'edit', title: 'Edit' });\n            resources_cols.push({ key: 'delete', title: 'Delete' });\n            body = (\n                <Aux>\n                    {this.state.deleted ?\n                        <Message type=\"success\" text=\"The resource was deleted\" closed={this.closeDeleteMessage} />\n                    : null}\n                    <ConfirmDeleteResource\n                        confirming={this.state.confirming_delete}\n                        working={this.state.processing_delete}\n                        confirm={this.confirmDelete}\n                        cancel={this.cancelDelete}\n                        candidate={this.state.delete_candidate} />\n                    <ActionButtons buttons={[{icon: \"fas fa-plus-circle\",\n                        title: \"New Resource\",\n                        clicked: this.newResource}]} />\n                    <Table\n                        rows={resources_rows}\n                        cols={resources_cols}\n                        clickable={this.resources_clickable}\n                        snip={this.resources_snip} />\n                </Aux>\n            );\n\n        } else {\n            title += 'Resources';\n            crumbs.push('Resources');\n\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminResourcesList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Form from '../../../../components/Admin/Form/Form';\nimport Element from '../../../../components/Admin/Form/Element/Element';\nimport EditMarkdown from '../../../../components/Admin/EditMarkdown/EditMarkdown';\nimport Api from '../../../../storage/Api';\nimport Language from '../../../../utils/Language';\nimport Logger from '../../../../utils/Logger';\n\nclass AdminResourcesEdit extends Component {\n\n    state = {\n        loaded: false,\n        resource: null,\n        reload_id: null,\n        all_benefits: [],\n        error: null,\n        form: {\n            benefit_id: {\n                value: null,\n                error: null\n            },\n            link_en: {\n                value: null,\n                error: null\n            },\n            en_text: {\n                value: null,\n                error: null\n            },\n            en_desc: {\n                value: null,\n                error: null\n            }\n        },\n        formValid: true,\n        saved: false,\n        processing_error: null,\n        processing: false\n    };\n\n    help = {\n        benefit_id: <p>The benefit associated with this resource</p>,\n        link_en: <p>The link to this resource</p>,\n        en_text: <p>The text for the link</p>,\n        en_desc: <p>Any description that should be shown below the link (optional)</p>\n    };\n\n    changedBenefitID = (e) => {\n        let newForm = this.copyForm(this.state.form);\n        newForm.benefit_id.value = e.target.value;\n        this.setState({ form: newForm }, () => { this.validate(); });\n    };\n\n    changedLink = (e) => {\n        let newForm = this.copyForm(this.state.form);\n        newForm.link_en.value = e.target.value;\n        this.setState({ form: newForm }, () => { this.validate(); });\n    };\n\n    changedText = (e) => {\n        let newForm = this.copyForm(this.state.form);\n        newForm.en_text.value = e.target.value;\n        this.setState({ form: newForm }, () => { this.validate(); });\n    };\n\n    changedDescription = (e) => {\n        let newForm = this.copyForm(this.state.form);\n        newForm.en_desc.value = e.target.value;\n        this.setState({ form: newForm }, () => { this.validate(); });\n    };\n\n    submitForm = (e) => {\n        e.preventDefault();\n        this.setState({\n            processing: true,\n            processing_error: null,\n            saved: false\n        });\n        let info = {};\n        if (this.state.resource) {\n            info.id = this.state.resource.id;\n            info.code = this.state.resource.code;\n            info.lang_key_text = this.state.resource.lang_key_text;\n            info.lang_key_desc = this.state.resource.lang_key_desc;\n        }\n        info.benefit = null;\n        const form_id = this.state.form.benefit_id.value ? parseInt(this.state.form.benefit_id.value) : NaN;\n        if (!isNaN(form_id)) {\n            for (var b of this.state.all_benefits) {\n                if (b.id === form_id) {\n                    info.benefit = { ...b };\n                }\n            }\n        }\n        info.en_text = this.state.form.en_text.value;\n        info.en_desc = this.state.form.en_desc.value;\n        info.links = { en: this.state.form.link_en.value };\n        Api.saveResource({\n                token: this.props.token,\n                info: info\n            })\n            .then((response) => {\n                let doNext = null;\n                if (!info.id) {\n                    doNext = () => {\n                        if (response.data.id) {\n                            this.props.history.push('/admin/resources/edit/' + response.data.id);\n                            this.setState({ reload_id: response.data.id }, () => { this.fetchResource(); });\n                        }\n                    };\n                }\n                this.setState({\n                    processing: false,\n                    processing_error: false,\n                    saved: true\n                }, doNext);\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not save resource', { api_error: Api.parseAxiosError(error), info: info });\n                this.setState({\n                    processing: false,\n                    processing_error: 'Could not save resource'\n                });\n            });\n    };\n\n    refresh = () => {\n        if (this.getId()) {\n            this.fetchResource(true);\n        } else {\n            this.fetchBenefits();\n        }\n    };\n\n    componentDidMount() {\n        if (this.getId()) {\n            this.fetchResource(true);\n        } else {\n            this.fetchBenefits();\n        }\n    }\n\n    fetchResource(fetch_all) {\n        this.setState({ loaded: false, resource: null, error: null });\n        const data = { token: this.props.token };\n        Api.getResource(this.getId(), data)\n            .then((response) => {\n                const resource = response.data.resource;\n                if (fetch_all) {\n                    this.refreshForm(resource);\n                    this.fetchBenefits();\n                } else {\n                    this.refreshForm(resource, true);\n                }\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch resource', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch resource' });\n            });\n    }\n\n    fetchBenefits() {\n        this.setState({ loaded: false, all_benefits: null, error: null });\n        const data = { token: this.props.token };\n        Api.getBenefits(data)\n            .then((response) => {\n                const benefits = response.data.benefits ? response.data.benefits : [];\n                this.setState((prevState) => {\n                    let newState = { loaded: true, all_benefits: benefits };\n                    let benefit_id = null;\n                    if (this.props.match.params.benefit) {\n                        for (const b of newState.all_benefits) {\n                            if (this.props.match.params.benefit === b.code) {\n                                benefit_id = b.id;\n                            }\n                        }\n                    }\n                    if (benefit_id !== null) {\n                        let newForm = this.copyForm(prevState.form);\n                        newForm.benefit_id.value = benefit_id;\n                        newState.form = newForm;\n                    }\n                    return newState;\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch benefits', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch benefits' });\n            });\n    }\n\n    refreshForm(resource, markLoaded) {\n        this.setState(prevState => {\n            let newForm = this.copyForm(prevState.form);\n            newForm.benefit_id.value = resource.benefit ? resource.benefit.id : null;\n            newForm.link_en.value = resource.links.en;\n            newForm.en_text.value = resource.en_text;\n            newForm.en_desc.value = resource.en_desc;\n            let newState = {\n                resource: resource,\n                form: newForm\n            };\n            if (markLoaded) {\n                newState.loaded = true;\n            }\n            return newState;\n        }, () => { this.validate(); });\n    }\n\n    copyForm(form) {\n        let newForm = {};\n        for (const k in form) {\n            newForm[k] = { ...form[k] };\n        }\n        return newForm;\n    }\n\n    validate() {\n        let oldForm = this.state.form;\n        let newForm = this.copyForm(oldForm);\n        for (const k in newForm) {\n            newForm[k].error = null;\n        }\n        let ok = true;\n        if (!oldForm.link_en.value ||\n            oldForm.link_en.value.trim().length < 1) {\n            newForm.link_en.error = 'Please enter a link to this resource';\n        }\n        if (!oldForm.en_text.value ||\n            oldForm.en_text.value.trim().length < 1) {\n            newForm.en_text.error = 'Please enter the text used to link to this resource';\n        }\n        this.setState({ formValid: ok, form: newForm });\n    }\n\n    getId() {\n        if (this.props.match.params.id) {\n            return this.props.match.params.id;\n        } else if (this.state.reload_id !== null) {\n            return this.state.reload_id;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n\n        let body = null;\n        let title = 'Resources: Edit';\n        let crumbs = ['Admin', 'Resources'];\n\n        if (this.state.loaded) {\n            let elements = [];\n            let i = 0;\n\n            if (this.state.resource === null) {\n                title = 'Resources: New';\n            }\n\n            // Benefit\n            ++i;\n            let options = this.state.all_benefits.map(benefit => {\n                return (\n                    <option key={benefit.id} value={benefit.id}>{benefit.abbreviation}</option>\n                );\n            });\n            options.unshift(<option key=\"common\" value=\"\">Common</option>);\n            elements.push(\n                <Element key={i} add_class=\"Select\"\n                    label=\"Associated Benefit\"\n                    help={this.help.benefit_id}\n                    error={this.state.form.benefit_id.error}>\n                    <select name=\"benefit_id\"\n                        value={this.state.form.benefit_id.value || ''}\n                        onChange={this.changedBenefitID}>\n                        {options}\n                    </select>\n                </Element>\n            );\n\n            // Link\n            ++i;\n            elements.push(\n                <Element key={i} add_class=\"Text\"\n                    label=\"URL\"\n                    help={this.help.link_en}\n                    error={this.state.form.link_en.error}>\n                    <input type=\"text\" name=\"link_en\" size=\"80\"\n                        value={this.state.form.link_en.value || ''}\n                        onChange={this.changedLink} />\n                </Element>\n            );\n\n            // Main Text\n            ++i;\n            elements.push(\n                <Element key={i} add_class=\"Text\"\n                    label=\"Text\"\n                    help={this.help.en_text}\n                    error={this.state.form.en_text.error}>\n                    <input type=\"text\" name=\"en_text\" size=\"80\"\n                        value={this.state.form.en_text.value || ''}\n                        onChange={this.changedText} />\n                </Element>\n            );\n\n            // Description\n            ++i;\n            elements.push(\n                <Element key={i} add_class=\"Text\"\n                    label=\"Description\"\n                    help={this.help.en_desc}\n                    error={this.state.form.en_desc.error}>\n                    <EditMarkdown\n                        name=\"en_result\"\n                        value={this.state.form.en_desc.value}\n                        changed={this.changedDescription}\n                        replace_token=\"employee_type\"\n                        replace_options={Language.get_token_options('employee_type')} />\n                </Element>\n            );\n\n            body = (\n                <Form\n                    success={this.state.saved ? 'The resource has been saved' : null}\n                    error={this.state.processing_error}\n                    valid={this.state.formValid}\n                    processing={this.state.processing}\n                    submitted={this.submitForm}>\n                    {elements}\n                </Form>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminResourcesEdit);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Edit from './Edit/Edit';\n\nclass AdminResources extends Component {\n\n    render() {\n        const doEdit = () => {\n            return <Edit token={this.props.token} />;\n        };\n        const doList = () => {\n            return <List token={this.props.token} />;\n        };\n        return (\n            <Switch>\n                <Route path=\"/admin/resources/edit/:id\" render={doEdit} />\n                <Route path=\"/admin/resources/new/:benefit\" render={doEdit} />\n                <Route path=\"/admin/resources/new\" render={doEdit} />\n                <Route path=\"/admin/resources/:benefit\" render={doList} />\n                <Route path=\"/\" render={doList} />\n            </Switch>\n        );\n    }\n\n}\n\nexport default AdminResources;\n","import React from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './SearchFilters.css';\n\nconst searchFilters = (props) => {\n    const searches = props.searches.map(search => {\n        let clearButton = null;\n        if (search.value) {\n            clearButton = <IconButton icon=\"far fa-times-circle\"\n                title={search.clear_title || 'Clear'}\n                clicked={props.cleared} />;\n        }\n        return (\n            <div className=\"Filter\" key={search.label}>\n                <label>{search.label}</label>\n                <input type=\"text\" name={search.name}\n                    size=\"40\"\n                    value={search.value || ''}\n                    onChange={props.changed} />\n                {clearButton}\n            </div>\n        );\n    });\n    return (\n        <div className=\"SearchFilters\">\n            {searches}\n        </div>\n    );\n};\n\nexport default searchFilters;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport SelectFilters from '../../../../components/UI/SelectFilters/SelectFilters';\nimport SearchFilters from '../../../../components/UI/SearchFilters/SearchFilters';\nimport Table from '../../../../components/UI/Table/Table';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nconst MAX_KEY_LENGTH = 50;\nconst MAX_ENGLISH_LENGTH = 100;\nconst SKIP_SECTIONS = [ 'results_resources', 'results_processing' ];\n\nclass AdminLanguageList extends Component {\n    \n    state = {\n        loaded: false,\n        sections: null,\n        filter: {\n            section: null,\n            search: null\n        },\n        error: null\n    };\n\n    snip = {\n        key: MAX_KEY_LENGTH,\n        english: MAX_ENGLISH_LENGTH\n    };\n\n    clickable = {\n        edit: (row) => { this.editRow(row); }\n    };\n\n    refresh = () => {\n        this.fetchLanguage();\n    };\n\n    setSectionFilter = (e) => {\n        let newFilter = { ...this.state.filter };\n        newFilter.section = e.target.value;\n        this.setState({ filter: newFilter });\n    };\n\n    doSearch = (e) => {\n        let newFilter = { ...this.state.filter };\n        newFilter.search = e.target.value.toLowerCase();\n        this.setState({ filter: newFilter });\n    };\n\n    clearSearch = (e) => {\n        e.preventDefault();\n        let newFilter = { ...this.state.filter };\n        newFilter.search = null;\n        this.setState({ filter: newFilter });\n    };\n\n    editRow(row) {\n        this.props.history.push('/admin/language/edit/' + row.key);\n    }\n\n    componentDidMount() {\n        this.fetchLanguage();\n    }\n\n    fetchLanguage() {\n        this.setState({ loaded: false, sections: null, error: null });\n        const data = { token: this.props.token };\n        Api.getAllLanguage(data)\n            .then((response) => {\n                const all = response.data.all ? response.data.all : [];\n                this.setState({ loaded: true, sections: all });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch language keys', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch language keys' });\n            });\n    }\n\n    filterRows() {\n        let base = [];\n        const section = this.state.filter.section || this.getSection();\n        if (section) {\n            for (const info of this.state.sections[section]) {\n                base.push({ ...info, section: section });\n            }\n        } else {\n            for (const s in this.state.sections) {\n                for (const info of this.state.sections[s]) {\n                    if (SKIP_SECTIONS.includes(s)) {\n                        continue;\n                    }\n                    base.push({ ...info, section: s });\n                }\n            }\n        }\n        return base.filter((row) => {\n            if (this.state.filter.search) {\n                if (!row.english) {\n                    return false;\n                } else if (row.english.toLowerCase().includes(this.state.filter.search)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        });\n    }\n\n    getSection() {\n        if (this.props.match.params.section) {\n            return this.props.match.params.section;\n        }\n        return null;\n    }\n\n    render() {\n        let body = null;\n        if (this.state.loaded) {\n            let cols = [\n                { key: 'key', title: 'Key' },\n                { key: 'english', title: 'English' },\n                { key: 'edit', title: 'Edit' }\n            ];\n            let filterBySection = null;\n            if (this.getSection() === null) {\n                cols.unshift({ key: 'section', title: 'Section' });\n                const options = Object.keys(this.state.sections)\n                    .map(section => {\n                        return { value: section, text: section };\n                    });\n                const selectProps = [{\n                    label: 'Filter by Section',\n                    name: 'section',\n                    options: options\n                }];\n                filterBySection = (\n                    <SelectFilters\n                        selects={selectProps}\n                        empty=\"any\"\n                        changed={this.setSectionFilter} />\n                );\n            }\n            const searches = [{\n                label: 'Search',\n                name: 'search',\n                value: this.state.filter.search\n            }];\n            const rows = this.filterRows().map(row => {\n                let tablerow = {\n                    key: row.key,\n                    english: row.english,\n                    edit: <i className=\"fas fa-pencil-alt\" title=\"Edit Language\"></i>\n                };\n                if (this.getSection() === null) {\n                    tablerow.section = row.section;\n                }\n                return tablerow;\n            });\n            body = (\n                <Aux>\n                    {filterBySection}\n                    <SearchFilters\n                        searches={searches}\n                        changed={this.doSearch}\n                        cleared={this.clearSearch} />\n                    <Table\n                        rows={rows}\n                        cols={cols}\n                        clickable={this.clickable}\n                        snip={this.snip} />\n                </Aux>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        let title = 'Language';\n        let crumbs = ['Admin', 'Language', 'List'];\n        let section = this.getSection();\n        if (section === null) {\n            title += ': All language used in the user-facing site';\n        } else {\n            let sectitle = section.split('_')\n                .map(w => w.replace(w[0], w[0].toUpperCase()))\n                .join(' ');\n            title += ': ' + sectitle + ' Section';\n            crumbs.push(sectitle);\n        }\n        return (\n            <AdminPage\n                title={title}\n                breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminLanguageList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport EditMarkdown from '../../../../components/Admin/EditMarkdown/EditMarkdown';\nimport Form from '../../../../components/Admin/Form/Form';\nimport Element from '../../../../components/Admin/Form/Element/Element';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\nimport Language from '../../../../utils/Language';\n\nclass AdminLanguageEdit extends Component {\n\n    state = {\n        loaded: false,\n        error: null,\n        language_info: null,\n        original_english: null,\n        english: null,\n        processing: false,\n        processing_error: null,\n        saved: false\n    };\n\n    md = null;\n\n    refresh = () => {\n        this.fetchInfo();\n    };\n\n    changeEnglish = (e) => {\n        let val = e.target.value;\n        this.setState({ english: val });\n    };\n\n    submitEdit = () => {\n        this.setState({\n            processing: true,\n            saved: false,\n            processing_error: null\n        });\n        const data = {\n            token: this.props.token,\n            key: this.getKey(),\n            language: 'en',\n            translation: this.state.english\n        };\n        Api.saveTranslation(data)\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    processing: false,\n                    processing_error: false,\n                    saved: true\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not save language', { api_error: Api.parseAxiosError(error), key: this.getKey() });\n                this.setState({\n                    processing: false,\n                    processing_error: 'Could not save language'\n                });\n            });\n    };\n\n    componentDidMount() {\n        this.md = require('markdown-it')();\n        this.fetchInfo();\n    }\n\n    fetchInfo() {\n        this.setState({ loaded: false, error: null });\n        const data = { token: this.props.token, key: this.getKey() };\n        Api.getLanguageInfo(data)\n            .then((response) => {\n                this.setState({\n                    loaded: true,\n                    language_info: response.data.info,\n                    original_english: response.data.en,\n                    english: response.data.en\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch language info', { api_error: Api.parseAxiosError(error), key: this.getKey() });\n                this.setState({ error: 'Could not fetch language info' });\n            });\n    }\n\n    getKey() {\n        if (this.props.match.params.key) {\n            return this.props.match.params.key;\n        }\n        return null;\n    }\n\n    render() {\n        let body = null;\n        if (!this.state.loaded) {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n\n        } else {\n            let helptext = this.md.render(this.state.language_info.help);\n            let helpbox = (\n                <Aux>\n                    <p><i>Appears in: <strong>{this.state.language_info.section}</strong></i></p>\n                    {helptext ?\n                        <div dangerouslySetInnerHTML={{__html: helptext}} />\n                    : null}\n                </Aux>\n            );\n            let label = 'English text for: ' + this.getKey();\n            let input = null;\n            let elem_class = null;\n            if (this.state.language_info.markdown_allowed) {\n                elem_class = 'Markdown';\n                input = <EditMarkdown\n                    name=\"english\"\n                    value={this.state.english}\n                    changed={this.changeEnglish}\n                    replace_token={this.state.language_info.token_replace}\n                    replace_options={Language.get_token_options(this.state.language_info.token_replace)} />\n            } else {\n                elem_class = 'PlainText';\n                input = <input type=\"text\"\n                    size=\"50\"\n                    name=\"english\"\n                    value={this.state.english}\n                    onChange={this.changeEnglish} />\n            }\n            body = (\n                <Form help={helpbox}\n                    success={this.state.saved ? 'The new language has been saved' : null}\n                    error={this.state.processing_error}\n                    valid={true}\n                    processing={this.state.processing}\n                    submitted={this.submitEdit}>\n                    <Element add_class={elem_class} label={label}>\n                        {input}\n                    </Element>\n                </Form>\n            );\n        }\n\n        return (\n            <AdminPage\n                title=\"Language: Edit language for the tool\"\n                breadcrumbs={['Admin', 'Language', 'Edit']}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminLanguageEdit);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Edit from './Edit/Edit';\n\nclass AdminLanguage extends Component {\n\n    render() {\n        const doEdit = () => {\n            return <Edit token={this.props.token} />;\n        };\n        const doList = () => {\n            return <List token={this.props.token} />;\n        };\n        return (\n            <Switch>\n                <Route path=\"/admin/language/edit/:key\" render={doEdit} />\n                <Route path=\"/admin/language/:section\" render={doList} />\n                <Route path=\"/\" render={doList} />\n            </Switch>\n        );\n    }\n}\n\nexport default AdminLanguage;\n","import React from 'react';\n\nimport Spinner from '../../UI/Spinner/Spinner';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport Message from '../../UI/Message/Message';\nimport Table from '../../UI/Table/Table';\n\nimport './DashboardBlock.css';\n\nconst dashboardBlock = (props) => {\n    let body = null;\n    if (props.loaded) {\n        let refresh = null;\n        if (props.refresh) {\n            refresh = (\n                <div className=\"RefreshWrapper\">\n                    <IconButton icon_type=\"refresh\"\n                        clicked={props.refresh} />\n                </div>\n            );\n        }\n        let data = null;\n        if (props.rows.length > 0) {\n            data = (\n                <div className=\"YesData\">\n                    <Table size=\"tiny\" rows={props.rows} cols={props.cols} />\n                </div>\n            );\n        } else {\n            data = <div className=\"NoData\">There is nothing to show</div>\n        }\n        body = (\n            <div className=\"DashboardBlockBody Loaded\">\n                {refresh}\n                {data}\n            </div>\n        );\n    } else {\n        let message = null;\n        if (props.error) {\n            message = (\n                <Message type=\"error\"\n                    text={props.error}\n                    tryagain={props.refresh} />\n            );\n        }\n        body = (\n            <div className=\"DashboardBlockBody Waiting\">\n                <Spinner />\n                {message}\n            </div>\n        );\n    }\n    return (\n        <div className=\"DashboardBlock\">\n            <h4>{props.title}</h4>\n            {body}\n        </div>\n    );\n};\n\nexport default dashboardBlock;\n","import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\n\nimport Block from '../../../components/Admin/DashboardBlock/DashboardBlock';\n\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\n\nclass AdminDashboard extends Component {\n\n    state = {\n        responses_loaded: false,\n        responses_error: null,\n        responses: null,\n        contacts_loaded: false,\n        contacts_error: null,\n        contacts: null,\n    };\n\n    responses_headers = [\n        { key: 'date', title: 'Date' },\n        { key: 'type', title: 'Employee Type' },\n        { key: 'books', title: 'On the Books?' },\n    ];\n\n    contacts_headers = [\n        { key: 'date', title: 'Date' },\n        { key: 'email', title: 'Email' },\n        { key: 'ZIP', title: 'ZIP Code' },\n    ];\n\n    componentDidMount() {\n        this.fetchRecentResponses();\n        this.fetchRecentContacts();\n    }\n\n    refreshResponses = () => {\n        this.fetchRecentResponses();\n    };\n\n    refreshContacts = () => {\n        this.fetchRecentContacts();\n    };\n\n    fetchRecentResponses() {\n        this.setState({\n            responses_loaded: false,\n            responses: null,\n            responses_error: null });\n        const data = { token: this.props.token };\n        Api.getRecentResponses(data)\n            .then((response) => {\n                const found = response.data.recent ? response.data.recent : [];\n                const recent = found.map((row) => {\n                    let dt = DateTime.fromISO(row.submitted);\n                    let formatted = dt.toFormat('LLL dd');\n                    return { ...row, date: formatted };\n                });\n                this.setState({ responses_loaded: true, responses: recent });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch recent responses', { api_error: Api.parseAxiosError(error) });\n                this.setState({ responses_error: 'Could not fetch recent responses' });\n            });\n    }\n\n    fetchRecentContacts() {\n        this.setState({\n            contacts_loaded: false,\n            contacts: null,\n            contacts_error: null });\n        const data = { token: this.props.token };\n        Api.getRecentContacts(data)\n            .then((response) => {\n                const found = response.data.recent ? response.data.recent : [];\n                const recent = found.map((row) => {\n                    let dt = DateTime.fromISO(row.submitted);\n                    let formatted = dt.toFormat('LLL dd');\n                    return { ...row, date: formatted };\n                });\n                this.setState({ contacts_loaded: true, contacts: recent });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch recent contacts', { api_error: Api.parseAxiosError(error) });\n                this.setState({ contacts_error: 'Could not fetch recent contacts' });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"Dashboard\">\n                <Block\n                    title=\"Recent Responses\"\n                    loaded={this.state.responses_loaded}\n                    error={this.state.responses_error}\n                    refresh={this.refreshResponses}\n                    rows={this.state.responses}\n                    cols={this.responses_headers} />\n                <Block\n                    title=\"Recent Contacts\"\n                    loaded={this.state.contacts_loaded}\n                    error={this.state.contacts_error}\n                    refresh={this.refreshContacts}\n                    rows={this.state.contacts}\n                    cols={this.contacts_headers} />\n            </div>\n        );\n    }\n}\n\nexport default AdminDashboard;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport './AdminLayout.css';\n\nclass AdminLayout extends Component {\n    render() {\n\n        return (\n            <div className=\"Admin\">\n                <div className=\"AdminNav\">\n                    <ul>\n                        <li><NavLink exact to=\"/admin\">Dashboard</NavLink></li>\n                        <li><NavLink to=\"/admin/language\">Language</NavLink></li>\n                        <li><NavLink to=\"/admin/results\">Results</NavLink></li>\n                        <li><NavLink to=\"/admin/resources\">Resources</NavLink></li>\n                        <li><NavLink to=\"/admin/advanced\">Advanced</NavLink></li>\n                    </ul>\n                </div>\n                <div className=\"AdminMain\">\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminLayout;\n","import React from 'react';\n\nimport './LoginBox.css';\n\nconst loginBox = (props) => {\n    let button = null;\n    if (props.loading) {\n        button = <button disabled=\"disabled\" className=\"Loading\">{props.lang.button_text}</button>;\n    } else {\n        button = <button type=\"submit\">{props.lang.button_text}</button>;\n    }\n\n    return (\n        <div className=\"LoginBox\">\n            {props.header ? (\n                <h3>{props.header}</h3>\n            ) : null}\n            {props.loginError ?\n                <div className=\"Error\">{props.lang.login_error}</div>\n            : null}\n            <form method=\"post\" onSubmit={props.submitted}>\n                <label>{props.lang.username_label}</label>\n                <input type=\"text\" name=\"username\" value={props.username} onChange={props.usernameChanged} autoComplete=\"username\" />\n                <label>{props.lang.password_label}</label>\n                <input type=\"password\" name=\"password\" value={props.password} onChange={props.passwordChanged} autoComplete=\"current-password\" />\n                <div className=\"ButtonContainer\">\n                    {button}\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default loginBox;\n","import React, { Component } from 'react';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport LoginBox from '../../components/LoginBox/LoginBox';\nimport Api from '../../storage/Api';\nimport Language from '../../utils/Language';\nimport Logger from '../../utils/Logger';\n\nclass Login extends Component {\n\n    state = {\n        loading: false,\n        username: '',\n        password: '',\n        loginError: false,\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    };\n\n    changePassword = (e) => {\n        this.setState({ password: e.target.value });\n    };\n\n    validate = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true,\n            loginError: false\n        });\n        const data = {\n            username: this.state.username,\n            password: this.state.password\n        };\n        let call = null;\n        if (this.props.login_type === 'prelaunch') {\n            call = Api.checkPrelaunchLogin(data);\n        } else {\n            call = Api.checkAdminLogin(data);\n        }\n        call.then(response => {\n            if (response.data.token) {\n                this.setState({\n                    loading: false,\n                });\n                this.props.updateLoginState(response.data.token);\n            } else {\n                Logger.alert('Log in succeeded without returning a token', { returned: response.data, login_type: this.props.login_type });\n                this.setState({\n                    loading: false,\n                    loginError: true\n                });\n            }\n        })\n        .catch(error => {\n            const parsed = Api.parseAxiosError(error);\n            if (parsed.code !== 'LOGIN_INCORRECT' &&\n                parsed.code !== 'USERNAME_REQUIRED' &&\n                parsed.code !== 'PASSWORD_REQUIRED') {\n                Logger.alert('Log in failed', { api_error: parsed, login_type: this.props.login_type });\n            }\n            this.setState({\n                loading: false,\n                loginError: true\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.lang = {\n            button_text: Language.get('prelaunch_login_button_text'),\n            login_error: Language.get('prelaunch_login_error'),\n            username_label: Language.get('prelaunch_login_username_label'),\n            password_label: Language.get('prelaunch_login_password_label'),\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return <LoginBox\n            header={this.props.header}\n            loading={this.state.loading}\n            loginError={this.state.loginError}\n            username={this.state.username}\n            password={this.state.password}\n            usernameChanged={this.changeUsername}\n            passwordChanged={this.changePassword}\n            submitted={this.validate}\n            lang={this.lang} />;\n    }\n\n}\n\nexport default Login;\n","import CookieBase from '../CookieBase';\n\nconst loginCookie = new CookieBase(\n    'hnct-login', // name\n    {\n        path: '/',\n        maxAge: 60 * 60,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default loginCookie;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Advanced from './Advanced/Advanced';\nimport Results from './Results/Results';\nimport Resources from './Resources/Resources';\nimport Language from './Language/Language';\nimport Dashboard from './Dashboard/Dashboard';\nimport AdminLayout from '../../hoc/AdminLayout/AdminLayout';\nimport Login from '../Login/Login';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport LoginCookie from '../../storage/cookies/LoginCookie';\nimport Api from '../../storage/Api';\nimport Logger from '../../utils/Logger';\n\nimport './Admin.css';\n\nclass Admin extends Component {\n\n    state = {\n        loggedIn: false,\n        loaded: false,\n        token: null\n    };\n\n    updateLogin = (token) => {\n        this.setState({ loggedIn: true, loaded: true, token: token });\n        LoginCookie.set(token);\n    };\n\n    componentDidMount() {\n        let token = LoginCookie.get();\n        if (token) {\n            Api.checkAdminToken({ token: token })\n                .then(response => {\n                    this.setState({ loggedIn: true, loaded: true, token: token });\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Admin session check failed', { api_error: parsed });\n                    }\n                    this.setState({ loaded: true });\n                });\n        } else {\n            this.setState({ loaded: true });\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        if (this.state.loggedIn) {\n            const doAdvanced = () => <Advanced token={this.state.token} />;\n            const doResources = () => <Resources token={this.state.token} />;\n            const doResults = () => <Results token={this.state.token} />;\n            const doLanguage = () => <Language token={this.state.token} />;\n            const doDashboard = () => <Dashboard token={this.state.token} />;\n            return (\n                <AdminLayout>\n                    <Switch>\n                        <Route path=\"/admin/advanced\" render={doAdvanced} />\n                        <Route path=\"/admin/resources\" render={doResources} />\n                        <Route path=\"/admin/results\" render={doResults} />\n                        <Route path=\"/admin/language\" render={doLanguage} />\n                        <Route path=\"/admin\" render={doDashboard} />\n                    </Switch>\n                </AdminLayout>\n            );\n\n        } else {\n            const header = 'Admin Login';\n            return (\n                <div className=\"AdminLogin\">\n                    <Login header={header} updateLoginState={this.updateLogin} />\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Admin;\n","import React from 'react';\n\nimport './Notice.css';\n\nconst notice = (props) => {\n    if (!props.show) {\n        return null;\n    }\n    return (\n        <div className=\"Notice\">\n            <button className=\"CloseNotice\" onClick={props.closed}><i className=\"fas fa-times\" title=\"{props.lang.close_alt}\"></i></button>\n            <div className=\"NoticeContent\">\n                <div className=\"NoticeMessage\">\n                    <h6>{props.lang.title}</h6>\n                    <div dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n                </div>\n                <button className=\"AcceptButton\" onClick={props.accepted}>{props.lang.accept_button_text}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default notice;\n","import CookieBase from '../CookieBase';\n\nconst cookieNoticeCookie = new CookieBase(\n    'hnct-cookienotice', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 14,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default cookieNoticeCookie;\n","import React, { Component } from 'react';\n\nimport Notice from '../../components/UI/Notice/Notice';\nimport CookieNoticeCookie from '../../storage/cookies/CookieNoticeCookie';\nimport Language from '../../utils/Language';\n\nclass CookieNotice extends Component {\n\n    state = {\n        showNotice: true,\n        noticeAccepted: true,\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    hideNotice = () => {\n        this.setState({ showNotice: false });\n    };\n\n    acceptNotice = () => {\n        CookieNoticeCookie.set(new Date());\n        this.setState({ noticeAccepted: true, showNotice: false });\n    };\n\n    componentDidMount() {\n        this.lang = {\n            close_alt: Language.get('util_cancel_alt_text'),\n            title: Language.get('cookie_notice_title'),\n            message: Language.get('cookie_notice_message'),\n            accept_button_text: Language.get('cookie_notice_accept_button_text'),\n        };\n        let newstate = { loaded_lang: true };\n        let date = CookieNoticeCookie.get();\n        if (date) {\n            newstate.noticeAccepted = true;\n            newstate.showNotice = false;\n        }\n        this.setState(newstate);\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return null;\n        }\n        return (\n            <Notice\n                show={this.state.showNotice}\n                closed={this.hideNotice}\n                accepted={this.acceptNotice}\n                lang={this.lang} />\n        );\n    }\n}\n\nexport default CookieNotice;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux/Aux';\nimport Layout from '../../hoc/Layout/Layout';\nimport BenefitsTool from '../../containers/BenefitsTool/BenefitsTool';\nimport Admin from '../../containers/Admin/Admin';\nimport CookieNotice from '../CookieNotice/CookieNotice';\nimport Language from '../../utils/Language';\n\nclass Main extends Component {\n\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        this.lang = {\n            layout: {\n                logo_alt_text: Language.get('layout_logo_alt_text'),\n                header_title: Language.get('layout_header_title')\n            }\n        };\n        this.setState({ loaded: true });\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        return (\n            <Layout lang={this.lang.layout}>\n                <Switch>\n                    <Route path=\"/admin\" component={Admin} />\n                    <Route path=\"/\" render={() => (\n                        <Aux>\n                            <BenefitsTool />\n                            <CookieNotice />\n                        </Aux>\n                    )} />\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Before launch, we loaded the PreLaunch container to wrap everything in a global access login\nimport Main from './containers/Main/Main';\n\nimport './App.css';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}