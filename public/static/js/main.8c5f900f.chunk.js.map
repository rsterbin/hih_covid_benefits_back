{"version":3,"sources":["utils/CookieManager.js","storage/CookieBase.js","hoc/Layout/Layout.js","components/UI/Spinner/Spinner.js","storage/cookies/VisitorCookie.js","logic/VisitorPrefs.js","components/BenefitsTool/CookieNotice/CookieNotice.js","components/UI/IconButton/IconButton.js","components/UI/Message/Message.js","components/UI/Controls/Controls.js","components/BenefitsTool/Intro/Intro.js","storage/cookies/IdentifierCookie.js","storage/Api.js","utils/Logger.js","storage/cookies/LanguageCookie.js","utils/Language.js","storage/cookies/LoginCookie.js","storage/redux/actions/admin/auth.js","storage/redux/actions/actionTypes.js","storage/redux/utility.js","logic/Questions.js","storage/cookies/AnswersCookie.js","storage/redux/actions/tool.js","storage/redux/actions/admin/contacts.js","utils/utils.js","storage/redux/actions/admin/deploys.js","storage/redux/actions/admin/language.js","storage/redux/actions/admin/resources.js","storage/redux/actions/admin/responses.js","storage/redux/actions/admin/results.js","storage/redux/actions/admin/shared.js","storage/cookies/PreLaunchCookie.js","storage/redux/actions/prelaunch.js","containers/BenefitsTool/Landing/Landing.js","components/BenefitsTool/StepCounter/StepCounter.js","components/BenefitsTool/Question/Question.js","containers/BenefitsTool/Quiz/Quiz.js","components/BenefitsTool/AnswerList/ViewAnswer/ViewAnswer.js","components/BenefitsTool/AnswerList/EditAnswer/EditAnswer.js","components/BenefitsTool/AnswerList/AnswerList.js","containers/BenefitsTool/Confirmation/EditAnswers/EditAnswers.js","components/BenefitsTool/ContactInfo/ContactInfo.js","containers/BenefitsTool/Confirmation/Confirmation.js","components/UI/LinkList/LinkList.js","components/UI/ExpandedSection/ExpandedSection.js","components/BenefitsTool/Response/Response.js","logic/results/Screening.js","logic/results/Eligibility.js","logic/results/ProcessText.js","logic/results/Resources.js","logic/CollectResults.js","containers/BenefitsTool/Results/Results.js","components/BenefitsTool/Basic/Basic.js","containers/BenefitsTool/Disclaimer/Disclaimer.js","containers/BenefitsTool/PrivacyPolicy/PrivacyPolicy.js","utils/Pixels.js","containers/BenefitsTool/BenefitsTool.js","hoc/AdminPage/AdminPage.js","components/Admin/DeployMessage/DeployMessage.js","hoc/Aux/Aux.js","components/UI/Table/Table.js","containers/Admin/Advanced/List/List.js","components/UI/ProcessingButton/ProcessingButton.js","components/UI/RawTextBox/RawTextBox.js","components/Admin/FunctionBox/FunctionBox.js","containers/Admin/Advanced/Save/Save.js","containers/Admin/Advanced/Load/Load.js","containers/Admin/Advanced/Replace/Replace.js","components/Admin/CompareForm/CompareForm.js","components/UI/Accordion/Accordion.js","components/UI/Accordion/AccordionItem/AccordionItem.js","components/UI/JsonBlock/JsonBlock.js","components/Admin/DiffDeploys/RawData/RawData.js","utils/Markdown.js","components/Admin/TranslatedText/TranslatedText.js","utils/comparisons.js","components/Admin/DiffDeploys/BasicDiff/BasicDiff.js","components/UI/Tabs/Tabs.js","components/UI/Tabs/Tab/Tab.js","components/Admin/DiffDeploys/BenefitsDiff/BenefitsDiff.js","components/Admin/DiffDeploys/ResourcesDiff/ResourcesDiff.js","components/Admin/DiffDeploys/SimpleKeys/SimpleKeys.js","components/Admin/DiffDeploys/LangKey/LangKey.js","components/Admin/DiffDeploys/LangText/LangText.js","components/Admin/DiffDeploys/SimpleKeys/InnerTable/InnerTable.js","components/Admin/DiffDeploys/Question/Question.js","components/Admin/DiffDeploys/Benefit/Benefit.js","components/Admin/DiffDeploys/Condition/Condition.js","components/Admin/DiffDeploys/Scenario/Scenario.js","components/Admin/DiffDeploys/Resource/Resource.js","components/Admin/DiffDeploys/DiffDeploys.js","containers/Admin/Advanced/Compare/Compare.js","containers/Admin/Advanced/Advanced.js","components/UI/IconLink/IconLink.js","containers/Admin/Results/List/List.js","components/UI/SelectFilters/SelectFilters.js","components/Admin/CompareTable/CompareTable.js","containers/Admin/Results/Filter/Filter.js","components/Admin/Form/Form.js","components/Admin/Form/Element/Element.js","components/Admin/EditMarkdown/EditMarkdown.js","components/Admin/Forms/EditResult/EditResult.js","containers/Admin/Results/Edit/Edit.js","containers/Admin/Results/Results.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Admin/ConfirmDeleteResource/ConfirmDeleteResource.js","components/Admin/ActionButtons/ActionButtons.js","containers/Admin/Resources/List/List.js","components/Admin/Forms/EditResource/EditResource.js","containers/Admin/Resources/Edit/Edit.js","containers/Admin/Resources/Resources.js","components/UI/SearchFilters/SearchFilters.js","containers/Admin/Language/List/List.js","containers/Admin/Language/Edit/Edit.js","containers/Admin/Language/Language.js","components/Admin/DashboardBlock/DashboardBlock.js","components/Admin/Charts/Pie/Pie.js","utils/dashboard.js","containers/Admin/Dashboard/Dashboard.js","storage/redux/actions/admin/dashboard.js","containers/Admin/Responses/Responses.js","containers/Admin/Contacts/ListRaw/ListRaw.js","containers/Admin/Contacts/Contacts.js","hoc/AdminLayout/AdminLayout.js","components/LoginBox/LoginBox.js","containers/Login/Login.js","containers/Admin/Admin.js","containers/Main/Main.js","App.js","serviceWorker.js","storage/redux/reducers/tool.js","storage/redux/reducers/admin/auth.js","storage/redux/reducers/admin/dashboard.js","storage/redux/reducers/admin/deploys.js","storage/redux/reducers/admin/contacts.js","storage/redux/reducers/admin/language.js","storage/redux/reducers/admin/resources.js","storage/redux/reducers/admin/responses.js","storage/redux/reducers/admin/results.js","storage/redux/reducers/admin/shared.js","storage/redux/reducers/admin.js","storage/redux/reducers/prelaunch.js","index.js"],"names":["cm","Cookies","CookieBase","name","specs","compressed","filter","manager","CookieManager","this","val","get","cookieobj","expandData","cookiestring","contractData","set","remove","text","Buffer","toString","JSON","parse","e","console","log","stringify","layout","props","copyrightDate","Date","getFullYear","className","href","src","alt","lang","logo_alt_text","header_title","children","title","facebook_title","twitter_title","spinner","classes","color","push","join","visitorCookie","path","maxAge","sameSite","VERSION_RELEASED","DateTime","fromISO","zone","COOKIE_BLANK","id","save_date","prefs","ACCEPT_ALL","allow_cookies_thirdparty","REJECT_ALL","options","key","title_lang_key","desc_lang_key","input","found","error","visitor_data","VisitorCookie","new_id","uuidv4","clean","k","local","CookieNotice","useState","current","setCurrent","simpleView","setSimpleView","show","view","dangerouslySetInnerHTML","__html","message_simple","onClick","preventDefault","configure_link_text","saved","accept_button_text","reject_button_text","controls","settings","map","opt","control","value","aria-labelledby","onChange","newVals","swapToggle","checked","disabled","htmlFor","label","description","message_detailed","save_button_text","iconButton","icon","icon_type","add_class","clicked","append_text","message","type","tryagain_text","closed","tryagain","custom_button","buttons","button","attributes","cname","classNames","links","link","errorMessage","length","buttonLayout","intro","header","disclaimer_title","to","disclaimer_link","identifierCookie","axiosInstance","axios","create","baseURL","headers","info","toJSON","context","request_url","config","request_data","data","response","status","code","msg","request","visitor_id","on_success","on_error","token","IdentifierCookie","checkToken","then","catch","isAxiosError","parsed","parseAxiosError","Logger","err","api_error","bumpSessionInit","initSession","alert","returned","getAxios","post","which","version","uuid","LEVELS","logger_settings","level","cutoffLevel","cutoffLevelConsole","cutoffLevelApi","cutoffLevelDatabase","rollbar","getLevelRank","clevel","console_level","alevel","api_level","dlevel","database_level","Rollbar","accessToken","captureUncaught","captureUnhandledRejections","payload","environment","process","url","window","location","pathname","search","method","route","component","levelNum","indexOf","writeToConsole","writeToApi","store","writeToRollbar","Api","trackError","new_context","tracking_error","debug","warning","critical","languageCookie","TRANSLATIONS","en","English","TOKEN_OPTIONS","employee_type","Language","language_code","loaded","translations","allowed_languages","r","cookie_lang","LanguageCookie","includes","load","tokens","translation","get_raw","replace_tokens","Keys","markdown_allowed","markdown","match","init","doc","md","require","render","get_token_options","regexp","RegExp","replace","loginCookie","AUTH_TIMEOUT_SAFETY_WINDOW","seconds","adminLoginFailed","adminLoginSucceeded","username","adminLogout","auto","timed_logout","delayedAuthCheck","remaining","refresh_token","dispatch","getState","setTimeout","now","activity","admin","last_active","Interval","fromDateTimes","refreshAdminSession","checkAdminToken","new_exp","expires","isValid","LoginCookie","exp_date","minus","Duration","fromObject","invalid_code","invalidReason","invalid_msg","invalidExplanation","response_data","location_code","updateObject","base","change","updateAdminActivity","state","doUpdate","handleAdminApiError","action","lcode","authActions","Questions","question_order","Data","order","localized_data","english_data","qcode","letter","spec","answers","letters","answer","answerKey","validAnswer","step","loadLocalizedData","loadEnglishData","english_answers","toUpperCase","confirmation","aspec","selected","Object","keys","sort","question","help","getData","Local","LangObj","full_lang_key","lang_key","help_lang_key","ready","started","warn","q_code","answersCookie","filterAnswers","answerPush","newAnswers","tool","AnswersCookie","adminFetchContactsRawFailed","shuffle","given","result","slice","random","Math","floor","tmp","adminFetchDeploymentsFailed","adminFetchDeploymentFailed","adminFetchDeploymentSucceeded","adminOverloadDeploymentFailed","adminReplaceWithDeploymentFailed","adminSaveNewDeploymentFailed","adminCompareDeploymentsFailed","loadDeployments","auth","getAllDeploys","deploys","all","adminFetchDeploymentsSucceeded","adminFetchLangListFailed","adminFetchLangInfoFailed","adminSaveLangInfoFailed","adminFetchResourcesListFailed","adminDeleteResourceFailed","adminFetchResourceFailed","adminSaveResourceFailed","adminSaveResourceSucceeded","loadResourcesList","benefit","adminFetchResourcesListStarted","getResources","resources","adminFetchResourcesListSucceeded","adminResponsesFailed","adminFetchResultsListFailed","adminFetchScenarioFailed","adminSaveScenarioFailed","adminFetchBenefitFailed","adminFetchBenefitsListFailed","loadBenefitsList","getBenefits","benefits","adminFetchBenefitsListSucceeded","preLaunchCookie","prelaunchLoginFailed","prelaunchLoginSucceeded","delayedLogout","Landing","startQuiz","setState","bumpSession","goToQuiz","errorOrMoveOn","clearAnswers","history","setComponent","error_msg","Component","connect","withRouter","stepCounter","bullets","i","steps","currentStep","questionText","helpText","Quiz","clickAnswer","getCodeByStep","saveAnswer","goBack","newStep","currentUrlStep","goToStep","stepNum","count","cancelQuiz","restartQuiz","params","test","parseInt","isNaN","error_message","back_link_text","restart_link_text","cancel_link_text","stepCount","getLocalSpec","target","qspec","answerButtons","aKey","has_error","redirect","step_saved","newPath","initQuestion","answers_push_error","actions","viewAnswer","selectedAnswer","edit_title","clickedEdit","edit_alt","editAnswer","abuttons","btn","cancel_title","clickedCancel","cancel_alt","answerList","questions","answerBlock","isEditing","EditAnswer","ViewAnswer","EditAnswers","editingAnswer","getLocalConfirmation","saveEdit","cancelEdit","startEdit","contactInfo","invitation","onSubmit","email_label","emailError","email_error","email","emailChanged","autoComplete","zip_label","zipError","zip_error","zip","zipChanged","Confirmation","loading","saveError","contactValidOrEmpty","hasRecordingError","regexValidZip","changeEmail","newstate","EmailValidator","okToSubmitContact","changeZip","confirmAnswers","getEnglishAnswers","trim","contact","recordResponse","validOrEmpty","edit_answers","confirm_button","restart_link","recording_error","firstMissingStep","goto","linkList","elem","rel","class","ExpandedSection","expanded","setExpanded","readmore_link","expanded_block","read_more","more_classes","read_less","LinkList","resources_header","answerSections","section","resourceBlock","resources_intro","Screening","conditions","ConditionsData","firstPass","simple","splitTypeByEssential","splitBooksByTaxes","books","splitBooksByCompliance","splitLengthByYear","splitLengthByMonths","employedByYearAndHours","workForNYS","findReasonForFFCRA","rolling","findReasonForNYS","secondPass","eligibility","byBenefit","scenario","cond","pass","m","scenarios","newScenarios","Eligibility","ScenariosData","bdata","enabled","c","ProcessText","type_answer","type_replacement","typeAnswer","getAnswerLetters","toLowerCase","f","result_key","findTypeReplacement","Resources","ResourceData","other","CollectResults","BenefitsData","runFirstPass","screen","runSecondPass","setEmployeeType","sections","getAllSections","getOtherResources","benefitSections","getBenefitSections","getBooksSection","lang_key_result","lang_key_expanded","getBenefitResources","Results","clickCTAButton","open","scrollTo","results","compile","ctas","CtaData","cta","basic","body","back","back_title","back_link","Disclaimer","PrivacyPolicy","ALL_PIXELS","pref_setting","Pixels","pixel","fbq","BenefitsTool","onToolLoaded","cookie_notice","close_alt","VisitorPrefs","invoke","visitor_prefs","show_cookie_notice","saveCookiePrefs","visitorPrefsStored","save","fetchFromCookie","visitorId","toolCookiesLoaded","adminPage","advanced","breadcrumbs","deployMessage","deployTime","DeployData","date_deployed","toLocaleString","DATETIME_FULL","version_num","aux","Table","hiddenCols","hideCols","col_class","header_cells","cols","h","toggle_cols","body_rows","rows","cells","clickable","snip","full","short","substring","size","toggler","toggle_collapse_title","toggle_expand_title","AdminAdvancedList","refresh","fetchDeploys","item","formatted","DATETIME_SHORT","getDeployDownloadUrl","fname","download","compare","deployment_id","deploy_date","Aux","DeployMessage","list","processingButton","content","doWork","working","rawTextBox","rawtext","contents","emptytext","functionBox","emptyText","boxContents","explainer","buttonText","successBox","AdminAdvancedSave","deploy","saveDeploy","download_info","vnum","downloadLink","processing","deployAdmin","json","adminSaveNewDeploymentSucceeded","AdminAdvancedLoad","initDeploys","overloadDeploy","getId","fetchDeploy","fetch_loaded","functionTitle","deployment","functionExplainer","toFormat","fetch_error","fetch","overload","getDeploymentInfo","revertAdmin","adminOverloadDeploymentSucceeded","AdminAdvancedReplace","replaceDatabase","alldata","lang_en","LangEnData","lang_keys","LangKeysData","ResourcesData","replaceAdmin","adminReplaceWithDeploymentSucceeded","CompareForm","selectA","selectB","statement","titleA","titleB","presets","a","b","option","empty","valA","valB","changedA","changedB","submit","reset","Accordion","childIndex","el","startval","currentItem","setCurrentItem","idx","click","AccordionItem","jsonBlock","collapse","collapsed","root","style","addClasses","RawData","TranslatedText","showKey","setShowKey","english","elemEn","markup","Markdown","getMatchType","pkey","a_version","b_version","complexOrSimpleData","mydata","Array","isArray","dataKey","highlight","diff","getBenefitTitle","benefitsA","benefitsB","atitle","abbreviation","btitle","normalizeListDiff","rawDiff","dataA","dataB","listKey","order_match","order_diff","av","bv","marker","getTranslationWrapper","lang_text","wrap","getPairWrapper","pair","mt","matchType","missing","BasicDiff","openItem","setOpenItem","showRaw","setShowRaw","titles","lines","cmp","orderA","orderB","handleClasses","order_a","order_b","bodyClasses","handleA","handleB","bodyA","bodyB","interiorComponent","UiTabs","currentTab","setCurrentTab","uiTab","benefitsDiff","tabs","Tab","resourcesDiff","simpleKeys","pairs","addClass","display","LangKey","token_replace","LangText","innerTable","columns","tdata","keyname","hl","row","col","translate","translate_md","condition","entries","split","resource","desc","DiffDeploys","interior","Question","Benefit","BenefitsDiff","Condition","Scenario","ResourcesDiff","Resource","items","sec","comparison","AdminAdvancedCompare","selectedA","selectedB","refreshInit","refreshCompare","onChangeA","onChangeB","onReset","fetchList","getVersionA","getVersionB","avnum","bvnum","list_data","unshift","form","errmsg","list_error","adminCompareDeploymentsStarted","a_vnum","b_vnum","compareDeploys","adminCompareDeploymentsSucceeded","AdminAdvanced","Load","Replace","Save","Compare","List","iconLink","AdminResultsList","fetchBenefits","editCommonResources","editCommonLanguage","slink","rlink","shared","selectFilters","selects","select","changed","CompareTable","doChange","choice","layout_selector","AdminResultsFilter","filterResponses","getAttribute","selectedIndex","changeFilter","setLayout","newLayout","fetchResults","getBenefitCode","filters","condition_map","getEditLink","helpToElem","combined","en_result","en_expanded","enabled_row","short_row","long_row","edit_row","eligibleFlag","markdownToElem","crumbs","selectProps","key_name","table","filterScenarios","getCompareTable","getListTable","getScenarios","adminFetchResultsListSucceeded","condtion","adminForm","success","onCloseMsg","submitted","valid","button_text","adminElement","EditMarkdown","viewtype","setViewType","replacement","setReplacement","previewText","setPreviewText","wrapped","setWrapped","highlighted","setHighlighted","toggle","doHelp","replacementButtons","doValueChange","newtext","replace_token","replace_options","preview","hlclasses","regexp1","TOKEN_REGEX_TAG_OPEN","regexp2","previewBox","minrows","editBox","minRows","defaultValue","FormEditResult","fhooks","useForm","mode","errors","isEnabled","watch","prefill","handleSubmit","submitAction","defaultChecked","ref","register","rules","required","cprops","AdminResultsEdit","processing_error","fetchScenario","saveScenario","getCode","getScenario","adminFetchScenarioSucceeded","AdminResults","Edit","Filter","backdrop","modal","cancel","confirmDeleteResource","candidate","confirm","confirming","actionButtons","AdminResourcesList","resources_clickable","delete","requestDelete","resources_snip","newResource","fetchResources","cancelDelete","confirmDelete","deleteResource","closeDeleteMessage","dismissMessage","fetchBenefit","resources_rows","edit_link","en_text","en_desc","edit","resources_cols","deleted","confirming_delete","processing_delete","delete_candidate","current_benefit","adminFetchBenefitStarted","getBenefitInfo","adminFetchBenefitSucceeded","FormEditResource","benefit_id","link_en","benefit_options","AdminResourcesEdit","values","saveResource","loadAll","closeSavedMessage","closeMsg","fetchResource","isLoaded","reload_id","adminFetchResourceStarted","getResource","adminFetchResourceSucceeded","old","lang_key_text","lang_key_desc","form_id","NaN","AdminResources","searchFilters","searches","clearButton","clear_title","cleared","SKIP_SECTIONS","AdminLanguageList","editRow","setSectionFilter","newFilter","doSearch","clearSearch","getSection","s","filterBySection","filterRows","tablerow","sectitle","w","language","getAllLanguage","adminFetchLangListSucceeded","AdminLanguageEdit","fetchInfo","changeEnglish","holdText","submitEdit","saveText","getKey","helptext","helpbox","elem_class","language_info","adminFetchLangInfoStarted","getLanguageInfo","adminFetchLangInfoSucceeded","saveTranslation","AdminLanguage","dashboardBlock","more","pieChart","height","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","datum","borderWidth","borderColor","from","modifiers","enableRadialLabels","backgroundColor","statsToChartData","stats","cdata","scheme","schemeSet3","extraScheme","schemeGreys","schemeRandom","AdminDashboard","refreshResponses","fetchResponses","refreshContacts","fetchContacts","refreshStatsBooks","fetchStats","refreshStatsType","blocks","responses","contacts","bchart","tchart","dashboard","getRecentResponses","recent","date","adminDashResponsesSucceeded","adminDashResponsesFailed","getRecentContacts","zip_code","adminDashContactsSucceeded","adminDashContactsFailed","adminDashStatsStarted","getStats","adminDashStatsSucceeded","adminDashStatsFailed","AdminResponses","response_id","do_cols","getEnglishSpec","getResponsesDownloadUrl","filename","toISODate","getAllResponses","adminResponsesSucceeded","AdminContactsListRaw","getRawContactsDownloadUrl","listraw","getRawContacts","adminFetchContactsRawSucceeded","AdminContacts","ListRaw","AdminLayout","exact","loginBox","loginError","login_error","username_label","usernameChanged","password_label","password","passwordChanged","Login","changeUsername","changePassword","login_type","onPrelaunchLogin","onAdminLogin","prelaunch_status","admin_status","logged_in","prelaunch","checkPrelaunchLogin","PreLaunchCookie","checkAdminLogin","Admin","checkAuthState","authenticated","Advanced","Responses","Contacts","Dashboard","exp","Main","App","Boolean","hostname","initialState","visitor_id_loaded","cookies_fetch_error","answers_loaded","answers_update_error","setLoaded","toolCookiesLoadFailed","answersClear","questionInit","answersPushStarted","answersPushCompleted","answersPushFailed","answersUpdateStarted","answersUpdateCompleted","answersUpdateFailed","reducer","adminLoginCheckStarted","adminLoginStarted","adminDashResponsesStarted","adminDashContactsStarted","adminFetchDeploymentsStarted","adminFetchDeploymentStarted","adminOverloadDeploymentStarted","adminReplaceWithDeploymentStarted","adminSaveNewDeploymentStarted","adminCompareDeploymentsReset","adminFetchContactsRawStarted","adminFetchLangListStarted","adminSaveLangInfoStarted","adminSaveLangInfoSucceeded","adminRequestResourceDelete","adminCancelResourceDelete","adminDeleteResourceStarted","adminDeleteResourceSucceeded","adminDismissDeleteResourceMessage","adminSaveResourceStarted","adminSaveResourceMsgDismissed","adminResponsesStarted","adminFetchResultsListStarted","adminChangeResultsFilter","adminFetchScenarioStarted","adminSaveScenarioStarted","adminSaveScenarioSucceeded","adminFetchBenefitsListStarted","lastActive","prelaunchLoginStarted","prelaunchLogout","rootReducer","combineReducers","toolReducer","adminReducer","prelaunchReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8c5f900f.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\n\nconst cm = new Cookies();\n\nexport default cm;\n","import CookieManager from '../utils/CookieManager';\n\nclass CookieBase {\n\n    manager = CookieManager;\n    name = null;\n    specs = {};\n    compressed = false;\n    filter = null;\n\n    constructor(name, specs, compressed, filter) {\n        this.name = name;\n        this.specs = typeof(specs) === 'object' ? specs : {};\n        this.compressed = compressed ? true : false;\n        this.filter = typeof(filter) === 'function' ? filter : null;\n    }\n\n    get() {\n        let val = this.manager.get(this.name);\n        if (this.compressed) {\n            let cookieobj = this.expandData(val);\n            if (cookieobj === null) {\n                return {};\n            }\n            val = cookieobj;\n        }\n        if (this.filter) {\n            return this.filter(val);\n        }\n        return val;\n    }\n\n    set(val) {\n        if (this.filter) {\n            val = this.filter(val);\n        }\n        if (this.compressed) {\n            let cookiestring = this.contractData(val);\n            if (cookiestring) {\n                val = cookiestring;\n            }\n        }\n        return this.manager.set(this.name, val, this.specs);\n    }\n\n    remove() {\n        this.manager.remove(this.name);\n    }\n\n    expandData(cookiestring) {\n        let cookieobj = {};\n        try {\n            let buff = new Buffer(cookiestring, 'base64');\n            let text = buff.toString('utf8');\n            cookieobj = JSON.parse(text);\n        } catch (e) {\n            console.log('Cookie value was not valid json; starting over');\n            return null;\n        }\n        return cookieobj;\n    }\n\n    contractData(cookieobj) {\n        const text = JSON.stringify(cookieobj);\n        let buff = new Buffer(text);\n        return buff.toString('base64');\n    }\n\n};\n\nexport default CookieBase;\n\n","import React from 'react';\n\nimport './Layout.css';\n\nconst layout = (props) => {\n\n    const copyrightDate = (new Date()).getFullYear();\n    return (\n        <div className=\"BenefitsTool\">\n            <div className=\"Logo\">\n                <a href=\"https://domesticemployers.org/\"><img src=\"/images/logo.png\" alt={props.lang.logo_alt_text} /></a>\n            </div>\n            <div className=\"Header\">\n                <h1><a href=\"/\">{props.lang.header_title}</a></h1>\n            </div>\n            <div className=\"MainContent\">\n                {props.children}\n            </div>\n            <div className=\"Footer\">\n                <ul className=\"SocialIcons\">\n                    <li><a href=\"https://www.facebook.com/domesticemployers/\"><i className=\"fab fa-facebook-f\" title={props.lang.facebook_title}></i></a></li>\n                    <li><a href=\"https://twitter.com/HiHemployers\"><i className=\"fab fa-twitter\" title={props.lang.twitter_title}></i></a></li>\n                </ul>\n                <ul className=\"Links\">\n                    <li><a href=\"https://domesticemployers.org/\">&copy; {copyrightDate} Hand In Hand</a></li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default layout;\n","import React from 'react';\n\nimport './Spinner.css';\n\n// NB: We can't use language here because this is what we show when language data isn't loaded!\n\nconst spinner = (props) => {\n    let classes = [ 'Spinner' ];\n    if (props.color === 'gray-flipped') {\n        classes.push('GrayFlipped');\n    }\n    return (\n        <div className={classes.join(' ')}><span>Loading...</span></div>\n    );\n};\n\nexport default spinner;\n","import CookieBase from '../CookieBase';\n\nconst visitorCookie = new CookieBase(\n    'hnct-visitor', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 365,\n        sameSite: 'Strict'\n    }, // spec\n    true // compressed\n);\n\nexport default visitorCookie;\n","import { v4 as uuidv4 } from 'uuid';\nimport { DateTime } from 'luxon';\n\nimport VisitorCookie from '../storage/cookies/VisitorCookie';\n\nconst VERSION_RELEASED = DateTime.fromISO('2020-08-19 00:00:00', { zone: 'America/New_York' });\nconst COOKIE_BLANK = { id: null, save_date: null, prefs: null };\n\nconst ACCEPT_ALL = { allow_cookies_thirdparty: true };\nconst REJECT_ALL = { allow_cookies_thirdparty: false };\n\nclass VisitorPrefs {\n\n    options = [\n        {\n            key: 'allow_cookies_self',\n            title_lang_key: 'cookie_notice_option_self_title',\n            desc_lang_key: 'cookie_notice_option_self_description',\n            input: 'always'\n        },\n        {\n            key: 'allow_cookies_thirdparty',\n            title_lang_key: 'cookie_notice_option_thirdparty_title',\n            desc_lang_key: 'cookie_notice_option_thirdparty_desc',\n            input: 'toggle'\n        }\n    ];\n\n    fetchFromCookie() {\n        let found = {\n            id: null,\n            prefs: null,\n            error: null\n        };\n\n        let visitor_data = VisitorCookie.get();\n        if (!visitor_data) {\n            visitor_data = COOKIE_BLANK;\n        }\n        if (!visitor_data.id) {\n            let new_id = uuidv4();\n            if (new_id) {\n                visitor_data.id = new_id;\n            } else {\n                found.error = 'Could not create a visitor ID';\n                return found;\n            }\n        }\n        VisitorCookie.set(visitor_data);\n        found.id = visitor_data.id;\n        found.prefs = 'prefs' in visitor_data ? visitor_data.prefs : null;\n\n        // Check save date. If we've updated our visitor preference settings\n        // since then, they'll need to reverify.\n        const save_date = visitor_data.save_date ? DateTime.fromISO(visitor_data.save_date) : null;\n        if (save_date !== null) {\n            if (save_date < VERSION_RELEASED) {\n                found.prefs = null;\n                return found;\n            }\n        }\n\n        // If we have prefs, load and verify them\n        if (found.prefs !== null) {\n            let clean = REJECT_ALL;\n            if (found.prefs !== null && typeof found.prefs === 'object') {\n                for (var k in REJECT_ALL) {\n                    if (found.prefs[k]) {\n                        clean[k] = true;\n                    }\n                }\n            }\n            found.prefs = clean;\n        }\n\n        return found;\n    }\n\n    save(prefs) {\n\n        // Fetch cookie\n        let visitor_data = VisitorCookie.get() || COOKIE_BLANK;\n\n        // Clean prefs\n        let clean = null;\n        if (prefs !== null) {\n            clean = REJECT_ALL;\n            for (var k in REJECT_ALL) {\n                if (prefs[k]) {\n                    clean[k] = true;\n                }\n            }\n        }\n        visitor_data.prefs = clean;\n\n        // Mark save date\n        visitor_data.save_date = DateTime.local();;\n\n        // Store it\n        VisitorCookie.set(visitor_data);\n\n        return clean;\n    }\n\n}\n\nexport { ACCEPT_ALL, REJECT_ALL };\nexport default new VisitorPrefs();\n","import React, { useState } from 'react';\nimport Toggle from 'react-toggle';\nimport 'react-toggle/style.css';\n\nimport { ACCEPT_ALL, REJECT_ALL } from '../../../logic/VisitorPrefs';\n\nimport './CookieNotice.css';\n\nconst CookieNotice = (props) => {\n    const [current, setCurrent] = useState(props.prefs);\n    const [simpleView, setSimpleView] = useState(true);\n\n    if (!props.show) {\n        return null;\n    }\n\n    let view = null;\n\n    if (simpleView) {\n\n        const doConfigure = (e) => { e.preventDefault(); setCurrent(REJECT_ALL); setSimpleView(false); };\n        const doReject = () => { props.saved(REJECT_ALL); };\n        const doAccept = () => { props.saved(ACCEPT_ALL); };\n\n        view = (\n            <div className=\"NoticeContent\">\n                <div className=\"NoticeMessage\">\n                    <h6>{props.lang.title}</h6>\n                    <div dangerouslySetInnerHTML={{__html: props.lang.message_simple}}></div>\n                </div>\n                <div className=\"SimpleChoices\">\n                    <div className=\"Configure\">\n                        <a href=\"#detailView\" className=\"ConfigureLink\" onClick={doConfigure}>{props.lang.configure_link_text}</a>\n                    </div>\n                    <div className=\"NoticeButtons\">\n                        <button className=\"AcceptButton\" onClick={doAccept}>{props.lang.accept_button_text}</button>\n                        <button className=\"RejectButton\" onClick={doReject}>{props.lang.reject_button_text}</button>\n                    </div>\n                </div>\n            </div>\n        );\n\n    } else {\n\n        const doSave = () => { props.saved(current); };\n        const swapToggle = (key) => {\n            let newVals = { ...current };\n            newVals[key] = !newVals[key];\n            setCurrent(newVals);\n        };\n\n        const controls = props.settings.map(opt => {\n            let control = null;\n            if (opt.input === 'toggle') {\n                control = <Toggle\n                    name={opt.key}\n                    value=\"1\"\n                    id={opt.key}\n                    aria-labelledby={opt.key + '_label'}\n                    onChange={() => swapToggle(opt.key) }\n                    checked={current ? current[opt.key] : false} />;\n            } else if (opt.input === 'always') {\n                control = <Toggle\n                    name={opt.key}\n                    value=\"1\"\n                    id={opt.key}\n                    aria-labelledby={opt.key + '_label'}\n                    checked disabled />;\n            }\n            return (\n                <div className=\"CookieSetting\" key={opt.key}>\n                    <label htmlFor={opt.key} id={opt.key + '_label'}>{opt.label}</label>\n                    <div className=\"OptDescription\" dangerouslySetInnerHTML={{__html: opt.description}}></div>\n                    <div className=\"OptControl\">{control}</div>\n                </div>\n            );\n        });\n\n        view = (\n            <div className=\"NoticeContent\">\n                <div className=\"NoticeMessage\">\n                    <h6>{props.lang.title}</h6>\n                    <div dangerouslySetInnerHTML={{__html: props.lang.message_detailed}}></div>\n                </div>\n                <div className=\"NoticeControls\">\n                    {controls}\n                </div>\n                <div className=\"NoticeButtons\">\n                    <button className=\"SaveButton\" onClick={doSave}>{props.lang.save_button_text}</button>\n                </div>\n            </div>\n        );\n\n    }\n\n    const doClose = () => {\n        if (simpleView) {\n            props.saved(ACCEPT_ALL);\n        } else {\n            props.saved(current);\n        }\n    };\n\n    return (\n        <div className=\"CookieNotice\">\n            <button className=\"CloseNotice\" onClick={doClose}><i className=\"fas fa-times\" title=\"{props.lang.close_alt}\"></i></button>\n            {view}\n        </div>\n    );\n};\n\nexport default CookieNotice;\n","import React from 'react';\n\nimport './IconButton.css';\n\nconst iconButton = (props) => {\n    let classes = [ 'IconButton' ];\n    let title = null;\n    let icon = 'fas fa-question';\n    if (props.icon_type === 'refresh') {\n        title = 'refresh';\n        icon = 'fas fa-sync-alt';\n    } else if (props.icon_type === 'edit') {\n        title = 'edit';\n        icon = 'fas fa-pencil-alt';\n    } else if (props.icon_type === 'preview') {\n        title = 'preview';\n        icon = 'far fa-eye';\n    } else if (props.icon_type === 'new') {\n        title = 'new';\n        icon = 'fas fa-plus-circle';\n    } else if (props.icon_type === 'close') {\n        title = 'close';\n        icon = 'fas fa-times';\n    }\n    if (props.title) {\n        title = props.title;\n    }\n    if (props.icon) {\n        icon = props.icon;\n    }\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n    return (\n        <button className={classes.join(' ')} onClick={props.clicked}>\n            <i className={icon} title={title}></i>\n            {props.append_text ?\n                <span>{props.append_text}</span>\n            : null}\n        </button>\n    );\n};\n\nexport default iconButton;\n","import React from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './Message.css';\n\nconst message = (props) => {\n    let classes = [ 'Message' ];\n    if (props.type === 'error') {\n        classes.push('ErrorMessage');\n    } else if (props.type === 'success') {\n        classes.push('SuccessMessage');\n    }\n    let tryagain_text = props.tryagain_text ? props.tryagain_text : 'Try Again?';\n    return (\n        <div className={classes.join(' ')}>\n            {props.closed ?\n                <div className=\"CloseButton\">\n                    <IconButton icon_type=\"close\"\n                        clicked={props.closed} />\n                </div>\n            : null}\n            <p>{props.text}</p>\n            {props.tryagain ?\n                <IconButton icon_type=\"refresh\"\n                    clicked={props.tryagain}\n                    title={tryagain_text} />\n            : null}\n            {props.custom_button}\n        </div>\n    );\n\n};\n\nexport default message;\n\n","import React from 'react';\n\nimport Message from '../Message/Message';\n\nimport './Controls.css';\n\nconst controls = (props) => {\n\n    let buttons = {};\n    if (typeof props.buttons !== 'undefined') {\n        buttons = props.buttons\n            .map((button) => {\n                let attributes = {\n                    key: button.key ? button.key : button.text,\n                };\n                let cname = 'ControlButton';\n                if (button.classNames) {\n                    cname += ' ' + button.classNames.join(' ');\n                }\n                if (button.disabled) {\n                    attributes.disabled = true;\n                    cname += ' DisabledButton';\n                }\n                if (typeof button.clicked === 'function') {\n                    attributes.onClick = button.clicked;\n                }\n                attributes.className = cname;\n                return <button {...attributes}>{button.text}</button>;\n            });\n    }\n\n    let links = {};\n    if (typeof props.links !== 'undefined') {\n        links = props.links\n            .map((link) => {\n                let cname = 'ControlLink';\n                if (link.classNames) {\n                    cname += ' ' + link.classNames.join(' ');\n                }\n                return <div key={link.key ? link.key : link.text} className={cname} onClick={link.clicked}>{link.text}</div>;\n            });\n    }\n\n    return (\n        <div className=\"Controls\">\n        {props.errorMessage ?\n            <Message type=\"error\" text={props.errorMessage} />\n        : null}\n        {buttons.length > 0 ?\n            <div className={props.buttonLayout === 'vert' ? 'VertButtonContainer' : 'ButtonContainer'}>\n                {buttons}\n            </div>\n        : null}\n        {links.length > 0 ?\n            <div className=\"LinkContainer\">\n                {links}\n            </div>\n        : null}\n        </div>\n    );\n\n};\n\nexport default controls;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Controls from '../../UI/Controls/Controls';\n\nimport './Intro.css';\n\nconst intro = (props) => {\n\n    const buttons = [\n        {\n            classNames: [ 'StartButton' ],\n            clicked: props.clicked,\n            text: 'Start'\n        }\n    ];\n\n    return (\n        <div>\n            <h2>{props.lang.header}</h2>\n\n            <div className=\"IntroMessage\" dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n\n            <div className=\"DisclaimerLink\" title={props.lang.disclaimer_title}>\n                <Link to=\"/disclaimer\">{props.lang.disclaimer_link}</Link>\n            </div>\n\n            <Controls buttons={buttons} errorMessage={props.error} />\n        </div>\n    );\n};\n\nexport default intro;\n","import CookieBase from '../CookieBase';\n\nconst identifierCookie = new CookieBase(\n    'hnct-sessionid', // name\n    {\n        path: '/',\n        maxAge: 60 * 10,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default identifierCookie;\n","import axios from 'axios';\n\nimport IdentifierCookie from './cookies/IdentifierCookie';\nimport Logger from '../utils/Logger';\n\nconst BASE_BACKEND = process.env.NODE_ENV === 'production' ? '' : 'http://localhost2:3001';\nconst BASE_URL = BASE_BACKEND + '/api/v1.0';\n\nclass Api {\n\n    // This will be created when it's needed\n    axiosInstance = null;\n\n    getAxios() {\n        if (this.axiosInstance === null) {\n            this.axiosInstance = axios.create({\n                baseURL: BASE_URL,\n                headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\",\n                }\n            });\n        }\n        return this.axiosInstance;\n    }\n\n    parseAxiosError(error) {\n        const info = error.toJSON();\n        let context = {\n            message: info.message,\n            request_url: info.config.baseURL,\n            request_data: info.config.data\n        };\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            context.status = error.response.status;\n            return {\n                code: error.response.data.code,\n                message: error.response.data.msg,\n                context: context\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            return {\n                code: 'NETWORK_FAILURE',\n                message: context.message,\n                context: context\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            return {\n                code: 'UNKNOWN',\n                message: error.message,\n                context: context\n            };\n        }\n    }\n\n    // Front end\n\n    bumpSession(visitor_id, on_success, on_error) {\n        let token = IdentifierCookie.get();\n        if (token) {\n            this.checkToken({ visitor_id: visitor_id, token: token })\n                .then(response => {\n                    IdentifierCookie.set(token); // re-up on the expiration\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = this.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.err('Session check failed', { api_error: parsed });\n                        if (typeof on_error === 'function') {\n                            on_error();\n                        }\n                    }\n                    this.bumpSessionInit(visitor_id, on_success, on_error);\n                });\n        } else {\n            this.bumpSessionInit(visitor_id, on_success, on_error);\n        }\n    }\n\n    bumpSessionInit(visitor_id, on_success, on_error) {\n        this.initSession({ visitor_id: visitor_id })\n            .then(response => {\n                if (response.data.token) {\n                    IdentifierCookie.set(response.data.token);\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                } else {\n                    Logger.alert('Session init succeeded without returning a token', { returned: response.data });\n                    if (typeof on_error === 'function') {\n                        on_error();\n                    }\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = this.parseAxiosError(error);\n                Logger.err('Session init failed', { api_error: parsed });\n                if (typeof on_error === 'function') {\n                    on_error();\n                }\n            });\n    }\n\n    initSession(data) {\n        return this.getAxios().post('/session/init', data);\n    }\n\n    checkToken(data) {\n        return this.getAxios().post('/session/check', data);\n    }\n\n    recordResponse(data) {\n        return this.getAxios().post('/response', data);\n    }\n\n    trackError(data) {\n        return this.getAxios().post('/error', data);\n    }\n\n    // Admin\n\n    checkAdminLogin(data) {\n        return this.getAxios().post('/admin/session/login', data);\n    }\n\n    checkAdminToken(data) {\n        return this.getAxios().post('/admin/session/check', data);\n    }\n\n    adminLogout(data) {\n        return this.getAxios().post('/admin/session/logout', data);\n    }\n\n    getRecentResponses(data) {\n        return this.getAxios().post('/admin/responses/recent', data);\n    }\n\n    getRecentContacts(data) {\n        return this.getAxios().post('/admin/contacts/recent', data);\n    }\n\n    getStats(key, data) {\n        return this.getAxios().post('/admin/responses/stats/' + key, data);\n    }\n\n    getAllResponses(data) {\n        return this.getAxios().post('/admin/responses/all', data);\n    }\n\n    getRawContacts(data) {\n        return this.getAxios().post('/admin/contacts/raw', data);\n    }\n\n    getAllLanguage(data) {\n        return this.getAxios().post('/admin/language', data);\n    }\n\n    getLanguageForSection(data) {\n        return this.getAxios().post('/admin/language/section', data);\n    }\n\n    getLanguageInfo(data) {\n        return this.getAxios().post('/admin/language/info', data);\n    }\n\n    saveTranslation(data) {\n        return this.getAxios().post('/admin/language/save', data);\n    }\n\n    getBenefits(data) {\n        return this.getAxios().post('/admin/benefits', data);\n    }\n\n    getBenefitInfo(code, data) {\n        return this.getAxios().post('/admin/benefits/' + code, data);\n    }\n\n    getScenarios(code, data) {\n        return this.getAxios().post('/admin/benefits/' + code + '/scenarios', data);\n    }\n\n    getScenario(code, id, data) {\n        return this.getAxios().post('/admin/benefits/' + code + '/scenario/' + id, data);\n    }\n\n    saveScenario(code, id, data) {\n        return this.getAxios().post('/admin/benefits/' + code + '/scenario/' + id + '/save', data);\n    }\n\n    getResources(data, which) {\n        if (which) {\n            return this.getAxios().post('/admin/resources/' + which, data);\n        } else {\n            return this.getAxios().post('/admin/resources', data);\n        }\n    }\n\n    getResource(id, data) {\n        return this.getAxios().post('/admin/resources/info/' + id, data);\n    }\n\n    saveResource(data) {\n        return this.getAxios().post('/admin/resources/save', data);\n    }\n\n    deleteResource(data) {\n        return this.getAxios().post('/admin/resources/delete', data);\n    }\n\n    getAllDeploys(data) {\n        return this.getAxios().post('/admin/deploy', data);\n    }\n\n    getDeploymentInfo(data) {\n        return this.getAxios().post('/admin/deploy/info', data);\n    }\n\n    revertAdmin(data) {\n        return this.getAxios().post('/admin/deploy/revert', data);\n    }\n\n    replaceAdmin(data) {\n        return this.getAxios().post('/admin/deploy/replace', data);\n    }\n\n    deployAdmin(data) {\n        return this.getAxios().post('/admin/deploy/save', data);\n    }\n\n    compareDeploys(data) {\n        return this.getAxios().post('/admin/deploy/compare', data);\n    }\n\n    getDeployDownloadUrl(version, uuid, token) {\n        return BASE_BACKEND + '/download/deploy/' + version + '/' + uuid + '/' + token;\n    }\n\n    getResponsesDownloadUrl(token) {\n        return BASE_BACKEND + '/download/responses/all/' + token;\n    }\n\n    getRawContactsDownloadUrl(token) {\n        return BASE_BACKEND + '/download/contacts/raw/' + token;\n    }\n\n    // Prelaunch\n\n    checkPrelaunchLogin(data) {\n        return this.getAxios().post('/prelaunch/login', data);\n    }\n\n    checkPrelaunchToken(data) {\n        return this.getAxios().post('/prelaunch/check', data);\n    }\n}\n\nexport default new Api();\n","import Rollbar from 'rollbar';\n\nimport Api from '../storage/Api';\n\nconst LEVELS = [\n    'EMERG',   // Emergency: system is unusable\n    'ALERT',   // Alert: action must be taken immediately\n    'CRIT',    // Critical: critical conditions\n    'ERR',     // Error: error conditions\n    'WARN',    // Warning: warning conditions\n    'NOTICE',  // Notice: normal but significant condition\n    'INFO',    // Informational: informational messages\n    'DEBUG'    // Debug: debug messages\n];\n\nclass Logger {\n\n    cutoffLevel = 0;\n    cutoffLevelConsole = 0;\n    cutoffLevelApi = 0;\n    cutoffLevelDatabase = 0;\n    rollbar = null;\n    request = {};\n\n    constructor(level, options) {\n        this.cutoffLevel = this.getLevelRank(level ? level : 'WARN');\n        let clevel = 'DEBUG';\n        if (options && 'console_level' in options) {\n            clevel = options.console_level;\n        }\n        this.cutoffLevelConsole = this.getLevelRank(clevel);\n        let alevel = 'ERR';\n        if (options && 'api_level' in options) {\n            alevel = options.api_level;\n        }\n        this.cutoffLevelApi = this.getLevelRank(alevel);\n        let dlevel = 'ALERT';\n        if (options && 'database_level' in options) {\n            dlevel = options.database_level;\n        }\n        this.cutoffLevelDatabase = this.getLevelRank(dlevel);\n        this.rollbar = new Rollbar({\n            accessToken: '3c1d54fceb0e496d9170a7100d56a69f',\n            captureUncaught: true,\n            captureUnhandledRejections: true,\n            payload: {\n                environment: process.env.NODE_ENV\n            }\n        });\n        this.request = {\n            url: window.location.pathname + window.location.search,\n            method: 'GET',\n            route: {\n                path: 'No Component Loaded'\n            }\n        };\n    }\n\n    setComponent(component) {\n        this.request.route.path = component;\n    }\n\n    getLevelRank(level) {\n        const levelNum = LEVELS.indexOf(level);\n        if (levelNum < 0) {\n            this.writeToConsole('WARN', 'Log level ' + level + ' unknown');\n        }\n        return levelNum;\n    }\n\n    emerg(message, context) { this.log('EMERG', message, context); }\n    alert(message, context) { this.log('ALERT', message, context); }\n    crit(message, context) { this.log('CRIT', message, context); }\n    err(message, context) { this.log('ERR', message, context); }\n    warn(message, context) { this.log('WARN', message, context); }\n    notice(message, context) { this.log('NOTICE', message, context); }\n    info(message, context) { this.log('INFO', message, context); }\n    debug(message, context) { this.log('DEBUG', message, context); }\n\n    log(level, message, context) {\n        console.log('Logging!', this.request);\n        if (this.getLevelRank(level) > this.cutoffLevel) {\n            return;\n        }\n        this.writeToConsole(level, message, context);\n        this.writeToApi(level, message, context);\n    }\n\n    writeToConsole(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelConsole) {\n            return;\n        }\n        const msg = '[' + level + '] ' + message;\n        if (context) {\n            console.log(msg, context);\n        } else {\n            console.log(msg);\n        }\n    }\n\n    writeToApi(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelApi) {\n            return;\n        }\n        const data = {\n            level: level,\n            message: message,\n            context: context\n        };\n        if (this.getLevelRank(level) <= this.cutoffLevelDatabase) {\n            data.store = true;\n        }\n        this.writeToRollbar(level, message, context); // TODO: Remove once we're confident local tracking is okay\n        Api.trackError(data)\n            .then(response => {\n                // All is well; ignore\n            })\n            .catch(error => {\n                // We can't handle this on our system; fallback to Rollbar\n                console.log('track error failed', error);\n                const new_context = { ...context, tracking_error: error };\n                this.writeToRollbar(level, message, new_context);\n            });\n    }\n\n    writeToRollbar(level, message, context) {\n        // debug: DEBUG\n        if (this.getLevelRank(level) > this.getLevelRank('NOTICE')) {\n            this.rollbar.debug(message, this.request, context);\n        // info: INFO, NOTICE\n        } else if (this.getLevelRank(level) > this.getLevelRank('WARN')) {\n            this.rollbar.info(message, this.request, context);\n        // warning: WARN\n        } else if (this.getLevelRank(level) > this.getLevelRank('ERR')) {\n            this.rollbar.warning(message, this.request, context);\n        // error: ERR\n        } else if (this.getLevelRank(level) > this.getLevelRank('CRIT')) {\n            this.rollbar.error(message, this.request, context);\n        // critical: CRIT, ALERT, EMERG\n        } else {\n            this.rollbar.critical(message, this.request, context);\n        }\n    }\n\n}\n\nlet logger_settings = {};\nif (process.env.NODE_ENV === 'production') {\n    logger_settings = {\n        level: 'NOTICE',\n        options: {\n            console_level: 'NOTICE',\n            api_level: 'NOTICE',\n            database_level: 'ALERT'\n        }\n    };\n} else {\n    logger_settings = {\n        level: 'DEBUG',\n        options: {\n            console_level: 'DEBUG',\n            api_level: 'ERR',\n            database_level: 'ERR'\n        }\n    };\n}\n\nexport default new Logger(logger_settings.level, logger_settings.options);\n","import CookieBase from '../CookieBase';\n\nconst languageCookie = new CookieBase(\n    'hnct-language', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default languageCookie;\n","import Logger from './Logger';\nimport LanguageCookie from '../storage/cookies/LanguageCookie';\n\nimport Keys from '../data/lang_keys.json';\n\nimport English from '../data/lang_en.json';\n\nconst TRANSLATIONS = {\n    en: English\n};\n\nconst TOKEN_OPTIONS = {\n    employee_type: [ 'nanny', 'house cleaner', 'home attendant', 'home health care worker' ],\n};\n\nconst TOKEN_REGEX_TAG_OPEN = '\\\\{\\\\{';\nconst TOKEN_REGEX_TAG_CLOSE = '\\\\}\\\\}';\n\nclass Language {\n\n    language_code = null;\n    loaded = false;\n    translations = null;\n    allowed_languages = [ 'en' ];\n\n    load(code) {\n        let r = null;\n        if (code in TRANSLATIONS) {\n            r = TRANSLATIONS[code];\n        } else {\n            Logger.alert('No such language', { lang: code });\n            return false;\n        }\n        this.translations = r;\n        this.language_code = code;\n        this.loaded = true;\n    }\n\n    init() {\n        let cookie_lang = LanguageCookie.get();\n        if (cookie_lang && this.allowed_languages.includes(cookie_lang)) {\n            this.load(cookie_lang);\n        } else {\n            this.load('en');\n        }\n    }\n\n    get(key, tokens) {\n        let translation = this.get_raw(key);\n        if (translation === null) {\n            return key;\n        }\n        if (tokens) {\n            translation = this.replace_tokens(translation, tokens);\n        }\n        if (key in Keys) {\n            if (Keys[key].markdown_allowed) {\n                translation = this.markdown(translation);\n                if (!translation.match(/^</)) {\n                    translation = '<p>' + translation + '</p>';\n                }\n            }\n        }\n        return translation;\n    }\n\n    get_raw(key) {\n        if (!this.loaded) {\n            this.init();\n            if (!this.loaded) {\n                Logger.alert('Translation was requested, but the current language could not be loaded ', { key: key });\n                return null;\n            }\n        }\n        if (key in this.translations) {\n            return this.translations[key];\n        } else {\n            if (key in Keys) {\n                Logger.alert('Missing translation', { lang: this.language_code, key: key, doc: Keys[key] });\n            } else {\n                Logger.alert('Translation requested for undocumented key', { key: key });\n            }\n        }\n        return null;\n    }\n\n    markdown(translation) {\n        if (!this.md) {\n            this.md = require('markdown-it')();\n        }\n        return this.md.render(translation);\n    }\n\n    replace_tokens(translation, tokens) {\n        for (const token in tokens) {\n            if (this.get_token_options(token).includes(tokens[token])) {\n                const regexp = new RegExp(TOKEN_REGEX_TAG_OPEN +\n                    token + TOKEN_REGEX_TAG_CLOSE, 'g');\n                translation = translation.replace(regexp, tokens[token]);\n            }\n        }\n        return translation;\n    }\n\n    get_token_options(token) {\n        if (token in TOKEN_OPTIONS) {\n            return TOKEN_OPTIONS[token];\n        }\n        return [];\n    }\n\n}\n\nexport { Language, TOKEN_REGEX_TAG_OPEN, TOKEN_REGEX_TAG_CLOSE };\nexport default new Language('en');\n","import CookieBase from '../CookieBase';\n\nconst loginCookie = new CookieBase(\n    'hnct-login', // name\n    {\n        path: '/',\n        maxAge: 7 * 24 * 60 * 60, // keep for a week\n        sameSite: 'Strict'\n    }, // spec\n    true // compressed\n);\n\nexport default loginCookie;\n","import { DateTime, Interval, Duration } from 'luxon';\n\nimport * as actionTypes from '../actionTypes';\nimport LoginCookie from '../../../cookies/LoginCookie';\nimport Api from '../../../Api';\nimport Logger from '../../../../utils/Logger';\n\nconst AUTH_STANDARD_USERNAME = 'admin';\nconst AUTH_REFRESH_ACTIVITY_WINDOW_MINUTES = 5;\nconst AUTH_TIMEOUT_SAFETY_WINDOW = { seconds: 10 };\n\n// Synchronous action creators\n\nexport const adminLoginCheckStarted = () => {\n    return {\n        type: actionTypes.ADMIN_LOGIN_CHECK_STARTED\n    };\n};\n\nexport const adminLoginStarted = () => {\n    return {\n        type: actionTypes.ADMIN_LOGIN_STARTED\n    };\n};\n\nexport const adminLoginFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_LOGIN_FAILED,\n        error: error\n    };\n};\n\nexport const adminLoginSucceeded = (username, token) => {\n    return {\n        type: actionTypes.ADMIN_LOGIN_SUCCEEDED,\n        username: username,\n        token: token\n    };\n};\n\nexport const adminLogout = (auto) => {\n    return {\n        type: actionTypes.ADMIN_LOGOUT,\n        timed_logout: auto\n    };\n};\n\n// Asynchronous action creators\n\nexport const checkAdminAuthState = () => {\n    return (dispatch, getState) => {\n        dispatch(adminLoginCheckStarted());\n\n        let auth = LoginCookie.get();\n\n        // No cookie? We're logged out\n        if (!auth) {\n            dispatch(adminLogout(false));\n            return;\n        }\n\n        // Not expired? We're logged in\n        const exp = auth.exp_date ? DateTime.fromISO(auth.exp_date) : null;\n        const now = DateTime.local();\n        if (exp !== null && exp > now) {\n            dispatch(adminLoginSucceeded(auth.username, auth.token));\n            const remaining = Interval.fromDateTimes(now, exp);\n            dispatch(delayedAuthCheck(remaining.length('milliseconds'), auth.refresh_token));\n            return;\n        }\n\n        // Has the user been active in the last five minutes? If so, try a refresh\n        const activity = getState().admin.last_active;\n        const i = Interval.fromDateTimes(activity, now);\n        if (i.length('minutes') <= AUTH_REFRESH_ACTIVITY_WINDOW_MINUTES) {\n            dispatch(refreshAdminSession(auth.refresh_token));\n            return;\n        }\n\n        // Otherwise, timed-logout\n        dispatch(adminLogout(true));\n    };\n};\n\nexport const delayedAuthCheck = (remaining, refresh_token) => {\n    return (dispatch, getState) => {\n        setTimeout(() => {\n            // Has the user been active in the last five minutes? If so, try a refresh\n            const now = DateTime.local();\n            const activity = getState().admin.last_active;\n            const i = Interval.fromDateTimes(activity, now);\n            if (i.length('minutes') <= AUTH_REFRESH_ACTIVITY_WINDOW_MINUTES) {\n                dispatch(refreshAdminSession(refresh_token));\n                return;\n            }\n            // Otherwise, timed-logout\n            dispatch(adminLogout(true));\n        }, remaining);\n    };\n};\n\nexport const refreshAdminSession = (refresh_token) => {\n    return (dispatch) => {\n        Api.checkAdminToken({ token: refresh_token })\n            .then(response => {\n                const new_exp = DateTime.fromISO(response.data.expires);\n                if (new_exp.isValid) {\n                    LoginCookie.set({\n                        username: AUTH_STANDARD_USERNAME,\n                        token: refresh_token,\n                        refresh_token: refresh_token,\n                        exp_date: new_exp.minus(Duration.fromObject(AUTH_TIMEOUT_SAFETY_WINDOW))\n                    });\n                    dispatch(adminLoginSucceeded(AUTH_STANDARD_USERNAME, refresh_token));\n                } else {\n                    Logger.alert('Admin auth check is not returning a valid expiration date', {\n                        invalid_code: new_exp.invalidReason,\n                        invalid_msg: new_exp.invalidExplanation,\n                        response_data: response.data\n                    });\n                    dispatch(adminLogout(true));\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    const lcode = '48D1';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Admin session check failed', { api_error: parsed });\n                    }\n                }\n                dispatch(adminLogout(true));\n            });\n    };\n};\n\nexport const authenticateAdmin = (username, password) => {\n    return dispatch => {\n        dispatch(adminLoginStarted());\n        const data = { username: username, password: password };\n        Api.checkAdminLogin(data)\n            .then(response => {\n                const new_exp = DateTime.fromISO(response.data.expires);\n                if (response.data.token && new_exp.isValid) {\n                    LoginCookie.set({\n                        username: AUTH_STANDARD_USERNAME,\n                        token: response.data.token,\n                        refresh_token: response.data.token,\n                        exp_date: new_exp.minus(Duration.fromObject(AUTH_TIMEOUT_SAFETY_WINDOW))\n                    });\n                    dispatch(adminLoginSucceeded(AUTH_STANDARD_USERNAME, response.data.token));\n                } else if (!new_exp.isValid) {\n                    Logger.alert('Admin login is not returning a valid expiration date', {\n                        invalid_code: new_exp.invalidReason,\n                        invalid_msg: new_exp.invalidExplanation,\n                        response_data: response.data\n                    });\n                    dispatch(adminLoginFailed('Admin login is not returning a valid expiration date'));\n                } else {\n                    Logger.alert('Admin login succeeded without returning a token', { returned: response.data });\n                    dispatch(adminLoginFailed('Admin login is not returning a token'));\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    const lcode = '2B25';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'LOGIN_INCORRECT' &&\n                        parsed.code !== 'USERNAME_REQUIRED' &&\n                        parsed.code !== 'PASSWORD_REQUIRED') {\n                        Logger.alert('Admin login failed', { api_error: parsed });\n                    }\n                }\n                dispatch(adminLoginFailed('Admin login failed'));\n            });\n    };\n};\n\nexport const manualAdminLogout = () => {\n    return (dispatch, getState) => {\n        Api.adminLogout({ token: getState().admin.auth.token })\n            .then(response => {\n                dispatch(adminLogout(false));\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    const lcode = '860D';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    const parsed = Api.parseAxiosError(error);\n                    Logger.alert('Admin logout failed', { api_error: parsed });\n                }\n                dispatch(adminLogout(false));\n            })\n    };\n};\n\n","\n// Benefits Tool\nexport const TOOL_COOKIES_LOADED = 'TOOL_COOKIES_LOADED';\nexport const TOOL_COOKIES_LOAD_FAILED = 'TOOL_COOKIES_LOAD_FAILED';\nexport const ANSWERS_CLEAR = 'ANSWERS_CLEAR';\nexport const QUESTION_INIT = 'QUESTION_INIT';\nexport const ANSWERS_UPDATE_STARTED = 'ANSWERS_UPDATE_STARTED';\nexport const ANSWERS_UPDATE_COMPLETED = 'ANSWERS_UPDATE_COMPLETED';\nexport const ANSWERS_UPDATE_FAILED = 'ANSWERS_UPDATE_FAILED';\nexport const ANSWERS_PUSH_STARTED = 'ANSWERS_PUSH_STARTED';\nexport const ANSWERS_PUSH_COMPLETED = 'ANSWERS_PUSH_COMPLETED';\nexport const ANSWERS_PUSH_FAILED = 'ANSWERS_PUSH_FAILED';\nexport const VISITOR_PREFS_STORED = 'VISITOR_PREFS_STORED';\n\n// Prelaunch Login\nexport const PRELAUNCH_LOGIN_CHECK_STARTED = 'PRELAUNCH_LOGIN_CHECK_STARTED';\nexport const PRELAUNCH_LOGIN_STARTED = 'PRELAUNCH_LOGIN_STARTED';\nexport const PRELAUNCH_LOGIN_FAILED = 'PRELAUNCH_LOGIN_FAILED';\nexport const PRELAUNCH_LOGIN_SUCCEEDED = 'PRELAUNCH_LOGIN_SUCCEEDED';\nexport const PRELAUNCH_LOGOUT = 'PRELAUNCH_LOGOUT';\n\n// Admin: Auth\nexport const ADMIN_LOGIN_CHECK_STARTED = 'ADMIN_LOGIN_CHECK_STARTED';\nexport const ADMIN_LOGIN_STARTED = 'ADMIN_LOGIN_STARTED';\nexport const ADMIN_LOGIN_FAILED = 'ADMIN_LOGIN_FAILED';\nexport const ADMIN_LOGIN_SUCCEEDED = 'ADMIN_LOGIN_SUCCEEDED';\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT';\n\n// Admin: Contacts\nexport const ADMIN_FETCH_CONTACTS_RAW_STARTED = 'ADMIN_FETCH_CONTACTS_RAW_STARTED';\nexport const ADMIN_FETCH_CONTACTS_RAW_FAILED = 'ADMIN_FETCH_CONTACTS_RAW_FAILED';\nexport const ADMIN_FETCH_CONTACTS_RAW_SUCCEEDED = 'ADMIN_FETCH_CONTACTS_RAW_SUCCEEDED';\n\n// Admin: Dashboard\nexport const ADMIN_DASH_RESPONSES_STARTED = 'ADMIN_DASH_RESPONSES_STARTED';\nexport const ADMIN_DASH_RESPONSES_FAILED = 'ADMIN_DASH_RESPONSES_FAILED';\nexport const ADMIN_DASH_RESPONSES_SUCCEEDED = 'ADMIN_DASH_RESPONSES_SUCCEEDED';\nexport const ADMIN_DASH_CONTACTS_STARTED = 'ADMIN_DASH_CONTACTS_STARTED';\nexport const ADMIN_DASH_CONTACTS_FAILED = 'ADMIN_DASH_CONTACTS_FAILED';\nexport const ADMIN_DASH_CONTACTS_SUCCEEDED = 'ADMIN_DASH_CONTACTS_SUCCEEDED';\nexport const ADMIN_DASH_STATS_STARTED = 'ADMIN_DASH_STATS_STARTED';\nexport const ADMIN_DASH_STATS_FAILED = 'ADMIN_DASH_STATS_FAILED';\nexport const ADMIN_DASH_STATS_SUCCEEDED = 'ADMIN_DASH_STATS_SUCCEEDED';\n\n// Admin: Deploys\nexport const ADMIN_FETCH_DEPLOYMENTS_STARTED = 'ADMIN_FETCH_DEPLOYMENTS_STARTED';\nexport const ADMIN_FETCH_DEPLOYMENTS_FAILED = 'ADMIN_FETCH_DEPLOYMENTS_FAILED';\nexport const ADMIN_FETCH_DEPLOYMENTS_SUCCEEDED = 'ADMIN_FETCH_DEPLOYMENTS_SUCCEEDED';\nexport const ADMIN_FETCH_DEPLOYMENT_STARTED = 'ADMIN_FETCH_DEPLOYMENT_STARTED';\nexport const ADMIN_FETCH_DEPLOYMENT_FAILED = 'ADMIN_FETCH_DEPLOYMENT_FAILED';\nexport const ADMIN_FETCH_DEPLOYMENT_SUCCEEDED = 'ADMIN_FETCH_DEPLOYMENT_SUCCEEDED';\nexport const ADMIN_OVERLOAD_DEPLOYMENT_STARTED = 'ADMIN_OVERLOAD_DEPLOYMENT_STARTED';\nexport const ADMIN_OVERLOAD_DEPLOYMENT_FAILED = 'ADMIN_OVERLOAD_DEPLOYMENT_FAILED';\nexport const ADMIN_OVERLOAD_DEPLOYMENT_SUCCEEDED = 'ADMIN_OVERLOAD_DEPLOYMENT_SUCCEEDED';\nexport const ADMIN_REPLACE_WITH_DEPLOYMENT_STARTED = 'ADMIN_REPLACE_WITH_DEPLOYMENT_STARTED';\nexport const ADMIN_REPLACE_WITH_DEPLOYMENT_FAILED = 'ADMIN_REPLACE_WITH_DEPLOYMENT_FAILED';\nexport const ADMIN_REPLACE_WITH_DEPLOYMENT_SUCCEEDED = 'ADMIN_REPLACE_WITH_DEPLOYMENT_SUCCEEDED';\nexport const ADMIN_SAVE_NEW_DEPLOYMENT_STARTED = 'ADMIN_SAVE_NEW_DEPLOYMENT_STARTED';\nexport const ADMIN_SAVE_NEW_DEPLOYMENT_FAILED = 'ADMIN_SAVE_NEW_DEPLOYMENT_FAILED';\nexport const ADMIN_SAVE_NEW_DEPLOYMENT_SUCCEEDED = 'ADMIN_SAVE_NEW_DEPLOYMENT_SUCCEEDED';\nexport const ADMIN_COMPARE_DEPLOYMENTS_STARTED = 'ADMIN_COMPARE_DEPLOYMENTS_STARTED';\nexport const ADMIN_COMPARE_DEPLOYMENTS_FAILED = 'ADMIN_COMPARE_DEPLOYMENTS_FAILED';\nexport const ADMIN_COMPARE_DEPLOYMENTS_SUCCEEDED = 'ADMIN_COMPARE_DEPLOYMENTS_SUCCEEDED';\nexport const ADMIN_COMPARE_DEPLOYMENTS_RESET = 'ADMIN_COMPARE_DEPLOYMENTS_RESET';\n\n// Admin: Language\nexport const ADMIN_FETCH_LANG_LIST_STARTED = 'ADMIN_FETCH_LANG_LIST_STARTED';\nexport const ADMIN_FETCH_LANG_LIST_FAILED = 'ADMIN_FETCH_LANG_LIST_FAILED';\nexport const ADMIN_FETCH_LANG_LIST_SUCCEEDED = 'ADMIN_FETCH_LANG_LIST_SUCCEEDED';\nexport const ADMIN_FETCH_LANG_INFO_STARTED = 'ADMIN_FETCH_LANG_INFO_STARTED';\nexport const ADMIN_FETCH_LANG_INFO_FAILED = 'ADMIN_FETCH_LANG_INFO_FAILED';\nexport const ADMIN_FETCH_LANG_INFO_SUCCEEDED = 'ADMIN_FETCH_LANG_INFO_SUCCEEDED';\nexport const ADMIN_HOLD_LANG_TRANSLATION = 'ADMIN_HOLD_LANG_TRANSLATION';\nexport const ADMIN_SAVE_LANG_INFO_STARTED = 'ADMIN_SAVE_LANG_INFO_STARTED';\nexport const ADMIN_SAVE_LANG_INFO_FAILED = 'ADMIN_SAVE_LANG_INFO_FAILED';\nexport const ADMIN_SAVE_LANG_INFO_SUCCEEDED = 'ADMIN_SAVE_LANG_INFO_SUCCEEDED';\n\n// Admin: Responses\nexport const ADMIN_RESPONSES_STARTED = 'ADMIN_RESPONSES_STARTED';\nexport const ADMIN_RESPONSES_FAILED = 'ADMIN_RESPONSES_FAILED';\nexport const ADMIN_RESPONSES_SUCCEEDED = 'ADMIN_RESPONSES_SUCCEEDED';\n\n// Admin: Resources\nexport const ADMIN_FETCH_RESOURCES_LIST_STARTED = 'ADMIN_FETCH_RESOURCES_LIST_STARTED';\nexport const ADMIN_FETCH_RESOURCES_LIST_FAILED = 'ADMIN_FETCH_RESOURCES_LIST_FAILED';\nexport const ADMIN_FETCH_RESOURCES_LIST_SUCCEEDED = 'ADMIN_FETCH_RESOURCES_LIST_SUCCEEDED';\nexport const ADMIN_REQUEST_RESOURCE_DELETE = 'ADMIN_REQUEST_RESOURCE_DELETE';\nexport const ADMIN_CANCEL_RESOURCE_DELETE = 'ADMIN_CANCEL_RESOURCE_DELETE';\nexport const ADMIN_DELETE_RESOURCE_STARTED = 'ADMIN_DELETE_RESOURCE_STARTED';\nexport const ADMIN_DELETE_RESOURCE_FAILED = 'ADMIN_DELETE_RESOURCE_FAILED';\nexport const ADMIN_DELETE_RESOURCE_SUCCEEDED = 'ADMIN_DELETE_RESOURCE_SUCCEEDED';\nexport const ADMIN_DISMISS_DELETE_RESOURCE_MESSAGE = 'ADMIN_DISMISS_DELETE_RESOURCE_MESSAGE';\nexport const ADMIN_FETCH_RESOURCE_STARTED = 'ADMIN_FETCH_RESOURCE_STARTED';\nexport const ADMIN_FETCH_RESOURCE_FAILED = 'ADMIN_FETCH_RESOURCE_FAILED';\nexport const ADMIN_FETCH_RESOURCE_SUCCEEDED = 'ADMIN_FETCH_RESOURCE_SUCCEEDED';\nexport const ADMIN_SAVE_RESOURCE_STARTED = 'ADMIN_SAVE_RESOURCE_STARTED';\nexport const ADMIN_SAVE_RESOURCE_FAILED = 'ADMIN_SAVE_RESOURCE_FAILED';\nexport const ADMIN_SAVE_RESOURCE_SUCCEEDED = 'ADMIN_SAVE_RESOURCE_SUCCEEDED';\nexport const ADMIN_SAVE_RESOURCE_MSG_DISMISSED = 'ADMIN_SAVE_RESOURCE_MSG_DISMISSED';\n\n// Admin: Results\nexport const ADMIN_FETCH_RESULTS_LIST_STARTED = 'ADMIN_FETCH_RESULTS_LIST_STARTED';\nexport const ADMIN_FETCH_RESULTS_LIST_FAILED = 'ADMIN_FETCH_RESULTS_LIST_FAILED';\nexport const ADMIN_FETCH_RESULTS_LIST_SUCCEEDED = 'ADMIN_FETCH_RESULTS_LIST_SUCCEEDED';\nexport const ADMIN_CHANGE_RESULTS_FILTER = 'ADMIN_CHANGE_RESULTS_FILTER';\nexport const ADMIN_FETCH_SCENARIO_STARTED = 'ADMIN_FETCH_SCENARIO_STARTED';\nexport const ADMIN_FETCH_SCENARIO_FAILED = 'ADMIN_FETCH_SCENARIO_FAILED';\nexport const ADMIN_FETCH_SCENARIO_SUCCEEDED = 'ADMIN_FETCH_SCENARIO_SUCCEEDED';\nexport const ADMIN_SAVE_SCENARIO_STARTED = 'ADMIN_SAVE_SCENARIO_STARTED';\nexport const ADMIN_SAVE_SCENARIO_FAILED = 'ADMIN_SAVE_SCENARIO_FAILED';\nexport const ADMIN_SAVE_SCENARIO_SUCCEEDED = 'ADMIN_SAVE_SCENARIO_SUCCEEDED';\n\n// Admin: Shared\nexport const ADMIN_FETCH_BENEFIT_STARTED = 'ADMIN_FETCH_BENEFIT_STARTED';\nexport const ADMIN_FETCH_BENEFIT_FAILED = 'ADMIN_FETCH_BENEFIT_FAILED';\nexport const ADMIN_FETCH_BENEFIT_SUCCEEDED = 'ADMIN_FETCH_BENEFIT_SUCCEEDED';\nexport const ADMIN_FETCH_BENEFITS_LIST_STARTED = 'ADMIN_FETCH_BENEFITS_LIST_STARTED';\nexport const ADMIN_FETCH_BENEFITS_LIST_FAILED = 'ADMIN_FETCH_BENEFITS_LIST_FAILED';\nexport const ADMIN_FETCH_BENEFITS_LIST_SUCCEEDED = 'ADMIN_FETCH_BENEFITS_LIST_SUCCEEDED';\n\n","import { DateTime } from 'luxon';\n\nimport Api from '../Api';\nimport Logger from '../../utils/Logger';\nimport * as authActions from './actions/admin/auth';\n\nexport const updateObject = (base, change) => {\n    return {\n        ...base,\n        ...change\n    };\n};\n\nexport const updateAdminActivity = (state, doUpdate) => {\n    return updateObject(state, {\n        last_active: doUpdate ? DateTime.local() : state.last_active\n    });\n};\n\nexport const handleAdminApiError = (dispatch, error, action, lcode, msg) => {\n    if (!error.isAxiosError) {\n        Logger.alert('Unknown error', { location_code: lcode, error: error });\n        dispatch(action(msg));\n    } else {\n        const parsed = Api.parseAxiosError(error);\n        if (parsed.code === 'TOKEN_INVALID') {\n            dispatch(authActions.adminLogout(true));\n        } else {\n            Logger.alert(msg, { api_error: parsed });\n            dispatch(action(msg));\n        }\n    }\n};\n\n","\nimport Local, { Language } from '../utils/Language';\nimport Logger from '../utils/Logger';\n\nimport Data from '../data/questions.json';\n\nclass Questions {\n    question_order = Data.order;\n\n    localized_data = null;\n    english_data = null;\n\n    validAnswer(qcode, letter) {\n        if (!(qcode in Data.spec)) {\n            return false;\n        }\n        for (const answer of Data.spec[qcode].answers) {\n            if (answer.letter === letter) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getAnswerLetters(qcode) {\n        if (!(qcode in Data.spec)) {\n            return [];\n        }\n        let letters = [];\n        for (const answer of Data.spec[qcode].answers) {\n            letters.push(answer.letter);\n        }\n        return letters;\n    }\n\n    filterAnswers(answerKey) {\n        let answers = {};\n        for (const qcode of this.question_order) {\n            if (this.validAnswer(qcode, answerKey[qcode])) {\n                answers[qcode] = answerKey[qcode];\n            }\n        }\n        return answers;\n    }\n\n    count() {\n        return this.question_order.length;\n    }\n\n    getCodeByStep(step) {\n        if (typeof this.question_order[step] === 'undefined') {\n            return null;\n        }\n        return this.question_order[step];\n    }\n\n    // spec looks like this:\n    // {\n    //   q: the full question,\n    //   t: the short title,\n    //   a: the answers, as: {\n    //     'A': the first answer,\n    //     'B': the second answer, ... etc\n    //   },\n    //   layout: 'vert' or 'horiz',\n    //   help: any help text (optional),\n    // }\n    getLocalSpec(qcode) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        if (typeof this.localized_data[qcode] === 'undefined') {\n            return null;\n        }\n        return this.localized_data[qcode];\n    }\n\n    getEnglishSpec(qcode) {\n        if (this.english_data === null) {\n            this.loadEnglishData();\n        }\n        if (typeof this.english_data[qcode] === 'undefined') {\n            return null;\n        }\n        return this.english_data[qcode];\n    }\n\n    getEnglishAnswers(answerKey) {\n        if (this.english_data === null) {\n            this.loadEnglishData();\n        }\n        let english_answers = {};\n        for (const qcode of this.question_order) {\n            const letter = answerKey[qcode];\n            const answer = this.english_data[qcode].answers[letter];\n            english_answers[qcode] = answer.toUpperCase();\n        }\n        return english_answers;\n    }\n\n    getLocalConfirmation(answerKey) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        let confirmation = [];\n        for (const qcode of this.question_order) {\n            const aspec = this.localized_data[qcode].answers;\n            let answers = [];\n            let selected = null;\n            for (const letter of Object.keys(aspec).sort()) {\n                let answer = {\n                    letter: letter,\n                    text: aspec[letter]\n                };\n                if (letter === answerKey[qcode]) {\n                    selected = { ...answer };\n                }\n                answers.push(answer);\n            }\n            confirmation.push({\n                code: qcode,\n                text: this.localized_data[qcode].question,\n                help: this.localized_data[qcode].help,\n                layout: this.localized_data[qcode].layout,\n                answers: answers,\n                selected: selected\n            });\n        }\n        return confirmation;\n    }\n\n    loadLocalizedData() {\n        this.localized_data = this.getData(Local);\n    }\n\n    loadEnglishData() {\n        if (Local.language_code === 'en') {\n            if (this.localized_data === null) {\n                this.loadLocalizedData();\n            }\n            this.english_data = this.localized_data;\n        } else {\n            const English = new Language('en');\n            this.english_data = this.getData(English);\n        }\n    }\n\n    getData(LangObj) {\n        let data = {};\n        for (let name of this.question_order) {\n            data[name] = {\n                question: LangObj.get(Data.spec[name].full_lang_key),\n                title: LangObj.get(Data.spec[name].title_lang_key),\n                layout: Data.spec[name].layout,\n                answers: {}\n            }\n            for (const answer of Data.spec[name].answers) {\n                data[name].answers[answer.letter] = LangObj.get(answer.lang_key);\n            }\n            if (Data.spec[name].help) {\n                data[name].help = LangObj.get(Data.spec[name].help_lang_key);\n            }\n        }\n        return data;\n    }\n\n    firstMissingStep(answers) {\n        let ready = true;\n        let started = false;\n        let step = 0;\n        for (const qcode of this.question_order) {\n            if (typeof answers[qcode] === 'undefined') {\n                Logger.debug('Missing step: undefined question code ' + qcode, { answers: answers });\n                ready = false;\n                break;\n            } else {\n                started = true;\n            }\n            const letter = answers[qcode];\n            if (!this.validAnswer(qcode, letter)) {\n                Logger.warn('Missing step: undefined answer letter ' + letter, { q_code: qcode, answers: answers });\n                ready = false;\n                break;\n            }\n            ++step;\n        }\n        if (!ready) {\n            if (started) {\n                return step;\n            } else {\n                return 0;\n            }\n        }\n        return null;\n    }\n\n}\n\nexport default new Questions();\n","import CookieBase from '../CookieBase';\n\nimport Questions from '../../logic/Questions';\n\nlet answersCookieFilter = (cookieobj) => {\n    return Questions.filterAnswers(cookieobj);\n};\n\nconst answersCookie = new CookieBase(\n    'hnct-answers', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    }, // spec\n    true, // compressed\n    answersCookieFilter // filter function\n);\n\nexport default answersCookie;\n","import * as actionTypes from './actionTypes';\nimport { updateObject} from '../utility';\nimport AnswersCookie from '../../cookies/AnswersCookie';\nimport Questions from '../../../logic/Questions';\nimport VisitorPrefs from '../../../logic/VisitorPrefs';\nimport Logger from '../../../utils/Logger';\n\nexport const toolCookiesLoaded = (visitorId, prefs, answers) => {\n    return {\n        type: actionTypes.TOOL_COOKIES_LOADED,\n        visitor_id: visitorId,\n        visitor_prefs: prefs,\n        answers: answers\n    };\n};\n\nexport const toolCookiesLoadFailed = (error) => {\n    return {\n        type: actionTypes.TOOL_COOKIES_LOAD_FAILED,\n        error: error\n    };\n};\n\nexport const loadToolData = () => {\n    return dispatch => {\n        let found = VisitorPrefs.fetchFromCookie();\n        if (found.error) {\n            dispatch(toolCookiesLoadFailed(found.error));\n        } else {\n            let answers = AnswersCookie.get();\n            if (!answers) {\n                answers = {};\n            }\n            dispatch(toolCookiesLoaded(found.id, found.prefs, answers));\n        }\n    };\n};\n\nexport const answersClear = () => {\n    AnswersCookie.set({});\n    return {\n        type: actionTypes.ANSWERS_CLEAR\n    };\n};\n\nexport const questionInit = (step) => {\n    return {\n        type: actionTypes.QUESTION_INIT,\n        step: step\n    };\n};\n\nexport const answersPushStarted = () => {\n    return {\n        type: actionTypes.ANSWERS_PUSH_STARTED\n    };\n};\n\nexport const answersPushCompleted = (answers) => {\n    return {\n        type: actionTypes.ANSWERS_PUSH_COMPLETED,\n        answers: answers\n    };\n};\n\nexport const answersPushFailed = () => {\n    return {\n        type: actionTypes.ANSWERS_PUSH_FAILED\n    };\n};\n\nexport const answerPush = (qcode, letter) => {\n    if (!Questions.validAnswer(qcode, letter)) {\n        Logger.warn('Request to push unknown question/answer pair ' + qcode + '/' + letter);\n        return (dispatch) => {\n            dispatch(answersPushFailed());\n        };\n    }\n    return (dispatch, getState) => {\n        dispatch(answersPushStarted());\n        let newAnswers = updateObject(getState().tool.answers, { [qcode]: letter });\n        AnswersCookie.set(newAnswers);\n        dispatch(answersPushCompleted(newAnswers));\n    };\n};\n\nexport const answersUpdateStarted = () => {\n    return {\n        type: actionTypes.ANSWERS_UPDATE_STARTED\n    };\n};\n\nexport const answersUpdateCompleted = (answers) => {\n    return {\n        type: actionTypes.ANSWERS_UPDATE_COMPLETED,\n        answers: answers\n    };\n};\n\nexport const answersUpdateFailed = () => {\n    return {\n        type: actionTypes.ANSWERS_UPDATE_FAILED\n    };\n};\n\nexport const answerSave = (qcode, letter) => {\n    if (!Questions.validAnswer(qcode, letter)) {\n        Logger.warn('Request to save unknown question/answer pair ' + qcode + '/' + letter);\n        return (dispatch, getState) => {\n            dispatch(answersUpdateFailed());\n        };\n    }\n    return (dispatch, getState) => {\n        dispatch(answersUpdateStarted());\n        let newAnswers = updateObject(getState().answers, { [qcode]: letter });\n        AnswersCookie.set(newAnswers);\n        dispatch(answersUpdateCompleted(newAnswers));\n    };\n};\n\nexport const visitorPrefsStored = (prefs) => {\n    return {\n        type: actionTypes.VISITOR_PREFS_STORED,\n        visitor_prefs: prefs\n    };\n};\n\nexport const cookiePrefsSave = (prefs) => {\n    return dispatch => {\n        let stored = VisitorPrefs.save(prefs);\n        dispatch(visitorPrefsStored(stored));\n    };\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nexport const adminFetchContactsRawStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_CONTACTS_RAW_STARTED\n    };\n};\n\nexport const adminFetchContactsRawFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_CONTACTS_RAW_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchContactsRawSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_CONTACTS_RAW_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const loadContactsRaw = () => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchContactsRawStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getRawContacts(data)\n            .then((response) => {\n                const contacts = response.data.contacts ? response.data.contacts : [];\n                dispatch(adminFetchContactsRawSucceeded(contacts));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchContactsRawFailed, 'EED1',\n                    'Could not fetch raw contacts list');\n            });\n    };\n};\n\n","// Anything not worth installing a library for\n\n// shuffle (durstenfeld/fisher-yates)\nexport const shuffle = given => {\n    // work backwards to the beginning of the array\n    let result = given.slice(0);\n    let current = result.length;\n    while (0 !== current) {\n        // first, step back from the last element we worked on\n        current -= 1;\n        // pick one of the remaining elements at random\n        const random = Math.floor(Math.random() * current);\n        // and swap it with the current element\n        const tmp = result[current];\n        result[current] = result[random];\n        result[random] = tmp;\n    }\n    return result;\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nimport DeployData from '../../../../data/deployment.json';\nimport BenefitsData from '../../../../data/benefits.json';\nimport ConditionsData from '../../../../data/conditions.json';\nimport CtaData from '../../../../data/cta.json';\nimport LangEnData from '../../../../data/lang_en.json';\nimport LangKeysData from '../../../../data/lang_keys.json';\nimport ResourcesData from '../../../../data/resources.json';\nimport ScenariosData from '../../../../data/scenarios.json';\n\nexport const adminFetchDeploymentsStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_DEPLOYMENTS_STARTED\n    };\n};\n\nexport const adminFetchDeploymentsFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_DEPLOYMENTS_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchDeploymentsSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_DEPLOYMENTS_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const adminFetchDeploymentStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_DEPLOYMENT_STARTED\n    };\n};\n\nexport const adminFetchDeploymentFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_DEPLOYMENT_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchDeploymentSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_DEPLOYMENT_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const adminOverloadDeploymentStarted = () => {\n    return {\n        type: actionTypes.ADMIN_OVERLOAD_DEPLOYMENT_STARTED\n    };\n};\n\nexport const adminOverloadDeploymentFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_OVERLOAD_DEPLOYMENT_FAILED,\n        error: error\n    };\n};\n\nexport const adminOverloadDeploymentSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_OVERLOAD_DEPLOYMENT_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const adminReplaceWithDeploymentStarted = () => {\n    return {\n        type: actionTypes.ADMIN_REPLACE_WITH_DEPLOYMENT_STARTED\n    };\n};\n\nexport const adminReplaceWithDeploymentFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_REPLACE_WITH_DEPLOYMENT_FAILED,\n        error: error\n    };\n};\n\nexport const adminReplaceWithDeploymentSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_REPLACE_WITH_DEPLOYMENT_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const adminSaveNewDeploymentStarted = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_NEW_DEPLOYMENT_STARTED\n    };\n};\n\nexport const adminSaveNewDeploymentFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_SAVE_NEW_DEPLOYMENT_FAILED,\n        error: error\n    };\n};\n\nexport const adminSaveNewDeploymentSucceeded = (data, info) => {\n    return {\n        type: actionTypes.ADMIN_SAVE_NEW_DEPLOYMENT_SUCCEEDED,\n        data: data,\n        info: info\n    };\n};\n\nexport const adminCompareDeploymentsStarted = (avnum, bvnum) => {\n    return {\n        type: actionTypes.ADMIN_COMPARE_DEPLOYMENTS_STARTED,\n        avnum: avnum,\n        bvnum: bvnum\n    };\n};\n\nexport const adminCompareDeploymentsFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_COMPARE_DEPLOYMENTS_FAILED,\n        error: error\n    };\n};\n\nexport const adminCompareDeploymentsSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_COMPARE_DEPLOYMENTS_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const adminCompareDeploymentsReset = () => {\n    return {\n        type: actionTypes.ADMIN_COMPARE_DEPLOYMENTS_RESET\n    };\n};\n\nexport const loadDeployments = () => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchDeploymentsStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getAllDeploys(data)\n            .then((response) => {\n                const deploys = response.data.all ? response.data.all : [];\n                dispatch(adminFetchDeploymentsSucceeded(deploys));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchDeploymentsFailed, 'BA7A',\n                    'Could not fetch deployments list');\n            });\n    };\n};\n\nexport const loadDeployment = (id) => {\n    return (dispatch, getState) => {\n        if (!id) {\n            dispatch(adminFetchDeploymentSucceeded(DeployData));\n            return;\n        }\n        dispatch(adminFetchDeploymentStarted());\n        const data = { token: getState().admin.auth.token, id: id };\n        Api.getDeploymentInfo(data)\n            .then((response) => {\n                dispatch(adminFetchDeploymentSucceeded(response.data.deployment));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchDeploymentFailed, '2661',\n                    'Could not fetch deployment info');\n            });\n    };\n};\n\nexport const overloadDeployment = (id) => {\n    return (dispatch, getState) => {\n        dispatch(adminOverloadDeploymentStarted());\n        const data = { token: getState().admin.auth.token, id: id };\n\n        Api.revertAdmin(data)\n            .then(response => {\n                const json = JSON.stringify(response.data);\n                dispatch(adminOverloadDeploymentSucceeded(json));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminOverloadDeploymentFailed, 'B374',\n                    'Could not install deployment');\n            });\n    };\n};\n\nexport const replaceDatabaseWithCurrentDeployment = () => {\n    return (dispatch, getState) => {\n        dispatch(adminReplaceWithDeploymentStarted());\n        const data = {\n            token: getState().admin.auth.token,\n            deployment: DeployData,\n            alldata: {\n                benefits: BenefitsData,\n                conditions: ConditionsData,\n                cta: CtaData,\n                lang_en: LangEnData,\n                lang_keys: LangKeysData,\n                resources: ResourcesData,\n                scenarios: ScenariosData\n            }\n        };\n        Api.replaceAdmin(data)\n            .then(response => {\n                const json = JSON.stringify(response.data);\n                dispatch(adminReplaceWithDeploymentSucceeded(json));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminReplaceWithDeploymentFailed, 'A13F',\n                    'Could not replace database with current deployment');\n            });\n    };\n};\n\nexport const saveNewDeployment = () => {\n    return (dispatch, getState) => {\n        dispatch(adminSaveNewDeploymentStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.deployAdmin(data)\n            .then(response => {\n                const json = JSON.stringify(response.data);\n                const download_info = response.data;\n                dispatch(adminSaveNewDeploymentSucceeded(json, download_info));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminSaveNewDeploymentFailed, '53A8',\n                    'Could not save new deployment');\n            });\n    };\n};\n\nexport const compareDeployments = (avnum, bvnum) => {\n    return (dispatch, getState) => {\n        dispatch(adminCompareDeploymentsStarted(avnum, bvnum));\n        const data = {\n            token: getState().admin.auth.token,\n            a_vnum: avnum,\n            b_vnum: bvnum\n        };\n        Api.compareDeploys(data)\n            .then(response => {\n                const comparison = response.data.data;\n                dispatch(adminCompareDeploymentsSucceeded(comparison));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminCompareDeploymentsFailed, 'D342',\n                    'Could not compare deployments');\n            });\n    };\n};\n\nexport const resetCompareDeployments = () => {\n    return (dispatch, getState) => {\n        dispatch(adminCompareDeploymentsReset());\n    };\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nexport const adminFetchLangListStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_LANG_LIST_STARTED\n    };\n};\n\nexport const adminFetchLangListFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_LANG_LIST_FAILED,\n        error: error\n    };\n}\n\nexport const adminFetchLangListSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_LANG_LIST_SUCCEEDED,\n        data: data\n    };\n}\n\nexport const adminFetchLangInfoStarted = (key) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_LANG_INFO_STARTED,\n        key: key\n    };\n};\n\nexport const adminFetchLangInfoFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_LANG_INFO_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchLangInfoSucceeded = (data, text) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_LANG_INFO_SUCCEEDED,\n        data: data,\n        text: text\n    };\n};\n\nexport const adminHoldLangEditingText = (text) => {\n    return {\n        type: actionTypes.ADMIN_HOLD_LANG_TRANSLATION,\n        text: text\n    };\n};\n\nexport const adminSaveLangInfoStarted = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_LANG_INFO_STARTED\n    };\n};\n\nexport const adminSaveLangInfoFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_SAVE_LANG_INFO_FAILED,\n        error: error\n    };\n};\n\nexport const adminSaveLangInfoSucceeded = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_LANG_INFO_SUCCEEDED\n    };\n};\n\nexport const loadLangList = () => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchLangListStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getAllLanguage(data)\n            .then((response) => {\n                const all = response.data.all ? response.data.all : [];\n                dispatch(adminFetchLangListSucceeded(all));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchLangListFailed, '4CBE',\n                    'Could not fetch language list');\n            });\n    };\n};\n\nexport const loadLangInfo = (key) => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchLangInfoStarted(key));\n        const data = { token: getState().admin.auth.token, key: key };\n        Api.getLanguageInfo(data)\n            .then((response) => {\n                dispatch(adminFetchLangInfoSucceeded(response.data.info, response.data.en));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchLangInfoFailed, '9429',\n                    'Could not fetch language info for ' + key);\n            });\n    };\n};\n\nexport const saveLangInfo = () => {\n    return (dispatch, getState) => {\n        dispatch(adminSaveLangInfoStarted());\n        const data = {\n            token: getState().admin.auth.token,\n            key: getState().admin.language.current.key,\n            language: getState().admin.language.current.lang,\n            translation: getState().admin.language.current.text\n        };\n        Api.saveTranslation(data)\n            .then((response) => {\n                dispatch(adminSaveLangInfoSucceeded());\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminSaveLangInfoFailed, '7FBD',\n                    'Could not fetch save language');\n            });\n    };\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nexport const adminFetchResourcesListStarted = (benefit) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESOURCES_LIST_STARTED,\n        benefit: benefit\n    };\n};\n\nexport const adminFetchResourcesListFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESOURCES_LIST_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchResourcesListSucceeded = (data, benefit) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESOURCES_LIST_SUCCEEDED,\n        data: data,\n        benefit: benefit\n    };\n};\n\nexport const adminRequestResourceDelete = (candidate) => {\n    return {\n        type: actionTypes.ADMIN_REQUEST_RESOURCE_DELETE,\n        candidate: candidate\n    };\n};\n\nexport const adminCancelResourceDelete = () => {\n    return {\n        type: actionTypes.ADMIN_CANCEL_RESOURCE_DELETE\n    };\n};\n\nexport const adminDeleteResourceStarted = () => {\n    return {\n        type: actionTypes.ADMIN_DELETE_RESOURCE_STARTED\n    };\n};\n\nexport const adminDeleteResourceFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_DELETE_RESOURCE_FAILED,\n        error: error\n    };\n};\n\nexport const adminDeleteResourceSucceeded = () => {\n    return {\n        type: actionTypes.ADMIN_DELETE_RESOURCE_SUCCEEDED\n    };\n};\n\nexport const adminDismissDeleteResourceMessage = () => {\n    return {\n        type: actionTypes.ADMIN_DISMISS_DELETE_RESOURCE_MESSAGE\n    };\n};\n\nexport const adminFetchResourceStarted = (id) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESOURCE_STARTED,\n        id: id\n    };\n};\n\nexport const adminFetchResourceFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESOURCE_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchResourceSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESOURCE_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const adminSaveResourceStarted = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_RESOURCE_STARTED\n    };\n};\n\nexport const adminSaveResourceFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_SAVE_RESOURCE_FAILED,\n        error: error\n    };\n};\n\nexport const adminSaveResourceSucceeded = (id) => {\n    return {\n        type: actionTypes.ADMIN_SAVE_RESOURCE_SUCCEEDED,\n        id: id\n    };\n};\n\nexport const adminSaveResourceMsgDismissed = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_RESOURCE_MSG_DISMISSED\n    };\n};\n\nexport const loadResourcesList = (benefit) => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchResourcesListStarted(benefit));\n        const data = { token: getState().admin.auth.token };\n        Api.getResources(data, benefit)\n            .then((response) => {\n                const resources = response.data.resources ? response.data.resources : [];\n                dispatch(adminFetchResourcesListSucceeded(resources, benefit));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchResourcesListFailed, '56AE',\n                    'Could not fetch resources list');\n            });\n    };\n};\n\nexport const deleteResource = () => {\n    return (dispatch, getState) => {\n        dispatch(adminDeleteResourceStarted());\n        const data = { token: getState().admin.auth.token, id: getState().admin.resources.delete.candidate.id };\n        Api.deleteResource(data)\n            .then((response) => {\n                dispatch(adminDeleteResourceSucceeded());\n                dispatch(loadResourcesList());\n            })\n            .catch((error) => {\n                handleAdminApiError(dispatch, error, adminDeleteResourceFailed, '87B7',\n                    'Could not delete resource');\n            });\n    };\n};\n\nexport const loadResourceInfo = (id) => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchResourceStarted(id));\n        const data = { token: getState().admin.auth.token };\n        Api.getResource(id, data)\n            .then((response) => {\n                const resource = response.data.resource ? response.data.resource : {};\n                dispatch(adminFetchResourceSucceeded(resource));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchResourceFailed, 'BEA2',\n                    'Could not fetch resource');\n            });\n    };\n};\n\nexport const saveResource = (old, benefits, form) => {\n    return (dispatch, getState) => {\n        dispatch(adminSaveResourceStarted());\n\n        const data = { token: getState().admin.auth.token, info: {} };\n        if (old) {\n            data.info.id = old.id;\n            data.info.code = old.code;\n            data.info.lang_key_text = old.lang_key_text;\n            data.info.lang_key_desc = old.lang_key_desc;\n        }\n        data.info.benefit = null;\n        data.info.en_text = form.en_text;\n        data.info.en_desc = form.en_desc;\n        data.info.links = { en: form.link_en };\n        const form_id = form.benefit_id ? parseInt(form.benefit_id) : NaN;\n        if (!isNaN(form_id)) {\n            for (var b of benefits) {\n                if (b.id === form_id) {\n                    data.info.benefit = { ...b };\n                    break;\n                }\n            }\n        }\n\n        Api.saveResource(data)\n            .then((response) => {\n                if (old) {\n                    dispatch(adminSaveResourceSucceeded(null));\n                } else {\n                    dispatch(adminSaveResourceSucceeded(response.data.id));\n                }\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminSaveResourceFailed, '9DDF',\n                    'Could not save resource');\n            });\n    };\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nexport const adminResponsesStarted = () => {\n    return {\n        type: actionTypes.ADMIN_RESPONSES_STARTED\n    };\n};\n\nexport const adminResponsesFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_RESPONSES_FAILED,\n        error: error\n    };\n}\n\nexport const adminResponsesSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_RESPONSES_SUCCEEDED,\n        data: data\n    };\n}\n\nexport const loadResponses = () => {\n    return (dispatch, getState) => {\n        dispatch(adminResponsesStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getAllResponses(data)\n            .then((response) => {\n                const all = response.data.all ? response.data.all : [];\n                dispatch(adminResponsesSucceeded(all));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminResponsesFailed, 'AE50',\n                    'Could not fetch responses');\n            });\n    };\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nexport const adminFetchResultsListStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESULTS_LIST_STARTED\n    };\n};\n\nexport const adminFetchResultsListFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESULTS_LIST_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchResultsListSucceeded = (benefit, conditions, scenarios, filters) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_RESULTS_LIST_SUCCEEDED,\n        benefit: benefit,\n        conditions: conditions,\n        scenarios: scenarios,\n        filters: filters\n    };\n};\n\nexport const adminChangeResultsFilter = (condition, letter) => {\n    return {\n        type: actionTypes.ADMIN_CHANGE_RESULTS_FILTER,\n        condition: condition,\n        letter: letter\n    };\n};\n\nexport const adminFetchScenarioStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_SCENARIO_STARTED\n    };\n};\n\nexport const adminFetchScenarioFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_SCENARIO_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchScenarioSucceeded = (benefit, scenario) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_SCENARIO_SUCCEEDED,\n        benefit: benefit,\n        scenario: scenario\n    };\n};\n\nexport const adminSaveScenarioStarted = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_SCENARIO_STARTED\n    };\n};\n\nexport const adminSaveScenarioFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_SAVE_SCENARIO_FAILED,\n        error: error\n    };\n};\n\nexport const adminSaveScenarioSucceeded = () => {\n    return {\n        type: actionTypes.ADMIN_SAVE_SCENARIO_SUCCEEDED\n    };\n};\n\nexport const loadResults = (code) => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchResultsListStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getScenarios(code, data)\n            .then((response) => {\n                if (!response.data.benefit) {\n                    dispatch(adminFetchResultsListFailed('That benefit is unknown'));\n                } else {\n                    const benefit = response.data.benefit;\n                    const conditions = response.data.conditions ? response.data.conditions : [];\n                    const scenarios = response.data.scenarios ? response.data.scenarios : [];\n                    const filters = {};\n                    for (const c of conditions) {\n                        filters[c.key_name] = null;\n                    }\n                    dispatch(adminFetchResultsListSucceeded(benefit, conditions, scenarios, filters));\n                }\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchResultsListFailed, '423D',\n                    'Could not fetch results');\n            });\n    };\n};\n\nexport const loadScenario = (benefit, id) => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchScenarioStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getScenario(benefit, id, data)\n            .then((response) => {\n                if (!response.data.benefit || !response.data.scenario) {\n                    dispatch(adminFetchScenarioFailed('That scenario is unknown'));\n                } else {\n                    const benefit = response.data.benefit;\n                    const scenario = response.data.scenario;\n                    dispatch(adminFetchScenarioSucceeded(benefit, scenario));\n                }\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchScenarioFailed, 'B029',\n                    'Could not fetch scenario');\n            });\n    };\n};\n\nexport const saveScenario = (benefit, id, form) => {\n    return (dispatch, getState) => {\n        dispatch(adminSaveScenarioStarted());\n        const data = { ...form, token: getState().admin.auth.token };\n        Api.saveScenario(benefit, id, data)\n            .then((response) => {\n                dispatch(adminSaveScenarioSucceeded());\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminSaveScenarioFailed, '1229',\n                    'Could not save scenario');\n            });\n    };\n};\n\n","import * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport { handleAdminApiError } from '../../utility';\n\nexport const adminFetchBenefitStarted = (code) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_BENEFIT_STARTED,\n        code: code\n    };\n};\n\nexport const adminFetchBenefitFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_BENEFIT_FAILED,\n        error: error\n    };\n}\n\nexport const adminFetchBenefitSucceeded = (data, code) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_BENEFIT_SUCCEEDED,\n        data: data,\n        code: code\n    };\n}\n\nexport const adminFetchBenefitsListStarted = () => {\n    return {\n        type: actionTypes.ADMIN_FETCH_BENEFITS_LIST_STARTED\n    };\n};\n\nexport const adminFetchBenefitsListFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_BENEFITS_LIST_FAILED,\n        error: error\n    };\n};\n\nexport const adminFetchBenefitsListSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_FETCH_BENEFITS_LIST_SUCCEEDED,\n        data: data\n    };\n};\n\nexport const loadBenefit = (code) => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchBenefitStarted(code));\n        const data = { token: getState().admin.auth.token };\n        Api.getBenefitInfo(code, data)\n            .then((response) => {\n                if (!response.data.benefit) {\n                    dispatch(adminFetchBenefitFailed('That benefit is unknown'));\n                } else {\n                    dispatch(adminFetchBenefitSucceeded(response.data.benefit, code));\n                }\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchBenefitFailed, '40E9',\n                    'Could not fetch benefit ' + code);\n            });\n    };\n};\n\nexport const loadBenefitsList = () => {\n    return (dispatch, getState) => {\n        dispatch(adminFetchBenefitsListStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getBenefits(data)\n            .then((response) => {\n                const benefits = response.data.benefits ? response.data.benefits : [];\n                dispatch(adminFetchBenefitsListSucceeded(benefits));\n            })\n            .catch(error => {\n                handleAdminApiError(dispatch, error, adminFetchBenefitsListFailed, '8D10',\n                    'Could not fetch benefits list');\n            });\n    };\n};\n\n","import CookieBase from '../CookieBase';\n\nconst preLaunchCookie = new CookieBase(\n    'hnct-prelaunch', // name\n    {\n        path: '/',\n        maxAge: 60 * 60,\n        sameSite: 'Strict'\n    }, // spec\n    true // compressed\n);\n\nexport default preLaunchCookie;\n","import { DateTime, Interval } from 'luxon';\n\nimport * as actionTypes from './actionTypes';\nimport PreLaunchCookie from '../../cookies/PreLaunchCookie';\nimport Api from '../../Api';\nimport Logger from '../../../utils/Logger';\n\nconst AUTH_STANDARD_USERNAME = 'prelaunch';\n\n// Synchronous action creators\n\nexport const prelaunchLoginCheckStarted = () => {\n    return {\n        type: actionTypes.PRELAUNCH_LOGIN_CHECK_STARTED\n    };\n};\n\nexport const prelaunchLoginStarted = () => {\n    return {\n        type: actionTypes.PRELAUNCH_LOGIN_STARTED\n    };\n};\n\nexport const prelaunchLoginFailed = (error) => {\n    return {\n        type: actionTypes.PRELAUNCH_LOGIN_FAILED,\n        error: error\n    };\n};\n\nexport const prelaunchLoginSucceeded = (username, token) => {\n    return {\n        type: actionTypes.PRELAUNCH_LOGIN_SUCCEEDED,\n        username: username,\n        token: token\n    };\n};\n\nexport const prelaunchLogout = () => {\n    return {\n        type: actionTypes.PRELAUNCH_LOGOUT\n    };\n};\n\n// Asynchronous action creators\n\nexport const checkPrelaunchAuthState = () => {\n    return (dispatch, getState) => {\n        dispatch(prelaunchLoginCheckStarted());\n\n        let auth = PreLaunchCookie.get();\n\n        // No cookie? We're logged out\n        if (!auth) {\n            dispatch(prelaunchLogout(false));\n            return;\n        }\n\n        // Not expired? We're logged in\n        const exp = auth.exp_date ? DateTime.fromISO(auth.exp_date) : null;\n        const now = DateTime.local();\n        if (exp !== null && exp > now) {\n            dispatch(prelaunchLoginSucceeded(auth.username, auth.token));\n            const remaining = Interval.fromDateTimes(now, exp);\n            dispatch(delayedLogout(remaining.length('milliseconds')));\n            return;\n        }\n\n        // Otherwise, logout\n        dispatch(prelaunchLogout());\n    };\n};\n\nexport const delayedLogout = (remaining) => {\n    return (dispatch, getState) => {\n        setTimeout(() => {\n            dispatch(prelaunchLogout());\n        }, remaining);\n    };\n};\n\nexport const authenticatePrelaunch = (username, password) => {\n    return dispatch => {\n        dispatch(prelaunchLoginStarted());\n        const data = { username: username, password: password };\n        Api.checkPrelaunchLogin(data)\n            .then(response => {\n                const new_exp = DateTime.fromISO(response.data.expires);\n                if (response.data.token && new_exp.isValid) {\n                    PreLaunchCookie.set({\n                        username: AUTH_STANDARD_USERNAME,\n                        token: response.data.token,\n                        exp_date: new_exp\n                    });\n                    dispatch(prelaunchLoginSucceeded(AUTH_STANDARD_USERNAME, response.data.token));\n                    const now = DateTime.local();\n                    const remaining = Interval.fromDateTimes(now, new_exp);\n                    dispatch(delayedLogout(remaining.length('milliseconds')));\n                } else if (!new_exp.isValid) {\n                    Logger.alert('Prelaunch login is not returning a valid expiration date', {\n                        invalid_code: new_exp.invalidReason,\n                        invalid_msg: new_exp.invalidExplanation,\n                        response_data: response.data\n                    });\n                    dispatch(prelaunchLoginFailed('Prelaunch login is not returning a valid expiration date'));\n                } else {\n                    Logger.alert('Prelaunch login succeeded without returning a token', { returned: response.data });\n                    dispatch(prelaunchLoginFailed('Prelaunch login is not returning a token'));\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    const lcode = 'A86F';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'LOGIN_INCORRECT' &&\n                        parsed.code !== 'USERNAME_REQUIRED' &&\n                        parsed.code !== 'PASSWORD_REQUIRED') {\n                        Logger.alert('Prelaunch login failed', { api_error: parsed });\n                    }\n                }\n                dispatch(prelaunchLoginFailed('Prelaunch login failed'));\n            });\n    };\n};\n\nexport const manualPrelaunchLogout = () => {\n    return (dispatch, getState) => {\n        Api.prelaunchLogout({ token: getState().prelaunch.auth.token })\n            .then(response => {\n                dispatch(prelaunchLogout(false));\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    const lcode = 'A263';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    const parsed = Api.parseAxiosError(error);\n                    Logger.alert('Prelaunch logout failed', { api_error: parsed });\n                }\n                dispatch(prelaunchLogout(false));\n            })\n    };\n};\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Intro from '../../../components/BenefitsTool/Intro/Intro';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\nimport * as actions from '../../../storage/redux/actions/index';\n\nclass Landing extends Component {\n\n    state = {\n        error: false\n    };\n\n    startQuiz = () => {\n        this.setState({ error: false });\n        Api.bumpSession(this.props.visitor_id, () => {\n                this.goToQuiz();\n            },\n            () => {\n                this.errorOrMoveOn();\n            });\n    };\n\n    errorOrMoveOn() {\n        // These are alert-level errors for me the programmer, but not\n        // for the user -- if the API is malfunctioning, let's give it\n        // one chance to get over a hiccup, then send them on to the\n        // quiz page without getting a token to record their answers\n        this.setState((current) => {\n            if (current.error) {\n                this.goToQuiz();\n                return { error: false };\n            } else {\n                return { error: true };\n            }\n        });\n    }\n\n    goToQuiz() {\n        this.setState({ error: false }, () => {\n            this.props.clearAnswers();\n            this.props.history.push('/quiz');\n        });\n    }\n\n    componentDidMount() {\n        Logger.setComponent('BenefitsTool/Landing');\n    }\n\n    render() {\n        Logger.setComponent('BenefitsTool/Landing');\n        const lang = {\n            header: Language.get('landing_header'),\n            message: Language.get('landing_message'),\n            error_msg: Language.get('landing_error'),\n            disclaimer_link: Language.get('landing_disclaimer_link'),\n            disclaimer_title: Language.get('landing_disclaimer_title')\n        };\n\n        return <Intro\n            error={this.state.error ? lang.error_msg : null}\n            clicked={this.startQuiz}\n            lang={lang} />;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        visitor_id: state.tool.visitor_id\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        clearAnswers: () => dispatch(actions.answersClear())\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Landing));\n","import React from 'react';\n\nimport './StepCounter.css';\n\nconst stepCounter = (props) => {\n\n    let bullets = [];\n    for (let i = 0; i < props.steps.length; ++i) {\n        let step = props.steps[i];\n        let className = 'Bullet';\n        if (props.currentStep < i) {\n            className += ' Unvisited';\n        } else if (props.currentStep === i) {\n            className += ' Current';\n        } else {\n            className += ' Visited';\n        }\n        if (typeof(step.clicked) === 'function') {\n            className += ' Clickable';\n        }\n        bullets.push(<li key={step.title}\n            className={className}\n            title={step.title}\n            onClick={step.clicked}>&middot;</li>);\n    }\n\n    return (\n        <div className=\"StepCounter\">\n            <ul>\n                {bullets}\n            </ul>\n        </div>\n    );\n};\n\nexport default stepCounter;\n","import React from 'react';\n\nimport './Question.css';\n\nconst question = (props) => {\n    return (\n        <div className=\"Question\">\n            <h2 className=\"QuestionHeader\">{props.questionText}</h2>\n\n            {props.helpText ? <p className=\"Help\" dangerouslySetInnerHTML={{__html: props.helpText}}></p> : null}\n        </div>\n    );\n};\n\nexport default question;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport StepCounter from '../../../components/BenefitsTool/StepCounter/StepCounter';\nimport Question from '../../../components/BenefitsTool/Question/Question';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\nimport * as actions from '../../../storage/redux/actions/index';\n\nimport Questions from '../../../logic/Questions';\n\nclass Quiz extends Component {\n\n    clickAnswer = (letter) => {\n        const qcode = Questions.getCodeByStep(this.currentStep());\n        this.props.saveAnswer(qcode, letter);\n    };\n\n    goBack = () => {\n        // NB: the urls are 1-indexed, so the current step in 0-index form is\n        // actually back by one\n        let newStep = this.currentUrlStep() - 1;\n        if (newStep < 1) {\n            newStep = 0;\n            Logger.err('Request to go back before step 1');\n        }\n        this.props.history.push('/quiz/' + newStep);\n    };\n\n    goToStep = (stepNum) => {\n        if (stepNum < 1 || stepNum > Questions.count()) {\n            Logger.warn('Event request to go to an out-of-bounds step', { step: stepNum });\n            return;\n        }\n        this.props.history.push('/quiz/' + stepNum);\n    };\n\n    cancelQuiz = () => {\n        this.props.history.push('/');\n    };\n\n    restartQuiz = () => {\n        this.props.history.push('/quiz/1');\n    };\n\n    componentDidMount() {\n        Logger.setComponent('BenefitsTool/Quiz');\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    currentStep() {\n        let current = 0;\n        if (this.props.match.params.step) {\n            let test = parseInt(this.props.match.params.step);\n            if (!isNaN(test) && test > 0 && test <= Questions.count()) {\n                current = test - 1;\n            } else {\n                Logger.warn('URL request to go to an out-of-bounds step', { step: this.props.match.params.step });\n            }\n        }\n        return current;\n    }\n\n    currentUrlStep() {\n        return this.currentStep() + 1;\n    }\n\n    render() {\n        Logger.setComponent('BenefitsTool/Quiz');\n\n        const lang = {\n            error_message: Language.get('quiz_save_failed_error'),\n            back_link_text: Language.get('quiz_back_link_text'),\n            restart_link_text: Language.get('util_restart_link_text'),\n            cancel_link_text: Language.get('quiz_cancel_link_text'),\n        };\n\n        // Steps\n        let steps = [];\n        const stepCount = Questions.count();\n        for (let i = 0; i < stepCount; ++i) {\n            const qcode = Questions.getCodeByStep(i);\n            const qspec = Questions.getLocalSpec(qcode);\n            let step = {\n                title: qspec.title,\n                target: i,\n            };\n            if (typeof(this.props.answers[qcode]) !== 'undefined') {\n                step.clicked = () => { this.goToStep(i + 1); };\n            }\n            steps.push(step);\n        }\n\n        // Question\n        let qcode = Questions.getCodeByStep(this.currentStep());\n        if (typeof qcode !== 'string') {\n            qcode = Questions.getCodeByStep(0);\n        }\n        const qspec = Questions.getLocalSpec(qcode);\n\n        // Answers\n        const answerButtons = Object.keys(qspec.answers).sort()\n            .map((aKey) => {\n                let classNames = [ 'AnswerButton' ];\n                if (typeof this.props.answers[qcode] != 'undefined') {\n                    if (this.props.answers[qcode] === aKey) {\n                        classNames.push('Selected');\n                    }\n                }\n                return {\n                    key: aKey,\n                    classNames: classNames,\n                    clicked: () => { this.clickAnswer(aKey); },\n                    text: qspec.answers[aKey]\n                };\n            });\n\n        // Links\n        let links = [];\n        if (this.currentStep() > 0) {\n            links.push({\n                classNames: [ 'BackLink' ],\n                clicked: this.goBack,\n                text: lang.back_link_text\n            });\n            links.push({\n                classNames: [ 'RestartLink' ],\n                clicked: this.restartQuiz,\n                text: lang.restart_link_text\n            });\n        } else {\n            links.push({\n                classNames: [ 'CancelLink' ],\n                clicked: this.cancelQuiz,\n                text: lang.cancel_link_text\n            });\n        }\n\n        let message = null;\n        if (this.props.has_error) {\n            message = lang.error_message;\n        }\n\n        let redirect = null;\n        if (this.props.step_saved) {\n            if (this.currentStep() + 1 >= Questions.count()) {\n                redirect = <Redirect push to=\"/confirm\" />;\n            } else {\n                const newStep = this.currentUrlStep() + 1;\n                const newPath = '/quiz/' + newStep;\n                redirect = <Redirect push to={newPath} />;\n            }\n            this.props.initQuestion();\n        }\n\n        return (\n            <div className=\"Quiz\">\n                {redirect}\n                <StepCounter\n                    steps={steps}\n                    currentStep={this.currentStep()} />\n                <Question\n                    questionText={qspec.question}\n                    helpText={qspec.help} />\n                <Controls\n                    errorMessage={message}\n                    buttonLayout={qspec.layout}\n                    buttons={answerButtons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        visitor_id: state.tool.visitor_id,\n        answers: state.tool.answers,\n        has_error: state.tool.answers_push_error,\n        step_saved: state.tool.step_saved\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initQuestion: (step) => dispatch(actions.questionInit(step)),\n        saveAnswer: (qcode, letter) => dispatch(actions.answerPush(qcode, letter))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Quiz));\n","import React from 'react';\n\nconst viewAnswer = (props) => {\n    return (\n        <div className=\"AnswerConfirm\">\n            <span className=\"SelectedAnswer\">{props.selectedAnswer.text}</span>\n            <button\n                className=\"EditButton\"\n                title={props.lang.edit_title}\n                onClick={props.clickedEdit}>\n                <i className=\"fas fa-pencil-alt\" title={props.lang.edit_alt}></i>\n            </button>\n        </div>\n    );\n}\n\nexport default viewAnswer;\n","import React from 'react';\n\nimport Controls from '../../../UI/Controls/Controls';\n\nconst editAnswer = (props) => {\n    const abuttons = props.answers\n        .map((answer) => {\n            let btn = {\n                key: answer.letter,\n                classNames: [ 'AnswerButton' ],\n                text: answer.text,\n                clicked: answer.clicked\n            };\n            if (answer.letter === props.selectedAnswer.letter) {\n                btn.classNames.push('Selected');\n            }\n            return btn;\n        });\n\n    return (\n        <div className=\"AnswerEdit\">\n            <button className=\"CancelButton\"\n                title={props.lang.cancel_title}\n                onClick={props.clickedCancel}>\n                <i className=\"fas fa-times\" title={props.lang.cancel_alt}></i>\n            </button>\n            <Controls\n                buttons={abuttons}\n                buttonLayout={props.layout} />\n        </div>\n    );\n}\n\nexport default editAnswer;\n","import React from 'react';\n\nimport ViewAnswer from './ViewAnswer/ViewAnswer';\nimport EditAnswer from './EditAnswer/EditAnswer';\n\nimport './AnswerList.css';\n\nconst answerList = (props) => {\n\n    const answerList = props.questions\n        .map((question) => {\n            let answerBlock = null;\n            if (question.isEditing) {\n                answerBlock = <EditAnswer\n                    lang={props.lang}\n                    answers={question.answers}\n                    selectedAnswer={question.selected}\n                    clickedCancel={question.clickedCancel}\n                    layout={question.layout} />;\n            } else {\n                answerBlock = <ViewAnswer\n                    lang={props.lang}\n                    selectedAnswer={question.selected}\n                    clickedEdit={question.clickedEdit} />\n            }\n            return (\n                <li key={question.code}>\n                    <div className=\"QuestionConfirm\">{question.text}</div>\n                    {answerBlock}\n                </li>\n            );\n        });\n\n    return (\n        <div className=\"Answers\">\n            <h3 className=\"AnswersHeader\">{props.lang.header}</h3>\n            <ul>\n                {answerList}\n            </ul>\n        </div>\n    );\n\n}\n\nexport default answerList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport AnswerList from '../../../../components/BenefitsTool/AnswerList/AnswerList';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nimport Questions from '../../../../logic/Questions';\n\nclass EditAnswers extends Component {\n\n    state = {\n        editingAnswer: null\n    };\n\n    startEdit(question) {\n        this.setState({ editingAnswer: question });\n    }\n\n    cancelEdit(question) {\n        this.setState({ editingAnswer: null });\n    }\n\n    saveEdit(question, letter) {\n        this.props.saveAnswer(question, letter);\n        this.setState({ editingAnswer: null });\n    }\n\n    render() {\n        let questions = Questions.getLocalConfirmation(this.props.answers)\n            .map(question => {\n                let answers = question.answers.map(answer => {\n                    return { ...answer, \n                        clicked: () => this.saveEdit(question.code, answer.letter)\n                    };\n                });\n                return { ...question,\n                    answers: answers,\n                    isEditing: this.state.editingAnswer === question.code,\n                    clickedCancel: () => this.cancelEdit(question.code),\n                    clickedEdit: () => this.startEdit(question.code),\n                };\n            });\n        return <AnswerList questions={questions} lang={this.props.lang} />;\n    };\n}\n\nconst mapStateToProps = state => {\n    return {\n        answers: state.tool.answers\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveAnswer: (qcode, letter) => dispatch(actions.answerPush(qcode, letter))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAnswers);\n","import React from 'react';\n\nimport './ContactInfo.css';\n\nconst contactInfo = (props) => {\n    return (\n        <div className=\"ContactInfo\">\n            <h3>{props.lang.header}</h3>\n            <div className=\"invitation\" dangerouslySetInnerHTML={{__html: props.lang.invitation}}></div>\n            <form method=\"post\" onSubmit={(e) => e.preventDefault()}>\n                <label>{props.lang.email_label}</label>\n                {props.emailError ?\n                    <div className=\"Error\">{props.lang.email_error}</div>\n                : null}\n                <input type=\"text\" name=\"email\" value={props.email} onChange={props.emailChanged} autoComplete=\"email\" />\n                <label>{props.lang.zip_label}</label>\n                {props.zipError ?\n                   <div className=\"Error\">{props.lang.zip_error}</div>\n                : null}\n                <input type=\"zip\" name=\"zip\" value={props.zip} onChange={props.zipChanged} autoComplete=\"current-zip\" />\n            </form>\n        </div>\n    );\n}\n\nexport default contactInfo;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport * as EmailValidator from 'email-validator';\nimport { connect } from 'react-redux';\n\nimport EditAnswers from './EditAnswers/EditAnswers';\nimport ContactInfo from '../../../components/BenefitsTool/ContactInfo/ContactInfo';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport IdentifierCookie from '../../../storage/cookies/IdentifierCookie';\n\nimport Questions from '../../../logic/Questions';\n\nclass Confirmation extends Component {\n\n    state = {\n        loading: false,\n        email: '',\n        zip: '',\n        emailError: false,\n        zipError: false,\n        saveError: false,\n        contactValidOrEmpty: true,\n        hasRecordingError: false\n    };\n\n    lang = null;\n\n    regexValidZip = /^[0-9]{5}(?:-[0-9]{4})?$/;\n\n    changeEmail = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { email: val };\n            if (val !== '' && !EmailValidator.validate(val)) {\n                newstate.emailError = true;\n            } else {\n                newstate.emailError = false;\n            }\n            if (val !== '') {\n                if (this.state.zip === '') {\n                    newstate.zipError = true;\n                }\n            } else {\n                if (this.state.zip === '') {\n                    newstate.zipError = false;\n                }\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    changeZip = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { zip: val };\n            if (val === '' && this.state.email !== '') {\n                newstate.zipError = true;\n            } else if (val !== '' && !this.regexValidZip.test(val)) {\n                newstate.zipError = true;\n            } else {\n                newstate.zipError = false;\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    confirmAnswers = () => {\n        const data = {\n            token: IdentifierCookie.get(),\n            visitor_id: this.props.visitor_id,\n            answers: Questions.getEnglishAnswers(this.props.answers)\n        };\n        if (this.state.email.trim() !== '') {\n            data.contact = {\n                email: this.state.email.trim()\n            };\n            if (this.state.zip.trim() !== '') {\n                data.contact.zip = this.state.zip.trim();\n            }\n        }\n        this.setState({ loading: true });\n        Api.recordResponse(data)\n            .then(response => {\n                IdentifierCookie.remove();\n                this.setState({ loading: false });\n                this.props.history.push('/results');\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                // This is an alert-level error for me the programmer, but not\n                // for the user -- if the API is malfunctioning, let's give it\n                // one chance to get over a hiccup, then send them on to the\n                // results page without recording anything\n                Logger.alert('Could not record response', { api_error: Api.parseAxiosError(error) });\n                this.setState((current) => {\n                    if (this.state.hasRecordingError) {\n                        IdentifierCookie.remove();\n                        this.props.history.push('/results');\n                        return { loading: false, hasRecordingError: false };\n                    } else {\n                        return { loading: false, hasRecordingError: true };\n                    }\n                });\n            });\n    };\n\n    componentDidMount() {\n        Logger.setComponent('BenefitsTool/Confirmation');\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    okToSubmitContact() {\n        let validOrEmpty = null;\n        if (this.state.email === '' && this.state.zip === '') {\n            validOrEmpty = true;\n        } else if (this.state.email === '' || this.state.zip === '') {\n            validOrEmpty = false;\n        } else {\n            if (this.state.emailError || this.state.zipError) {\n                validOrEmpty = false;\n            } else {\n                validOrEmpty = true;\n            }\n        }\n        this.setState({ contactValidOrEmpty: validOrEmpty });\n    }\n\n    render() {\n        Logger.setComponent('BenefitsTool/Confirmation');\n\n        const lang = {\n            edit_answers: {\n                header: Language.get('confirm_answerlist_header'),\n                cancel_title: Language.get('confirm_answerlist_cancel_edit_link_title'),\n                cancel_alt: Language.get('util_cancel_alt_text'),\n                edit_title: Language.get('confirm_answerlist_edit_link_title'),\n                edit_alt: Language.get('confirm_answerlist_edit_link_title'),\n            },\n            contact: {\n                header: Language.get('confirm_contact_header'),\n                invitation: Language.get('confirm_contact_invitation'),\n                email_label: Language.get('confirm_contact_email_label'),\n                email_error: Language.get('confirm_contact_email_error'),\n                zip_label: Language.get('confirm_contact_zip_label'),\n                zip_error: Language.get('confirm_contact_zip_error')\n            },\n            controls: {\n                confirm_button: Language.get('confirm_button_text'),\n                restart_link: Language.get('confirm_restart_link_text'),\n                recording_error: Language.get('confirm_recording_error')\n            }\n        };\n\n        const step = Questions.firstMissingStep(this.props.answers);\n        if (step !== null) {\n            const goto = step < 1 ? '/' : '/quiz/' + step;\n            return <Redirect to={goto} />;\n        }\n\n        const buttons = [\n            {\n                classNames: [ 'ConfirmButton' ],\n                clicked: this.confirmAnswers,\n                text: lang.controls.confirm_button\n            }\n        ];\n        if (this.state.loading || !this.state.contactValidOrEmpty) {\n            buttons[0].disabled = true;\n        }\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: lang.controls.restart_link\n            }\n        ];\n\n        return (\n            <div className=\"Confirmation\">\n                <EditAnswers lang={lang.edit_answers} />\n                <ContactInfo\n                    emailError={this.state.emailError}\n                    zipError={this.state.zipError}\n                    email={this.state.email}\n                    zip={this.state.zip}\n                    emailChanged={this.changeEmail}\n                    zipChanged={this.changeZip}\n                    lang={lang.contact} />\n                <Controls\n                    errorMessage={this.state.hasRecordingError ? lang.controls.recording_error : null}\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        visitor_id: state.tool.visitor_id,\n        answers: state.tool.answers\n    };\n};\n\nexport default connect(mapStateToProps)(withRouter(Confirmation));\n","import React from 'react';\n\nconst linkList = (props) => {\n    let i = 0;\n    const links = props.links.map(link => {\n        let elem = null;\n        if (link.sameSite) {\n            elem = <a href={link.link}>{link.text}</a>\n        } else {\n            elem = <a href={link.link} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a>\n        }\n        ++i;\n        return (\n            <li key={i}>\n                {elem}\n                {link.description ?\n                    <p class=\"LinkDescription\">{link.description}</p>\n                : null}\n            </li>\n        );\n    });\n    return (\n        <div className=\"LinkList\">\n            {props.header ?\n                <h5>{props.header}</h5>\n            : null}\n            <ul>\n                {links}\n            </ul>\n        </div>\n    );\n};\n\nexport default linkList;\n","import React, { useState } from 'react';\n\nimport LinkList from '../LinkList/LinkList';\nimport IconButton from '../IconButton/IconButton';\n\nimport './ExpandedSection.css';\n\nconst ExpandedSection = (props) => {\n    const [expanded, setExpanded] = useState(false);\n    let readmore_link = null;\n    let expanded_block = null;\n    let classes = [ 'ExpandedSection' ];\n\n    if (props.read_more) {\n        classes.push('ReadMore');\n        let more_classes = [ 'MoreBlock' ];\n\n        const doExpand = (e) => {\n            e.preventDefault();\n            setExpanded(true);\n        };\n\n        const doCollapse = (e) => {\n            e.preventDefault();\n            setExpanded(false);\n        };\n\n        if (expanded) {\n            more_classes.push('ExpandedMore');\n            readmore_link = (\n                <div className=\"ReadLessLink\">\n                    <IconButton\n                        icon=\"fas fa-arrow-circle-up\"\n                        title={props.lang.read_less}\n                        append_text={props.lang.read_less}\n                        clicked={doCollapse} />\n                </div>\n            );\n        } else {\n            more_classes.push('CollapsedMore');\n            readmore_link = (\n                <div className=\"ReadMoreLink\">\n                    <IconButton\n                        icon=\"fas fa-arrow-circle-down\"\n                        title={props.lang.read_more}\n                        append_text={props.lang.read_more}\n                        clicked={doExpand} />\n                </div>\n            );\n        }\n\n        expanded_block = (\n            <div className={more_classes.join(' ')}>\n                <div dangerouslySetInnerHTML={{__html: props.read_more}}></div>\n                {props.resources ?\n                    <LinkList header={props.resources_header} links={props.resources} />\n                : null}\n            </div>\n        );\n    }\n\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n\n    return (\n        <div className={classes.join(' ')}>\n            {props.header ?\n                <h3 className=\"SectionHeader\">{props.header}</h3>\n            : null}\n            <div className=\"MainBlock\">\n                <div dangerouslySetInnerHTML={{__html: props.text}}></div>\n                {readmore_link}\n            </div>\n            {expanded_block}\n        </div>\n    );\n};\n\nexport default ExpandedSection;\n","import React from 'react';\n\nimport ExpandedSection from '../../UI/ExpandedSection/ExpandedSection';\nimport LinkList from '../../UI/LinkList/LinkList';\n\nimport './Response.css';\n\nconst response = (props) => {\n    let i = 0;\n    let answer = props.answerSections.map((section) => {\n        ++i;\n        let add_class = '';\n        if (section.type === 'benefit') {\n            add_class = 'Benefit';\n        } else if (section.type === 'placeholder') {\n            add_class = 'Placeholder';\n        }\n        return <ExpandedSection key={i}\n            add_class={add_class}\n            lang={props.lang}\n            {...section} />;\n    });\n    let resourceBlock = null;\n    if (props.resources.length > 0) {\n        resourceBlock = (\n            <div className=\"Resources\">\n                <h3>{props.resources_header}</h3>\n                {props.resources_intro ? (\n                <div className=\"ResourcesIntro\" dangerouslySetInnerHTML={{__html: props.resources_intro}}></div>\n                ) : null}\n                <LinkList links={props.resources} />\n            </div>\n        );\n    }\n    return (\n        <div className=\"Response\">\n            <h2>{props.header}</h2>\n            {answer}\n            {resourceBlock}\n        </div>\n    );\n};\n\nexport default response;\n","\nimport ConditionsData from '../../data/conditions.json';\n\nclass Screening {\n\n    conditions = ConditionsData;\n\n    firstPass = {\n\n        simple: (answers, key) => {\n            return answers[key];\n        },\n\n        splitTypeByEssential: (answers, key) => {\n            if (answers.type === 'D') {\n                return 'E';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByTaxes: (answers, key) => {\n            if (answers.books === 'A' || answers.books === 'B') {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByCompliance: (answers, key) => {\n            if (answers.books === 'A') {\n                return 'C';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitLengthByYear: (answers, key) => {\n            if (answers['length of employment'] === 'C') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        splitLengthByMonths: (answers, key) => {\n            if (answers['length of employment'] === 'A') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        employedByYearAndHours: (answers, key) => {\n            if (answers['length of employment'] === 'C'\n                && answers['hours per year'] === 'B') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        // The hours-worked requirements for NYS are simple for domestic workers\n        // employed directly, but complicated for agencies, so we want to\n        // collapse this to something simple rather than checking agency vs not\n        // AND the time requirements.  The options are:\n        // * agency + any [A]\n        // * non-agency + 40+/week + 6+ months [E]\n        // * non-agency + anything else [N]\n        workForNYS: (answers, key) => {\n            if (answers['agency'] === 'A') {\n                return 'A';\n            }\n            if (\n                answers['hours per week'] === 'B' &&\n                (\n                    answers['length of employment'] === 'B' ||\n                    answers['length of employment'] === 'C'\n                )\n            ) {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        // For FFCRA, reasons break down as--\n        // * self-quarantine + school closed + any [B]\n        // * self-quarantine + any (but not school closed) [Q]\n        // * school closed + any (but not self-quarantine) [S]\n        // * family quarantine and/or stay at home [F]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForFFCRA: (answers, key, rolling) => {\n            if (\n                answers['self-quarantine'] === 'A' &&\n                answers['school closed'] === 'A'\n            ) {\n                return 'B';\n            }\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['family quarantine'] === 'A' ||\n                answers['stay at home'] === 'A'\n            ) {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['stay at home'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n        // For NYS, reasons break down as--\n        // * self-quarantine + any [Q]\n        // * family quarantine + any [F]\n        // * any combination of the other options [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForNYS: (answers, key, rolling) => {\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['family quarantine'] === 'A') {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        }\n\n    };\n\n    secondPass = {\n        simple: (answers, key, eligibility) => {\n            if (key in eligibility) {\n                return 'Y';\n            }\n            return 'N';\n        }\n    };\n\n    runFirstPass(answerKey) {\n        let byBenefit = {};\n        for (const benefit in this.conditions) {\n            let scenario = {};\n            for (const cond of this.conditions[benefit]) {\n                if (cond.pass !== 'first') {\n                    continue;\n                }\n                let k = cond.code;\n                let m = cond.method;\n                scenario[k] = this.firstPass[m](answerKey, k);\n            }\n            byBenefit[benefit] = scenario;\n        }\n        return byBenefit;\n    }\n\n    runSecondPass(answerKey, scenarios, eligibility) {\n        let newScenarios = {};\n        for (const benefit in this.conditions) {\n            let scenario = scenarios[benefit];\n            for (const cond of this.conditions[benefit]) {\n                if (cond.pass !== 'second') {\n                    continue;\n                }\n                let k = cond.code;\n                let m = cond.method;\n                scenario[k] = this.secondPass[m](answerKey, k, eligibility);\n            }\n            newScenarios[benefit] = scenario;\n        }\n        return newScenarios;\n    }\n\n}\n\nexport default new Screening();\n","\nimport ScenariosData from '../../data/scenarios.json';\n\nclass Eligibility {\n\n    eligibility = ScenariosData;\n\n    screen(scenarios) {\n        let eligibility = {};\n        for (let benefit in scenarios) {\n            let found = null;\n            const bdata = benefit in this.eligibility ? this.eligibility[benefit] : [];\n            for (let r of bdata) {\n                let match = true;\n                if (!r.enabled) {\n                    match = false;\n                } else {\n                    for (const c of Object.keys(r.conditions)) {\n                        if (scenarios[benefit][c] !== r.conditions[c]) {\n                            match = false;\n                        }\n                    }\n                }\n                if (match) {\n                    found = r;\n                    break;\n                }\n            }\n            if (found !== null) {\n                eligibility[benefit] = found;\n            }\n        }\n        return eligibility;\n    }\n\n}\n\nexport default new Eligibility();\n","\nimport Questions from '../Questions';\nimport Language from '../../utils/Language';\n\nclass ProcessText {\n\n    type_answer = null;\n    type_replacement = null;\n\n    setEmployeeType(typeAnswer) {\n        this.type_answer = typeAnswer;\n    }\n\n    findTypeReplacement() {\n        let r = Language.get('results_employee_type_unknown');\n        const letters = Questions.getAnswerLetters('type');\n        if (letters.includes(this.type_answer)) {\n            let k = 'results_employee_type_' + this.type_answer.toLowerCase();\n            let f = Language.get(k);\n            if (f) {\n                r = f;\n            }\n        }\n        this.type_replacement = r;\n    }\n\n    process(result_key) {\n        if (this.type_replacement === null) {\n            this.findTypeReplacement();\n        }\n        return Language.get(result_key, {\n            employee_type: this.type_replacement\n        });\n    }\n\n}\n\nexport default new ProcessText();\n","import Language from '../../utils/Language';\n\nimport ResourceData from '../../data/resources.json';\n\nclass Resources {\n\n    getBenefitResources(eligibility, benefit) {\n        const lang = Language.language_code;\n        let resources = [];\n        if (benefit in ResourceData.benefits) {\n            for (let r of ResourceData.benefits[benefit]) {\n                if (lang in r.link) {\n                    resources.push({\n                        text: r.text,\n                        link: r.link[lang]\n                    });\n                }\n            }\n        }\n        return resources;\n    }\n\n    getOtherResources() {\n        let resources = [];\n        const lang = Language.language_code;\n        for (let r of ResourceData.other) {\n            if (lang in r.link) {\n                resources.push({\n                    text: r.text,\n                    link: r.link[lang]\n                });\n            }\n        }\n        return resources;\n    }\n\n}\n\nexport default new Resources();\n","\nimport Screening from './results/Screening';\nimport Eligibility from './results/Eligibility';\nimport ProcessText from './results/ProcessText';\nimport Resources from './results/Resources';\nimport Language from '../utils/Language';\n\nimport BenefitsData from '../data/benefits.json';\n\nclass CollectResults {\n\n    benefits = BenefitsData;\n\n    compile(answerKey) {\n\n        // Calculate benefits\n        let scenarios = Screening.runFirstPass(answerKey);\n        let eligibility = Eligibility.screen(scenarios);\n        scenarios = Screening.runSecondPass(answerKey, scenarios, eligibility);\n        eligibility = Eligibility.screen(scenarios);\n\n        // Switch on employee type replacement\n        ProcessText.setEmployeeType(answerKey.type);\n\n        // Build text sections and resource links\n        let results = {\n            header: ProcessText.process('results_main_header'),\n            sections: this.getAllSections(eligibility, answerKey),\n            resources_header: ProcessText.process('results_resources_header'),\n            resources_intro: ProcessText.process('results_resources_intro'),\n            resources: this.getOtherResources(eligibility)\n        };\n\n        return results;\n    }\n\n    getAllSections(eligibility, answerKey) {\n        let sections = [];\n        \n        // Push all benfit responses into sections\n        const benefitSections = this.getBenefitSections(eligibility);\n\n        // If we found nothing, add the no-results text\n        if (benefitSections.length < 1) {\n            sections.push({\n                type: 'no_benefits',\n                header: null,\n                text: ProcessText.process('results_no_benefits')\n            });\n        }\n\n        // Otherwise, add an intro, placeholder, and the benefits\n        else {\n            sections.push({\n                header: null,\n                text: ProcessText.process('results_intro')\n            });\n            sections.push({\n                type: 'placeholder',\n                text: ProcessText.process('results_new_legislation_placeholder')\n            });\n            for (let section of benefitSections) {\n                sections.push(section);\n            }\n        }\n\n        // Do we need an on-the-books section?\n        let books = this.getBooksSection(answerKey);\n        if (books !== null) {\n            sections.push(books);\n        }\n\n        // Always add the retaliation warning section\n        sections.push({\n            type: 'warning',\n            header: ProcessText.process('results_retaliation_warning_header'),\n            text: ProcessText.process('results_retaliation_warning_text')\n        });\n\n        return sections;\n    }\n\n    getBenefitSections(eligibility) {\n        const benefitSections = [];\n        for (const benefit of this.benefits.order) {\n            const header = Language.get('results_section_header_' + benefit);\n            if (benefit in eligibility) {\n                const result = ProcessText.process(eligibility[benefit].lang_key_result);\n                const expanded = ProcessText.process(eligibility[benefit].lang_key_expanded);\n                const resources = Resources.getBenefitResources(eligibility, benefit);\n                let section = {\n                    type: 'benefit',\n                    header: header,\n                    text: result,\n                    read_more: expanded,\n                    resources_header: Language.get('results_section_resources_header'),\n                    resources: []\n                };\n                for (const r of resources) {\n                    section.resources.push({\n                        text: ProcessText.process(r.text),\n                        link: r.link\n                    });\n                }\n                benefitSections.push(section);\n            }\n        }\n        return benefitSections;\n    }\n\n    getBooksSection(answerKey) {\n        // totally in compliance; skip\n        if (answerKey.books === 'A') {\n            return null;\n        }\n\n        // partial compliance: message about insurance\n        if (answerKey.books === 'B') {\n            return {\n                header: ProcessText.process('results_off_the_books_partial_header'),\n                text: ProcessText.process('results_off_the_books_partial_text')\n            };\n        }\n\n        // no to on the books: message about getting on\n        return {\n            type: 'books',\n            header: ProcessText.process('results_off_the_books_header'),\n            text: ProcessText.process('results_off_the_books_text')\n        };\n    }\n\n    getOtherResources(eligibility) {\n        let links = [];\n        const resources = Resources.getOtherResources();\n        for (let r of resources) {\n            links.push({\n                text: ProcessText.process(r.text),\n                link: r.link\n            });\n        }\n        return links;\n    }\n\n}\n\nexport default new CollectResults();\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Response from '../../../components/BenefitsTool/Response/Response';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport CollectResults from '../../../logic/CollectResults';\nimport Language from '../../../utils/Language';\nimport Logger from '../../../utils/Logger';\n\nimport Questions from '../../../logic/Questions';\nimport CtaData from '../../../data/cta.json';\n\nconst CTA_TRACKING_CODE = '?utm_source=hih-covid-quiz';\n\nclass Results extends Component {\n\n    clickCTAButton = (link) => {\n        window.open(link + CTA_TRACKING_CODE, '_blank');\n    };\n\n    componentDidMount() {\n        Logger.setComponent('BenefitsTool/Results');\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        Logger.setComponent('BenefitsTool/Results');\n\n        const lang = {\n            restart_link_text: Language.get('util_restart_link_text'),\n            read_less: Language.get('util_read_less_link_text'),\n            read_more: Language.get('util_read_more_link_text')\n        };\n\n        const step = Questions.firstMissingStep(this.props.answers);\n        if (step !== null) {\n            const goto = step < 1 ? '/' : '/quiz/' + step;\n            return <Redirect to={goto} />;\n        }\n\n\n        const results = CollectResults.compile(this.props.answers);\n\n        let ctas = [];\n        if (CtaData.length > 3) {\n            for (let i = 0; i < 3; i++) {\n                const r = CtaData[Math.floor(Math.random() * CtaData.length)];\n                ctas.push(r);\n            }\n        } else {\n            ctas = CtaData;\n        }\n        const buttons = ctas.map((cta) => {\n            return {\n                classNames: [ 'CTAButton' ],\n                clicked: () => { this.clickCTAButton(cta.link); },\n                text: Language.get(cta.text),\n                title: Language.get(cta.title)\n            };\n        });\n\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: lang.restart_link_text\n            }\n        ];\n\n        return (\n            <div className=\"Results\">\n                <Response\n                    header={results.header}\n                    answerSections={results.sections}\n                    resources_header={results.resources_header}\n                    resources_intro={results.resources_intro}\n                    resources={results.resources}\n                    lang={lang} />\n                <Controls\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        answers: state.tool.answers\n    };\n};\n\nexport default connect(mapStateToProps)(withRouter(Results));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Basic.css';\n\nconst basic = (props) => {\n\n    return (\n        <div>\n            <h2>{props.lang.header}</h2>\n\n            <div className=\"BasicBody\" dangerouslySetInnerHTML={{__html: props.lang.body}}></div>\n\n            {props.back ? (\n            <div className=\"BackLink\" title={props.lang.back_title}>\n                <Link to={props.back}>{props.lang.back_link}</Link>\n            </div>\n            ) : null }\n        </div>\n    );\n};\n\nexport default basic;\n","import React, { Component } from 'react';\n\nimport Basic from '../../../components/BenefitsTool/Basic/Basic';\nimport Language from '../../../utils/Language';\nimport Logger from '../../../utils/Logger';\n\nclass Disclaimer extends Component {\n\n    componentDidMount() {\n        Logger.setComponent('BenefitsTool/Disclaimer');\n    }\n\n    render() {\n        Logger.setComponent('BenefitsTool/Disclaimer');\n        const lang = {\n            header: Language.get('disclaimer_header'),\n            body: Language.get('disclaimer_text'),\n            back_link: Language.get('util_back_to_quiz'),\n            back_title: Language.get('util_back_to_quiz')\n        };\n        return (\n            <Basic lang={lang} back=\"/\" />\n        );\n    }\n}\n\nexport default Disclaimer;\n","import React, { Component } from 'react';\n\nimport Basic from '../../../components/BenefitsTool/Basic/Basic';\nimport Language from '../../../utils/Language';\nimport Logger from '../../../utils/Logger';\n\nclass PrivacyPolicy extends Component {\n\n    componentDidMount() {\n        Logger.setComponent('BenefitsTool/PrivacyPolicy');\n    }\n\n    render() {\n        Logger.setComponent('BenefitsTool/PrivacyPolicy');\n        const lang = {\n            header: Language.get('privacy_policy_header'),\n            body: Language.get('privacy_policy_text'),\n            back_link: Language.get('util_back_to_quiz'),\n            back_title: Language.get('util_back_to_quiz')\n        };\n        return (\n            <Basic lang={lang} back=\"/\" />\n        );\n    }\n}\n\nexport default PrivacyPolicy;\n","\nconst ALL_PIXELS = [\n    { method: \"facebook\", pref_setting: \"allow_cookies_thirdparty\" }\n];\n\nclass Pixels {\n\n    invoke(prefs) {\n        for (const pixel of ALL_PIXELS) {\n            if (prefs && prefs[pixel.pref_setting]) {\n                this[pixel.method]();\n            }\n        }\n    }\n\n    facebook() {\n        window.fbq('consent', 'grant');\n        window.fbq('track', 'ViewContent');\n    }\n\n}\n\nexport default new Pixels();\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport CookieNotice from '../../components/BenefitsTool/CookieNotice/CookieNotice';\nimport Landing from './Landing/Landing';\nimport Quiz from './Quiz/Quiz';\nimport Confirmation from './Confirmation/Confirmation';\nimport Results from './Results/Results';\nimport Disclaimer from './Disclaimer/Disclaimer';\nimport PrivacyPolicy from './PrivacyPolicy/PrivacyPolicy';\nimport Language from '../../utils/Language';\nimport VisitorPrefs from '../../logic/VisitorPrefs';\nimport Pixels from '../../utils/Pixels';\nimport * as actions from '../../storage/redux/actions/index';\n\nclass BenefitsTool extends Component {\n\n    componentDidMount() {\n        this.props.onToolLoaded();\n    }\n\n    render() {\n\n        if (!this.props.loaded) {\n            return <Spinner />;\n        }\n\n        const lang = {\n            cookie_notice: {\n                close_alt: Language.get('util_cancel_alt_text'),\n                title: Language.get('cookie_notice_title'),\n                message_simple: Language.get('cookie_notice_message'),\n                configure_link_text: Language.get('cookie_notice_configure_link_text'),\n                reject_button_text: Language.get('cookie_notice_reject_button_text'),\n                accept_button_text: Language.get('cookie_notice_accept_button_text'),\n                message_detailed: Language.get('cookie_notice_message_detailed'),\n                save_button_text: Language.get('cookie_notice_save_button_text')\n            }\n        };\n\n        const settings = VisitorPrefs.options.map(opt => {\n            return { ...opt,\n                label: Language.get(opt.title_lang_key),\n                description: Language.get(opt.desc_lang_key)\n            };\n        });\n\n        Pixels.invoke(this.props.visitor_prefs);\n\n        return (\n            <div className=\"BenefitsTool\">\n                <Switch>\n                    <Route path=\"/quiz/:step\" component={Quiz} />\n                    <Route path=\"/quiz\" component={Quiz} />\n                    <Route path=\"/confirm\" component={Confirmation} />\n                    <Route path=\"/results\" component={Results} />\n                    <Route path=\"/disclaimer\" component={Disclaimer} />\n                    <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n                    <Route path=\"/\" component={Landing} />\n                </Switch>\n                <CookieNotice\n                    show={this.props.show_cookie_notice}\n                    settings={settings}\n                    prefs={this.props.visitor_prefs}\n                    saved={(prefs) => this.props.saveCookiePrefs(prefs) }\n                    lang={lang.cookie_notice} />\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        loaded: state.tool.loaded,\n        visitor_prefs: state.tool.visitor_prefs,\n        show_cookie_notice: state.tool.visitor_prefs === null ? true : false\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveCookiePrefs: (prefs) => dispatch(actions.cookiePrefsSave(prefs)),\n        onToolLoaded: () => dispatch(actions.loadToolData())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BenefitsTool);\n","import React from 'react';\n\nimport './AdminPage.css';\n\nconst adminPage = (props) => {\n    return (\n        <div className=\"AdminSection\">\n            {props.advanced ?\n                <p className=\"Warning\"><i>Should you be here?</i></p>\n            : null}\n            <h2>{props.title}</h2>\n            <p className=\"AdminBreadcrumbs\">{props.breadcrumbs.join(' > ')}</p>\n            <div className=\"AdminBody\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default adminPage;\n","import React from 'react';\nimport { DateTime } from 'luxon';\n\nimport Message from '../../UI/Message/Message';\nimport DeployData from '../../../data/deployment.json';\n\nconst deployMessage = (props) => {\n    const dt = DateTime.fromISO(DeployData.date_deployed);\n    const deployTime = dt.toLocaleString(DateTime.DATETIME_FULL);\n    return (\n        <Message type=\"info\"\n            text={'The current deployment is v' + DeployData.version_num + ', deployed ' + deployTime} />\n    );\n};\n\nexport default deployMessage;\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React, { useState } from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './Table.css';\n\nconst Table = (props) => {\n\n    const [ hiddenCols, hideCols ] = useState(true);\n\n    const col_class = (key) => {\n        return key.replace(/[^a-z\\-0-9]+/g, '-').replace(/-+/, '-');\n    };\n\n    let header_cells = props.cols.map((h) => {\n        let classes = [ col_class(h.key) ];\n        if (props.toggle_cols && props.toggle_cols[h.key]) {\n            classes.push('ToggleTarget');\n            if (hiddenCols) {\n                classes.push('ToggleHidden');\n            } else {\n                classes.push('ToggleShown');\n            }\n        }\n        return <th key={h.key} className={classes.join(' ')}>{h.title}</th>\n    });\n\n    let i = 0;\n    let body_rows = props.rows.map((r) => {\n        ++i;\n        let cells = [];\n        let clickable = props.clickable || {};\n        let snip = props.snip || {};\n        for (const h of props.cols) {\n            let classes = [ col_class(h.key) ];\n            let clicked = null;\n            let value = r[h.key];\n            let title = null;\n            if (h.key in clickable) {\n                clicked = () => { clickable[h.key](r, h.key); };\n                classes.push('Clickable');\n            }\n            if (h.key in snip) {\n                let full = value;\n                if (full && full.length > snip[h.key]) {\n                    let short = value.substring(0, snip[h.key]) + '...';\n                    value = short;\n                    title = full;\n                    classes.push('Snipped');\n                }\n            }\n            if (props.toggle_cols && props.toggle_cols[h.key]) {\n                classes.push('ToggleTarget');\n                if (hiddenCols) {\n                    classes.push('ToggleHidden');\n                } else {\n                    classes.push('ToggleShown');\n                }\n            }\n            cells.push(<td key={i}\n                className={classes.join(' ')}\n                onClick={clicked}\n                title={title}>{value}</td>);\n            ++i;\n        }\n        return <tr key={i}>{cells}</tr>;\n    });\n\n    let classes = [ 'AdminTable' ];\n    if (props.size === 'tiny') {\n        classes.push('TinyTable');\n    }\n    if (props.toggle_cols) {\n        classes.push('ToggleCols');\n    }\n\n    let toggler = null;\n    if (props.toggle_cols) {\n        let icon = 'far fa-eye-slash';\n        let text = 'collapse columns';\n        if (props.toggle_collapse_title) {\n            text = props.toggle_collapse_title;\n        }\n        if (hiddenCols) {\n            icon = 'far fa-eye';\n            text = 'expand columns';\n            if (props.toggle_expand_title) {\n                text = props.toggle_expand_title;\n            }\n        }\n        toggler = (\n            <div className=\"ViewToggle\">\n                <IconButton icon={icon}\n                    clicked={() => hideCols(!hiddenCols)}\n                    append_text={text} />\n            </div>\n        );\n    }\n\n    return (\n        <div className={classes.join(' ')}>\n            {toggler}\n            <table>\n                <thead>\n                    <tr>\n                        {header_cells}\n                    </tr>\n                </thead>\n                <tbody>\n                    {body_rows}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Table;\n","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { DateTime } from 'luxon';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Table from '../../../../components/UI/Table/Table';\nimport Message from '../../../../components/UI/Message/Message';\nimport IconButton from '../../../../components/UI/IconButton/IconButton';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nimport './List.css';\n\nclass AdminAdvancedList extends Component {\n\n    cols = [\n        { key: 'version_num', title: 'Version Number' },\n        { key: 'deploy_date', title: 'Created At' },\n        { key: 'download', title: 'Download' },\n        { key: 'load', title: 'Revert' },\n        { key: 'compare', title: 'Compare' },\n    ];\n\n    refresh = () => {\n        this.props.fetchDeploys();\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Advanced/List');\n        this.props.fetchDeploys();\n    }\n\n    render() {\n        Logger.setComponent('Admin/Advanced/List');\n        let body = null;\n        if (this.props.loaded) {\n            const rows = this.props.deploys.map(item => {\n                const dt = DateTime.fromISO(item.date_deployed);\n                const formatted = dt.toLocaleString(DateTime.DATETIME_SHORT);\n                const url = Api.getDeployDownloadUrl(\n                    item.version_num,\n                    item.uuid,\n                    this.props.token);\n                const fname = 'hnct-' + item.version_num + '.zip';\n                const download = (\n                    <a className=\"DownloadDeploy\" download={fname} href={url}>\n                        <i className=\"fas fa-download\" title=\"Download this version\"></i>\n                    </a>\n                );\n                const load = (\n                    <Link to={'/admin/advanced/load/' + item.id}>\n                        <i className=\"fas fa-history\" title=\"Revert to this version\"></i>\n                    </Link>\n                );\n                const compare = (\n                    <Link to={'/admin/advanced/compare/' + item.version_num + '/admin'}>\n                        <i className=\"fas fa-balance-scale-right\" title=\"Compare to the current state of the admin\"></i>\n                    </Link>\n                );\n                return {\n                    id: item.deployment_id,\n                    version_num: item.version_num,\n                    uuid: item.uuid,\n                    deploy_date: formatted,\n                    download: download,\n                    load: load,\n                    compare: compare,\n                };\n            });\n            body = (\n                <div className=\"DeployList\">\n                    <div className=\"RefreshWrapper\">\n                    <IconButton icon_type=\"refresh\" clicked={this.refresh} />\n                    </div>\n                    <Table rows={rows} cols={this.cols} />\n                </div>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Deployments\"\n                breadcrumbs={['Admin', 'Advanced', 'Deployments']}\n                advanced={true}>\n                <DeployMessage />\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.admin.auth.token,\n        loaded: state.admin.deploys.list.loaded,\n        error: state.admin.deploys.list.error,\n        deploys: state.admin.deploys.list.data,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchDeploys: () => dispatch(actions.loadDeployments())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminAdvancedList));\n","import React from 'react';\n\nimport Spinner from '../Spinner/Spinner';\n\nimport './ProcessingButton.css';\n\nconst processingButton = (props) => {\n    let classes = [ 'ProcessingButton' ];\n    let content = null;\n    let doWork = props.clicked;\n    let disabled = false;\n    if (props.working) {\n        classes.push('Working');\n        content = <Spinner color=\"gray-flipped\" />;\n        doWork = null;\n    } else {\n        content = props.text;\n    }\n    if (props.disabled) {\n        classes.push('Disabled');\n        disabled = true;\n    }\n    if (props.size === 'large') {\n        classes.push('LargeSize');\n    }\n    return (\n        <div className={classes.join(' ')} onClick={doWork} disabled={disabled}>{content}</div>\n    );\n};\n\nexport default processingButton;\n","import React from 'react';\n\nimport './RawTextBox.css';\n\nconst rawTextBox = (props) => {\n    let classes = [ 'RawTextBox' ];\n    let rawtext = null;\n    if (!props.contents) {\n        classes.push('Empty');\n        rawtext = props.emptytext || 'empty';\n    } else {\n        rawtext = props.contents;\n    }\n    return (\n        <div className={classes.join(' ')}>\n            {props.title ?\n                <h6 className=\"RawTextBoxTitle\">{props.title}</h6>\n            : null}\n            <code>\n            {rawtext}\n            </code>\n        </div>\n    );\n};\n\nexport default rawTextBox;\n","import React from 'react';\n\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\nimport RawTextBox from '../../UI/RawTextBox/RawTextBox';\nimport Message from '../../UI/Message/Message';\n\nimport './FunctionBox.css';\n\nconst functionBox = (props) => {\n    let emptytext = null;\n    if (props.working) {\n        emptytext = 'processing...';\n    } else if (props.emptyText) {\n        emptytext = props.emptyText;\n    }\n    let boxContents = null;\n    if (props.results) {\n        boxContents = props.results;\n    }\n    return (\n        <div className=\"FunctionBox\">\n            <h3>{props.title}</h3>\n            <p className=\"Explainer\">{props.explainer}</p>\n            <ProcessingButton\n                size=\"large\"\n                working={props.working}\n                clicked={props.clicked}\n                text={props.buttonText} />\n            {props.error ?\n                <Message type=\"error\" text={props.error} />\n            : props.successBox}\n            <RawTextBox contents={boxContents} emptytext={emptytext} />\n        </div>\n    );\n};\n\nexport default functionBox;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nimport './Save.css';\n\nclass AdminAdvancedSave extends Component {\n\n    deploy = () => {\n        this.props.saveDeploy();\n    }\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Advanced/Save');\n    }\n\n    render() {\n        Logger.setComponent('Admin/Advanced/Save');\n        let successBox = null;\n        if (this.props.download_info) {\n            const vnum = this.props.download_info.version;\n            const uuid = this.props.download_info.uuid;\n            const url = Api.getDeployDownloadUrl(vnum, uuid, this.props.token);\n            const fname = 'hnct-' + vnum + '.zip';\n            const downloadLink = (\n                <a className=\"DownloadDeploy\" download={fname} href={url}>\n                    <i className=\"fas fa-download\" title=\"download\"></i>\n                </a>\n            );\n            successBox = <Message type=\"success\"\n                text=\"Download the deploy here:\"\n                custom_button={downloadLink} />;\n        }\n\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Save Deploy\"\n                breadcrumbs={['Admin', 'Advanced', 'Save Deploy']}\n                advanced={true}>\n                <DeployMessage />\n                <FunctionBox\n                    working={this.props.processing}\n                    emptyText=\"Click Go to deploy all changes...\"\n                    results={this.props.data}\n                    title=\"Wrap all changes from the admin into a new deployment\"\n                    explainer=\"This will create a zip file you can download containing the new versions of the data files to be commited and deployed\"\n                    clicked={this.deploy}\n                    buttonText=\"Go\"\n                    error={this.props.error}\n                    successBox={successBox}\n                    />\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        processing: state.admin.deploys.save.processing,\n        error: state.admin.deploys.save.error,\n        data: state.admin.deploys.save.data,\n        download_info: state.admin.deploys.save.info,\n        token: state.admin.auth.token\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveDeploy: () => dispatch(actions.saveNewDeployment()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminAdvancedSave));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DateTime } from 'luxon';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminAdvancedLoad extends Component {\n\n    initDeploys = () => {\n        this.props.overloadDeploy(this.getId());\n    }\n\n    refresh = () => {\n        this.props.fetchDeploy(this.getId());\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Advanced/Load');\n        this.props.fetchDeploy(this.getId());\n    }\n\n    getId() {\n        if (this.props.match.params.id) {\n            return this.props.match.params.id;\n        }\n        return null;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Advanced/Load');\n        let body = null;\n        if (!this.props.fetch_loaded) {\n            body = (\n                <Aux>\n                    {this.props.fetch_error ?\n                        <Message type=\"error\" text={this.props.fetch_error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n\n        } else {\n            let functionTitle = 'Replace the admin database with version ' + this.props.deployment.version_num;\n            let dt = DateTime.fromISO(this.props.deployment.date_deployed);\n            let formatted = dt.toFormat('LLL dd');\n            let functionExplainer = 'This will destroy any changes that have been made in the admin since ' + formatted;\n            body = (\n                <FunctionBox\n                    working={this.props.processing}\n                    emptyText=\"Click Go to re-intitalize the translations...\"\n                    results={this.props.data}\n                    title={functionTitle}\n                    explainer={functionExplainer}\n                    clicked={this.initDeploys}\n                    buttonText=\"Go\"\n                    error={this.props.error}\n                    />\n            );\n        }\n\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Load Deploy\"\n                breadcrumbs={['Admin', 'Advanced', 'Load Deploy']}\n                advanced={true}>\n                <DeployMessage />\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        fetch_loaded: state.admin.deploys.fetch.loaded,\n        fetch_error: state.admin.deploys.fetch.error,\n        deployment: state.admin.deploys.fetch.data,\n        processing: state.admin.deploys.overload.processing,\n        error: state.admin.deploys.overload.error,\n        data: state.admin.deploys.overload.data,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchDeploy: (id) => dispatch(actions.loadDeployment(id)),\n        overloadDeploy: (id) => dispatch(actions.overloadDeployment(id)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminAdvancedLoad));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminAdvancedReplace extends Component {\n\n    replaceDatabase = () => {\n        this.props.replaceDatabase();\n    }\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Advanced/Replace');\n    }\n\n    render() {\n        Logger.setComponent('Admin/Advanced/Replace');\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Replace Database\"\n                breadcrumbs={['Admin', 'Advanced', 'Replace Database']}\n                advanced={true}>\n                <DeployMessage />\n                <FunctionBox\n                    working={this.props.processing}\n                    emptyText=\"Click Go to replace the database...\"\n                    results={this.props.data}\n                    title=\"Replace the admin database with the current files and create a new deployment\"\n                    explainer=\"This will destroy any changes that have been made in the admin that have not been saved to a deployment\"\n                    clicked={this.replaceDatabase}\n                    buttonText=\"Go\"\n                    error={this.props.error}\n                    />\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        processing: state.admin.deploys.replace.processing,\n        error: state.admin.deploys.replace.error,\n        data: state.admin.deploys.replace.data,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        replaceDatabase: () => dispatch(actions.replaceDatabaseWithCurrentDeployment()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminAdvancedReplace));\n","import React from 'react';\n\nimport IconButton from '../../UI/IconButton/IconButton';\n\nimport './CompareForm.css';\n\nconst CompareForm = (props) => {\n    const buttons = [];\n    let selectA = null;\n    let selectB = null;\n    let statement = null;\n\n    let titleA = null;\n    let titleB = null;\n    if (props.presets !== null) {\n        for (const opt of props.options) {\n            if (opt.value === props.presets.a) {\n                titleA = opt.text;\n            }\n            if (opt.value === props.presets.b) {\n                titleB = opt.text;\n            }\n        }\n    }\n\n    if (props.controls) {\n        const options = props.options.map(option => {\n            return (\n                <option key={option.value} value={option.value}>\n                    {option.text}\n                </option>\n            );\n        });\n        const empty = <option value=\"\">- select -</option>;\n        const valA = props.current && props.current.a ? props.current.a : '';\n        const valB = props.current && props.current.b ? props.current.b : '';\n        selectA = (\n            <select name=\"sideA\" onChange={props.changedA} value={valA}>\n                {empty}\n                {options}\n            </select>\n        );\n        selectB = (\n            <select name=\"sideB\" onChange={props.changedB} value={valB}>\n                {empty}\n                {options}\n            </select>\n        );\n        buttons.push(\n            <IconButton key=\"compare\"\n                icon=\"fas fa-balance-scale-right\"\n                title=\"Compare\"\n                append_text=\"Compare\"\n                clicked={props.submit} />\n        );\n        statement = <p>Select two versions to compare:</p>;\n    } else {\n        if (props.presets !== null) {\n            selectA = <h5>{titleA}</h5>;\n            selectB = <h5>{titleB}</h5>;\n        }\n    }\n\n    if (props.presets !== null) {\n        statement = <p>Currently comparing <strong>{titleA}</strong> to <strong>{titleB}</strong>...</p>;\n        buttons.push(\n            <IconButton key=\"reset\"\n                icon_type=\"refresh\"\n                title=\"Reset\"\n                append_text=\"Reset\"\n                clicked={props.reset} />\n        );\n    }\n\n    return (\n        <div className=\"CompareForm\">\n            <div className=\"Statement\">\n                {statement}\n            </div>\n            <div className=\"Side SideA\">\n                {selectA}\n            </div>\n            <div className=\"Side SideB\">\n                {selectB}\n            </div>\n            <div className=\"Controls\">\n                {buttons}\n            </div>\n        </div>\n    );\n};\n\nexport default CompareForm;\n","import React, { useState } from 'react';\n\nimport './Accordion.css';\n\nconst Accordion = (props) => {\n    const childIndex = props.children.map((el, i) => {\n        return {\n            key: el.key || i,\n            title: el.props.title || 'Item #' + i,\n\t\t\tdisabled: el.props.disabled || false,\n        };\n    });\n    const startval = props.init || null;\n    const [currentItem, setCurrentItem] = useState(startval);\n    return (\n        <div className=\"AccordionWrapper\">\n            {props.children.map((el, i) => {\n                const idx = childIndex[i];\n\t\t\t\tlet classes = [ 'ItemWrapper' ];\n                let click = null;\n                let body = null;\n\n                if (currentItem === idx.key) {\n                    classes.push('ItemActive');\n                    click = () => setCurrentItem(null);\n                    body = (\n                        <div className=\"ItemBody\" key=\"body\">\n                            {el}\n                        </div>\n                    );\n                } else {\n                    if (idx.disabled) {\n                        classes.push('ItemDisabled');\n                    } else {\n                        click = () => setCurrentItem(idx.key);\n                    }\n                }\n                return (\n                    <div className={classes.join(' ')} key={idx.key}>\n                        <div className=\"ItemHandle\" key=\"handle\" onClick={click}>\n                            {idx.title}\n                        </div>\n                        {body}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Accordion;\n","import React from 'react';\n\nconst AccordionItem = (props) => {\n    return (\n        <div className=\"AccordionItem\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default AccordionItem;\n","import React from 'react';\nimport JsonView from 'react-json-view';\n\nimport './JsonBlock.css';\n\nconst jsonBlock = (props) => {\n    let view = null;\n    if (props.collapse) {\n        view = <JsonView src={props.data} collapsed={true} name={props.root || 'root'} />;\n    } else {\n        const style = { color: props.color || 'slategray' };\n        view = <pre style={style}>{JSON.stringify(props.data, null, 2)}</pre>;\n    }\n    let classes = [ 'JsonBlock' ];\n    if (props.addClasses) {\n        for (const c of props.addClasses) {\n            classes.push(c);\n        }\n    }\n    return (\n        <div className={classes.join(' ')}>\n            {view}\n        </div>\n    );\n};\n\nexport default jsonBlock;\n","import React from 'react';\n\nimport JsonBlock from '../../../UI/JsonBlock/JsonBlock';\n\nimport './RawData.css';\n\nconst RawData = (props) => {\n    return (\n        <div className=\"RawData\">\n            <div className=\"RawTitle\">\n                <span>{props.title}</span>\n                <button className=\"mockLink CloseRaw\" onClick={props.closed}>(close)</button>\n            </div>\n            <div className=\"RawBody\">\n                <JsonBlock data={props.data} color={props.color} />\n            </div>\n        </div>\n    );\n};\n\nexport default RawData;\n","const md = require('markdown-it')();\n\nexport default md;\n","import React, { useState } from 'react';\n\nimport Markdown from '../../../utils/Markdown';\n\nimport './TranslatedText.css';\n\nconst TranslatedText = (props) => {\n\n    const [showKey, setShowKey] = useState(false);\n\n    if (props.lang_key in props.translations\n        && props.translations[props.lang_key] !== null\n        && props.translations[props.lang_key].length > 0) {\n        const classes = [ 'TranslatedText' ];\n        if (showKey) {\n            classes.push('ShowKey');\n        } else {\n            classes.push('HideKey');\n        }\n        const english = props.translations[props.lang_key];\n        let elemEn = null;\n        if (props.markdown) {\n            const markup = Markdown.render(english || '');\n            elemEn = <div className=\"TranslationEn\" key=\"en\" dangerouslySetInnerHTML={{__html: markup}}></div>;\n            classes.push('Markdown');\n        } else {\n            elemEn = <span className=\"TranslationEn\" key=\"en\">{english}</span>;\n        }\n        return (\n            <div className={classes.join(' ')} onClick={() => showKey ? setShowKey(false) : setShowKey(true)}>\n                {elemEn}\n                <span className=\"TranslationKey\" key=\"key\">{props.lang_key}</span>\n            </div>\n        );\n    } else {\n        return <div className=\"TranslatedText KeyOnly\">{props.lang_key}</div>;\n    }\n\n};\n\nexport default TranslatedText;\n","import React from 'react';\n\nimport TranslatedText from '../components/Admin/TranslatedText/TranslatedText';\n\n// These are all for the section Admin > Deploy > Compare\n\nexport const getMatchType = (pkey, section) => {\n    if (section === null) {\n        return false;\n    }\n    if (!(pkey in section)) {\n        return false;\n    }\n    if ('match' in section[pkey] && 'diff' in section[pkey]) {\n        return 'complexDiff';\n    }\n    if (section[pkey].a_version === null) {\n        return 'aMissing';\n    }\n    if (section[pkey].b_version === null) {\n        return 'bMissing';\n    }\n    return 'simpleDiff';\n};\n\nexport const complexOrSimpleData = (props, pkey = null) => {\n    let mydata = null;\n\n    // Passed directly (for a_version/b_version)\n    if ('data' in props) {\n        mydata = props.data;\n\n    // Need to pull from data (for partial diff)\n    } else if ('section' in props) {\n        // Fake spec+order objects\n        if (Array.isArray(props.section)) {\n            if (pkey !== null) {\n                for (const elem of props.section) {\n                    if (pkey in elem && elem[pkey] === props.dataKey) {\n                        mydata = elem;\n                        break;\n                    }\n                }\n            }\n        } else if ('dataKey' in props) {\n            // Spec+order objects\n            if ('spec' in props.section && props.dataKey in props.section.spec) {\n                mydata = props.section.spec[props.dataKey];\n\n            // Simple objects\n            } else if (props.dataKey in props.section) {\n                mydata = props.section[props.dataKey];\n            }\n        }\n    }\n\n    // Partial diff: highlight differences\n    let highlight = null;\n    if ('highlight' in props) {\n        if ('match' in props.highlight && 'diff' in props.highlight) {\n            highlight = props.highlight.diff;\n        }\n    }\n\n    return [ mydata, highlight ];\n};\n\nexport const getBenefitTitle = (code, benefitsA, benefitsB) => {\n    let title = code;\n    if (code in benefitsA && code in benefitsB) {\n        const atitle = benefitsA[code].abbreviation;\n        const btitle = benefitsB[code].abbreviation;\n        if (!atitle || !btitle) {\n            if (!atitle && !btitle) {\n                // keep code\n            } else if (!atitle) {\n                title = btitle;\n            } else {\n                title = atitle;\n            }\n        } else if (atitle === btitle) {\n            title = atitle;\n        } else {\n            title = atitle + ' / ' + btitle;\n        }\n    } else if (code in benefitsB) {\n        title = benefitsB[code].abbreviation;\n    } else if (code in benefitsA) {\n        title = benefitsA[code].abbreviation;\n    }\n    return title;\n};\n\nexport const normalizeListDiff = (rawDiff, dataA, dataB, listKey) => {\n    let diff = rawDiff;\n    if (!('diff' in rawDiff)) {\n        diff = {\n            order_match: false,\n            order_diff: {\n                a_version: [],\n                b_version: [],\n            },\n            match: false,\n            diff: {}\n        };\n        const av = rawDiff.a_version;\n        const bv = rawDiff.b_version;\n        let list = [];\n        let marker = 'a_version';\n        if (av === null && bv !== null) {\n            list = dataB;\n            marker = 'b_version';\n        } else if (bv === null && av !== null) {\n            list = dataA;\n        }\n        if (!Array.isArray(list)) {\n            list = [ list ];\n        }\n        for (const item of list) {\n            diff.order_diff[marker].push(item[listKey]);\n            diff.diff[item[listKey]] = {\n                a_version: null,\n                b_version: null,\n            };\n            diff.diff[item[listKey]][marker] = item;\n        }\n    }\n    return diff;\n};\n\nexport const getTranslationWrapper = (full, markdown = false) => {\n    let lang_text = {};\n    if ('lang_en' in full && typeof full.lang_en === 'object') {\n        lang_text = full.lang_en;\n    }\n    const wrap = (lang_key) => {\n        return <TranslatedText lang_key={lang_key} translations={lang_text} markdown={markdown} />\n    };\n    return wrap;\n};\n\nexport const getPairWrapper = (highlight, mydata) => {\n    const wrap = (pair) => {\n        const mt = getMatchType(pair.key, highlight);\n        if (mt) {\n            pair.matchType = mt;\n        }\n        if (!(pair.key in mydata)) {\n            pair.missing = true;\n        }\n        return pair;\n    };\n    return wrap;\n};\n\n","import React, { useState } from 'react';\n\nimport RawData from '../RawData/RawData';\nimport { getMatchType } from '../../../../utils/comparisons';\n\nimport './BasicDiff.css';\n\nconst BasicDiff = (props) => {\n\n    const [openItem, setOpenItem] = useState(null);\n    const [showRaw, setShowRaw] = useState(null);\n\n    let content = null;\n    if (showRaw === 'rawA') {\n        content = <RawData\n            title={props.titles.a}\n            color=\"red\"\n            closed={() => setShowRaw(null)}\n            data={props.dataA}\n            />;\n\n    } else if (showRaw === 'rawB') {\n        content = <RawData\n            title={props.titles.b}\n            color=\"green\"\n            closed={() => setShowRaw(null)}\n            data={props.dataB}\n            />;\n\n    } else {\n\n        let lines = [];\n\n        // Table Header\n        lines.push(\n            <div className=\"DiffLine HeaderOnly\" key=\"--header-only\">\n                <div className=\"ASide\">\n                    <div className=\"SideTitle\">\n                        <span>{props.titles.a}</span>\n                        <button className=\"mockLink OpenRaw\" onClick={() => setShowRaw('rawA')}>(raw)</button>\n                    </div>\n                </div>\n                <div className=\"BSide\">\n                    <div className=\"SideTitle\">\n                        <span>{props.titles.b}</span>\n                        <button className=\"mockLink OpenRaw\" onClick={() => setShowRaw('rawB')}>(raw)</button>\n                    </div>\n                </div>\n            </div>\n        );\n\n        // Is there an order match/diff?\n        if ('order_match' in props.cmp && 'order_diff' in props.cmp) {\n            const orderA = props.cmp.order_diff.a_version;\n            const orderB = props.cmp.order_diff.b_version;\n\n            const key = '_order_diff';\n            let clicked = null;\n            let classes = ['DiffLine', 'OrderDiff'];\n            if (props.cmp.order_match === false) {\n                if (Array.isArray(orderA) && orderA.length < 1) {\n                    classes.push('AMissing');\n                } else if (Array.isArray(orderB) && orderB.length < 1) {\n                    classes.push('BMissing');\n                } else {\n                    classes.push('Diff');\n                }\n            }\n            if (key === openItem) {\n                classes.push('Open');\n                clicked = () => setOpenItem(null);\n            } else {\n                classes.push('Closed');\n                clicked = () => setOpenItem(key);\n            }\n\n            let handleClasses = [...classes];\n            handleClasses.push('HandleRow');\n            lines.push(\n                <div className={handleClasses.join(' ')} key={key + '-handle'} onClick={clicked}>\n                    <div className=\"ASide\">\n                        <div className=\"SideTitle\">\n                            Order of keys\n                        </div>\n                    </div>\n                    <div className=\"BSide\">\n                        <div className=\"SideTitle\">\n                            Order of keys\n                        </div>\n                    </div>\n                </div>\n            );\n\n            const order_a = props.cmp.order_diff.a_version.map((code, idx) =>\n                <li key={idx}>{code}</li>\n            );\n            const order_b = props.cmp.order_diff.b_version.map((code, idx) =>\n                <li key={idx}>{code}</li>\n            );\n\n            let bodyClasses = [...classes];\n            bodyClasses.push('BodyRow');\n            lines.push(\n                <div className={bodyClasses.join(' ')} key={key + '-body'}>\n                    <div className=\"ASide\">\n                        <ul>\n                            {order_a}\n                        </ul>\n                    </div>\n                    <div className=\"BSide\">\n                        <ul>\n                            {order_b}\n                        </ul>\n                    </div>\n                </div>\n            );\n        }\n\n        // Loop through and build row sets (one for the key, one for the body)\n\n        let keys = Object.keys(props.cmp.diff);\n        keys.sort();\n\n        for (const key of keys) {\n            const item = props.cmp.diff[key];\n\n            let classes = [ 'DiffLine' ];\n            let clicked = null;\n            let handleA = null;\n            let handleB = null;\n            let bodyA = null;\n            let bodyB = null;\n\n            const matchType = getMatchType(key, props.cmp.diff);\n            if (matchType === 'aMissing') {\n                classes.push('AMissing');\n                handleA = <span>empty</span>;\n                handleB = key;\n            } else if (matchType === 'bMissing') {\n                classes.push('BMissing');\n                handleA = key;\n                handleB = <span>empty</span>;\n            } else {\n                classes.push('Diff');\n                handleA = key;\n                handleB = key;\n            }\n\n            if (key === openItem) {\n                classes.push('Open');\n                clicked = () => setOpenItem(null);\n                if (matchType === 'complexDiff') {\n                    bodyA = <props.interiorComponent dataKey={key} section={props.dataA} highlight={item} full={props.full.dataA} />;\n                    bodyB = <props.interiorComponent dataKey={key} section={props.dataB} highlight={item} full={props.full.dataB} />;\n                } else {\n                    if (item.a_version !== null) {\n                        bodyA = <props.interiorComponent dataKey={key} data={item.a_version} full={props.full.dataA} />;\n                    }\n                    if (item.b_version !== null) {\n                        bodyB = <props.interiorComponent dataKey={key} data={item.b_version} full={props.full.dataB} />;\n                    }\n                }\n            } else {\n                classes.push('Closed');\n                clicked = () => setOpenItem(key);\n            }\n\n            let handleClasses = [...classes];\n            handleClasses.push('HandleRow');\n            lines.push(\n                <div className={handleClasses.join(' ')} key={key + '-handle'} onClick={clicked}>\n                    <div className=\"ASide\">\n                        {handleA}\n                    </div>\n                    <div className=\"BSide\">\n                        {handleB}\n                    </div>\n                </div>\n            );\n\n            let bodyClasses = [...classes];\n            bodyClasses.push('BodyRow');\n            lines.push(\n                <div className={bodyClasses.join(' ')} key={key + '-body'}>\n                    <div className=\"ASide\">\n                        {bodyA}\n                    </div>\n                    <div className=\"BSide\">\n                        {bodyB}\n                    </div>\n                </div>\n            );\n\n            content = (\n                <div className=\"DiffTable\">\n                    {lines}\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className=\"BasicDiff\">\n            {content}\n        </div>\n    );\n};\n\nexport default BasicDiff;\n","import React, { useState } from 'react';\n\nimport './Tabs.css';\n\nconst UiTabs = (props) => {\n    const childIndex = props.children.map((el, i) => {\n        return {\n            key: el.key || i,\n            title: el.props.title || 'Tab #' + i\n        };\n    });\n    const startval = props.init || childIndex[0].key;\n    const [currentTab, setCurrentTab] = useState(startval);\n    return (\n        <div className=\"TabsWrapper\">\n            <div className=\"TabBar\" key=\"bar\">\n                {childIndex.map(idx => {\n                    let c = [ 'TabTitle' ];\n                    if (idx.key === currentTab) {\n                        c.push('ActiveTab');\n                    }\n                    return (\n                        <div className={c.join(' ')} onClick={() => setCurrentTab(idx.key)} key={idx.key}>\n                            {idx.title}\n                        </div>\n                    );\n                })}\n            </div>\n            <div className=\"TabsBody\" key=\"body\">\n            {props.children.map((el, i) => {\n                const idx = childIndex[i];\n                if (currentTab === idx.key) {\n                    return (\n                        <div className=\"TabWrapper\" key={idx.key}>\n                            {el}\n                        </div>\n                    );\n                } else {\n                    return null;\n                }\n            })}\n            </div>\n        </div>\n    );\n};\n\nexport default UiTabs;\n","import React from 'react';\n\nconst uiTab = (props) => {\n    return (\n        <div className=\"TabInterior\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default uiTab;\n","import React from 'react';\n\nimport Tabs from '../../../UI/Tabs/Tabs';\nimport Tab from '../../../UI/Tabs/Tab/Tab';\nimport BasicDiff from '../BasicDiff/BasicDiff';\nimport { getBenefitTitle, normalizeListDiff } from '../../../../utils/comparisons';\n\nimport './BenefitsDiff.css';\n\nconst benefitsDiff = (props) => {\n    let sections = [];\n    if ('diff' in props.cmp && typeof props.cmp.diff === 'object') {\n        sections = Object.keys(props.cmp.diff).sort();\n    }\n    let tabs = [];\n    const benefitsA = 'benefits' in props.full.dataA ? props.full.dataA.benefits.spec : {};\n    const benefitsB = 'benefits' in props.full.dataB ? props.full.dataB.benefits.spec : {};\n    for (const code of sections) {\n        const title = getBenefitTitle(code, benefitsA, benefitsB);\n        const dataA = props.dataA && code in props.dataA ? props.dataA[code] : [];\n        const dataB = props.dataB && code in props.dataB ? props.dataB[code] : [];\n        const rawDiff = props.cmp.diff[code];\n        const diff = normalizeListDiff(rawDiff, dataA, dataB, props.listKey);\n        tabs.push(\n            <Tab key={code} title={title}>\n                <h3>{title}</h3>\n                <BasicDiff\n                    full={props.full}\n                    cmp={diff}\n                    dataA={dataA}\n                    dataB={dataB}\n                    titles={props.titles}\n                    interiorComponent={props.interiorComponent} />\n            </Tab>\n        );\n    }\n    return (\n        <div className=\"BenefitsDiff\">\n            <Tabs>\n              {tabs}\n            </Tabs>\n        </div>\n    );\n};\n\nexport default benefitsDiff;\n","import React from 'react';\n\nimport Tabs from '../../../UI/Tabs/Tabs';\nimport Tab from '../../../UI/Tabs/Tab/Tab';\nimport BasicDiff from '../BasicDiff/BasicDiff';\nimport { getBenefitTitle, normalizeListDiff } from '../../../../utils/comparisons';\n\nimport './ResourcesDiff.css';\n\nconst resourcesDiff = (props) => {\n\n    let sections = [];\n    if ('diff' in props.cmp && typeof props.cmp.diff === 'object' &&\n        'benefits' in props.cmp.diff && typeof props.cmp.diff.benefits === 'object' &&\n        'diff' in props.cmp.diff.benefits && typeof props.cmp.diff.benefits.diff === 'object') {\n        sections = Object.keys(props.cmp.diff.benefits.diff).sort();\n    }\n\n    let tabs = [];\n    const benefitsA = 'benefits' in props.full.dataA ? props.full.dataA.benefits.spec : {};\n    const benefitsB = 'benefits' in props.full.dataB ? props.full.dataB.benefits.spec : {};\n    for (const code of sections) {\n        const title = getBenefitTitle(code, benefitsA, benefitsB);\n        const dataA = props.dataA && code in props.dataA.benefits ? props.dataA.benefits[code] : [];\n        const dataB = props.dataB && code in props.dataB.benefits ? props.dataB.benefits[code] : [];\n        const rawDiff = props.cmp.diff.benefits.diff[code];\n        const diff = normalizeListDiff(rawDiff, dataA, dataB, props.listKey);\n        tabs.push(\n            <Tab key={code} title={title}>\n                <h3>{title}</h3>\n                <BasicDiff\n                    full={props.full}\n                    cmp={diff}\n                    dataA={dataA}\n                    dataB={dataB}\n                    titles={props.titles}\n                    interiorComponent={props.interiorComponent} />\n            </Tab>\n        );\n    }\n\n    if ('diff' in props.cmp && typeof props.cmp.diff === 'object' &&\n        'other' in props.cmp.diff && typeof props.cmp.diff.other === 'object') {\n        const title = 'Other';\n        const dataA = props.dataA && 'other' in props.dataA ? props.dataA.other : [];\n        const dataB = props.dataB && 'other' in props.dataB ? props.dataB.other : [];\n        const rawDiff = props.cmp.diff.other;\n        const diff = normalizeListDiff(rawDiff, dataA, dataB);\n        tabs.push(\n            <Tab key=\"other\" title={title}>\n                <h3>{title}</h3>\n                <BasicDiff\n                    full={props.full}\n                    cmp={diff}\n                    dataA={dataA}\n                    dataB={dataB}\n                    titles={props.titles}\n                    interiorComponent={props.interiorComponent} />\n            </Tab>\n        );\n    }\n\n    return (\n        <div className=\"ResourcesDiff\">\n            <Tabs>\n              {tabs}\n            </Tabs>\n        </div>\n    );\n\n};\n\nexport default resourcesDiff;\n","import React from 'react';\n\nimport Aux from '../../../../hoc/Aux/Aux';\n\nimport './SimpleKeys.css';\n\nconst simpleKeys = (props) => {\n\n    const pairs = props.pairs.map(pair => {\n        let c = [];\n        if ('matchType' in pair) {\n            c.push('Highlight');\n            if (pair.matchType === 'aMissing') {\n                c.push('MissingA');\n            } else if (pair.matchType === 'bMissing') {\n                c.push('MissingB');\n            } else {\n                c.push('Diff');\n            }\n        }\n        if (pair.addClass) {\n            c.push(pair.addClass);\n        }\n        return (\n            <Aux key={pair.key + '-trans'}>\n                <dt key={pair.key + '-label'} className={c.join(' ')}>{pair.label}</dt>\n                <dd key={pair.key + '-value'} className={c.join(' ')}>{pair.display}</dd>\n            </Aux>\n        )\n    });\n\n    return (\n        <dl className=\"SimpleKeys\">\n            {pairs}\n        </dl>\n    );\n\n};\n\nexport default simpleKeys;\n","import React from 'react';\n\nimport SimpleKeys from '../SimpleKeys/SimpleKeys';\nimport { complexOrSimpleData, getPairWrapper } from '../../../../utils/comparisons';\n\nimport './LangKey.css';\n\nconst LangKey = (props) => {\n\n    const [ mydata, highlight ] = complexOrSimpleData(props);\n    if (mydata === null) {\n        return null;\n    }\n\n    const wrap = getPairWrapper(highlight, mydata);\n\n    let pairs = [];\n\n    pairs.push(wrap({\n        key: 'section',\n        label: 'Section',\n        display: mydata.section\n    }));\n\n    let help = null;\n    if (mydata.help) {\n        const md = require('markdown-it')();\n        const markup = md.render(mydata.help);\n        help = <div dangerouslySetInnerHTML={{__html: markup}}></div>;\n    } else {\n        help = <span className=\"empty\">none</span>;\n    }\n    pairs.push(wrap({\n        key: 'help',\n        label: 'Help',\n        display: help,\n        addClass: 'LangKeysHelp'\n    }));\n\n    pairs.push(wrap({\n        key: 'token_replace',\n        label: 'Tokens that can be replaced:',\n        display: mydata.token_replace ? mydata.token_replace : <span className=\"empty\">none</span>\n    }));\n\n    pairs.push(wrap({\n        key: 'markdown_allowed',\n        label: 'Is markdown allowed?',\n        display: mydata.markdown_allowed ? 'Yes' : 'No'\n    }));\n\n    return (\n        <div className=\"LangKey\">\n            <SimpleKeys pairs={pairs} />\n        </div>\n    );\n\n};\n\nexport default LangKey;\n","import React from 'react';\n\nconst LangText = (props) => {\n    let text = null;\n\n    if (props.data) {\n        if (props.dataKey in props.full.lang_keys) {\n            const info = props.full.lang_keys[props.dataKey];\n            if (info.markdown_allowed) {\n                const md = require('markdown-it')();\n                const markup = md.render(props.data);\n                text = <div dangerouslySetInnerHTML={{__html: markup}}></div>\n            } else {\n                text = <p>{props.data}</p>\n            }\n        } else {\n            text = <p>{props.data}</p>\n        }\n    }\n\n    return text;\n};\n\nexport default LangText;\n","import React from 'react';\n\nimport { getMatchType } from '../../../../../utils/comparisons';\n\nimport './InnerTable.css';\n\nconst innerTable = (props) => {\n    if (!Array.isArray(props.columns)) {\n        return null;\n    }\n\n    let tdata = [];\n    if (props.data !== null && props.keyname in props.data) {\n        tdata = props.data[props.keyname];\n    }\n\n    let hl = {};\n    if (props.highlight !== null && props.keyname in props.highlight) {\n        if (getMatchType(props.keyname, props.highlight) === 'complexDiff') {\n            hl = props.highlight[props.keyname].diff;\n        }\n    }\n\n    const rows = tdata.map((row, idx) => {\n        let c = null;\n        let cells = [];\n        for (const col of props.columns) {\n            if (col.hl) {\n                if (row[col.key] in hl) {\n                    c = getMatchType(row[col.key], hl);\n                }\n            }\n            let display = row[col.key];\n            if (typeof col.display === 'function') {\n                display = col.display(row);\n            }\n            cells.push(<td className={col.class} key={col.key}>{display}</td>);\n        }\n        return (\n            <tr key={'row-' + idx} className={c}>\n                {cells}\n            </tr>\n        );\n    });\n\n    return (\n        <table className=\"InnerTable\">\n            <thead>\n                <tr>\n                    {props.columns.map(col =>\n                        <th className={col.class} key={col.key}>{col.label}</th>)}\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    );\n};\n\nexport default innerTable;\n","import React from 'react';\n\nimport SimpleKeys from '../SimpleKeys/SimpleKeys';\nimport InnerTable from '../SimpleKeys/InnerTable/InnerTable';\nimport { complexOrSimpleData, getTranslationWrapper, getPairWrapper } from '../../../../utils/comparisons';\n\nimport './Question.css';\n\nconst question = (props) => {\n\n    const [ mydata, highlight ] = complexOrSimpleData(props);\n    if (mydata === null) {\n        return null;\n    }\n\n    const translate = getTranslationWrapper(props.full);\n    const translate_md = getTranslationWrapper(props.full, true);\n    const wrap = getPairWrapper(highlight, mydata);\n\n    let pairs = [];\n\n    pairs.push(wrap({\n        key: 'full_lang_key',\n        label: 'full question',\n        display: translate(mydata.full_lang_key)\n    }));\n\n    pairs.push(wrap({\n        key: 'title_lang_key',\n        label: 'Question title',\n        display: translate(mydata.title_lang_key)\n    }));\n\n    pairs.push(wrap({\n        key: 'help_lang_key',\n        label: 'Question help text',\n        display: translate_md(mydata.help_lang_key)\n    }));\n\n    pairs.push(wrap({\n        key: 'answers',\n        label: 'Answers',\n        display: <InnerTable keyname=\"answers\"\n            data={mydata}\n            columns={[\n                { key: 'letter', label: 'Letter', hl: true, class: 'Letter' },\n                { key: 'lang_key', label: 'Answer Text',\n                    display: (answer) => translate(answer.lang_key) }\n            ]}\n            highlight={highlight} />\n    }));\n\n    pairs.push(wrap({\n        key: 'layout',\n        label: 'Answer button layout',\n        display: mydata.layout === 'vert' ? 'vertical' : 'horizontal'\n    }));\n\n    return (\n        <div className=\"Question\">\n            <SimpleKeys pairs={pairs} />\n        </div>\n    );\n\n};\n\nexport default question;\n","import React from 'react';\n\nimport SimpleKeys from '../SimpleKeys/SimpleKeys';\nimport { complexOrSimpleData, getPairWrapper } from '../../../../utils/comparisons';\n\nconst benefit = (props) => {\n\n    const [ mydata, highlight ] = complexOrSimpleData(props);\n    if (mydata === null) {\n        return null;\n    }\n\n    const wrap = getPairWrapper(highlight, mydata);\n\n    let pairs = [];\n\n    pairs.push(wrap({\n        key: 'abbreviation',\n        label: 'Abbreviation',\n        display: mydata.abbreviation\n    }));\n\n    pairs.push(wrap({\n        key: 'name',\n        label: 'Name',\n        display: mydata.name\n    }));\n\n    return (\n        <div className=\"Benefit\">\n            <SimpleKeys pairs={pairs} />\n        </div>\n    );\n\n\n};\n\nexport default benefit;\n","import React from 'react';\n\nimport SimpleKeys from '../SimpleKeys/SimpleKeys';\nimport InnerTable from '../SimpleKeys/InnerTable/InnerTable';\nimport { complexOrSimpleData, getPairWrapper } from '../../../../utils/comparisons';\n\nimport './Condition.css';\n\nconst condition = (props) => {\n\n    const [ mydata, highlight ] = complexOrSimpleData(props, 'code');\n    if (mydata === null) {\n        return null;\n    }\n\n    const wrap = getPairWrapper(highlight, mydata);\n\n    let pairs = [];\n\n    pairs.push(wrap({\n        key: 'name',\n        label: 'Name',\n        display: mydata.name\n    }));\n\n    pairs.push(wrap({\n        key: 'code',\n        label: 'name',\n        display: mydata.code\n    }));\n\n    pairs.push(wrap({\n        key: 'pass',\n        label: 'Pass',\n        display: mydata.pass\n    }));\n\n    pairs.push(wrap({\n        key: 'method',\n        label: 'Method',\n        display: mydata.method\n    }));\n\n    pairs.push(wrap({\n        key: 'outcomes',\n        label: 'Outcomes',\n        display: <InnerTable keyname=\"outcomes\"\n            data={mydata}\n            columns={[\n                { key: 'letter', label: 'Letter', hl: true, class: 'Letter' },\n                { key: 'answer', label: 'Answer(s)' }\n            ]}\n            highlight={highlight} />\n    }));\n\n    return (\n        <div className=\"Question\">\n            <SimpleKeys pairs={pairs} />\n        </div>\n    );\n\n};\n\nexport default condition;\n","import React from 'react';\n\nimport SimpleKeys from '../SimpleKeys/SimpleKeys';\nimport InnerTable from '../SimpleKeys/InnerTable/InnerTable';\nimport { complexOrSimpleData, getTranslationWrapper, getPairWrapper } from '../../../../utils/comparisons';\n\nconst scenario = (props) => {\n\n    const [ mydata, highlight ] = complexOrSimpleData(props, 'lang_key_result');\n    if (mydata === null) {\n        return null;\n    }\n\n    const translate = getTranslationWrapper(props.full, true); // use markdown\n    const wrap = getPairWrapper(highlight, mydata);\n\n    let pairs = [];\n\n    pairs.push(wrap({\n        key: 'enabled',\n        label: 'Enabled?',\n        display: mydata.enabled ? 'Yes' : 'No'\n    }));\n\n    pairs.push(wrap({\n        key: 'conditions',\n        label: 'Conditions',\n        display: <InnerTable keyname=\"conditions\"\n            data={{\n                conditions: Object.entries(mydata.conditions).map(([key, value]) => {\n                    return { name: key, code: value };\n                })\n            }}\n            columns={[\n                { key: 'name', label: 'Question', hl: true, class: 'Name' },\n                { key: 'code', label: 'Answer Code' }\n            ]}\n            highlight={highlight} />\n    }));\n\n    pairs.push(wrap({\n        key: 'help',\n        label: 'Help',\n        display: <p dangerouslySetInnerHTML={{__html: mydata.help.split(/\\n/).join('<br />\\n')}}></p>,\n    }));\n\n    pairs.push(wrap({\n        key: 'lang_key_result',\n        label: 'Short response',\n        display: translate(mydata.lang_key_result)\n    }));\n\n    pairs.push(wrap({\n        key: 'lang_key_expanded',\n        label: 'Expanded response',\n        display: translate(mydata.lang_key_expanded)\n    }));\n\n    return (\n        <div className=\"Scenario\">\n            <SimpleKeys pairs={pairs} />\n        </div>\n    );\n\n};\n\nexport default scenario;\n","import React from 'react';\n\nimport SimpleKeys from '../SimpleKeys/SimpleKeys';\nimport { complexOrSimpleData, getTranslationWrapper, getPairWrapper } from '../../../../utils/comparisons';\n\nconst resource = (props) => {\n\n    const [ mydata, highlight ] = complexOrSimpleData(props, 'code');\n    if (mydata === null) {\n        return null;\n    }\n\n    const translate = getTranslationWrapper(props.full);\n    const translate_md = getTranslationWrapper(props.full, true);\n    const wrap = getPairWrapper(highlight, mydata);\n\n    let pairs = [];\n\n    pairs.push(wrap({\n        key: 'code',\n        label: 'Code (auto-generated)',\n        display: mydata.code\n    }));\n\n    pairs.push(wrap({\n        key: 'text',\n        label: 'Link Text',\n        display: translate(mydata.text)\n    }));\n\n    pairs.push(wrap({\n        key: 'desc',\n        label: 'Link Description',\n        display: translate_md(mydata.desc)\n    }));\n\n    pairs.push(wrap({\n        key: 'link',\n        label: 'URL',\n        display: mydata.link.en\n    }));\n\n    return (\n        <div className=\"Resource\">\n            <SimpleKeys pairs={pairs} />\n        </div>\n    );\n\n};\n\nexport default resource;\n","import React from 'react';\n\nimport Accordion from '../../UI/Accordion/Accordion';\nimport AccordionItem from '../../UI/Accordion/AccordionItem/AccordionItem';\nimport JsonBlock from '../../UI/JsonBlock/JsonBlock';\n\nimport BasicDiff from './BasicDiff/BasicDiff';\nimport BenefitsDiff from './BenefitsDiff/BenefitsDiff';\nimport ResourcesDiff from './ResourcesDiff/ResourcesDiff';\nimport LangKey from './LangKey/LangKey';\nimport LangText from './LangText/LangText';\nimport Question from './Question/Question';\nimport Benefit from './Benefit/Benefit';\nimport Condition from './Condition/Condition';\nimport Scenario from './Scenario/Scenario';\nimport Resource from './Resource/Resource';\n\nimport './DiffDeploys.css';\n\nconst DiffDeploys = (props) => {\n\n    const sections = [\n        { key: 'lang_keys', title: 'Language (Keys)', component: BasicDiff, interior: LangKey },\n        { key: 'lang_en', title: 'Language (Text)', component: BasicDiff, interior: LangText },\n        { key: 'questions', title: 'Questions', component: BasicDiff, interior: Question },\n        { key: 'benefits', title: 'Benefits', component: BasicDiff, interior: Benefit },\n        { key: 'conditions', title: 'Conditions', component: BenefitsDiff, interior: Condition },\n        { key: 'scenarios', title: 'Scenarios', component: BenefitsDiff, interior: Scenario, listKey: 'lang_key_result' },\n        { key: 'resources', title: 'Resources', component: ResourcesDiff, interior: Resource, listKey: 'code' },\n    ];\n\n    let items = [];\n    const full = { dataA: props.dataA.full, dataB: props.dataB.full };\n    for (const sec of sections) {\n        if (props.comparison.diff[sec.key] && !props.comparison.diff[sec.key].match) {\n            const cmp = props.comparison.diff[sec.key];\n            const dataA = props.dataA.full[sec.key] ? props.dataA.full[sec.key] : null;\n            const dataB = props.dataB.full[sec.key] ? props.dataB.full[sec.key] : null;\n            items.push(\n                <AccordionItem key={sec.key} title={sec.title}>\n                    <sec.component\n                        full={full}\n                        cmp={cmp}\n                        dataA={dataA}\n                        dataB={dataB}\n                        titles={props.titles}\n                        interiorComponent={sec.interior}\n                        listKey={sec.listKey} />\n                </AccordionItem>\n            );\n        } else {\n            items.push(\n                <AccordionItem key={sec.key} title={sec.title} disabled />\n            );\n        }\n    }\n    return (\n        <div className=\"DiffDeploys\">\n            <h3>Explore Comparison</h3>\n            {props.comparison.match && <p>Nothing to explore</p>}\n            {!props.comparison.match && <Accordion key=\"explore\">\n                {items}\n            </Accordion>}\n            <h3>Raw Comparison Data</h3>\n            <Accordion key=\"raw\">\n                <AccordionItem key=\"comparison\" title=\"Comparison\">\n                    <JsonBlock data={props.comparison} collapse\n                        root=\"comparison\" addClasses={['RawJson', 'Comparison']} />\n                </AccordionItem>\n                <AccordionItem key=\"dataA\" title={props.titles.a}>\n                    <JsonBlock data={props.dataA} collapse\n                        root=\"dataA\" addClasses={['RawJson', 'DataA']} />\n                </AccordionItem>\n                <AccordionItem key=\"dataB\" title={props.titles.b}>\n                    <JsonBlock data={props.dataB} collapse\n                        root=\"dataB\" addClasses={['RawJson', 'DataB']} />\n                </AccordionItem>\n            </Accordion>\n        </div>\n    );\n};\n\nexport default DiffDeploys;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport CompareForm from '../../../../components/Admin/CompareForm/CompareForm';\nimport DiffDeploys from '../../../../components/Admin/DiffDeploys/DiffDeploys';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminAdvancedCompare extends Component {\n\n    state = {\n        selectedA: null,\n        selectedB: null\n    };\n\n    refreshInit = () => {\n        this.init();\n    };\n\n    refreshCompare = () => {\n        this.compare();\n    };\n\n    onChangeA = (e) => {\n        this.setState({ selectedA : e.target.value });\n    };\n\n    onChangeB = (e) => {\n        this.setState({ selectedB : e.target.value });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.selectedA && this.state.selectedB) {\n            const a = this.state.selectedA;\n            const b = this.state.selectedB;\n            this.props.history.push('/admin/advanced/compare/' + a + '/' + b);\n            this.props.compare(a, b);\n        }\n    };\n\n    onReset = (e) => {\n        e.preventDefault();\n        if (this.state.selectedA && this.state.selectedB) {\n            this.setState({ selectedA: null, selectedB: null }, () => {\n                this.props.history.push('/admin/advanced/compare');\n                this.props.reset();\n            });\n        }\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Advanced/Load');\n        this.init();\n    }\n\n    init() {\n        this.props.fetchList();\n        const a = this.getVersionA();\n        const b = this.getVersionB();\n        if (a && b) {\n            this.setState({ selectedA: a, selectedB: b });\n            this.props.compare(a, b);\n        }\n    }\n\n    compare() {\n        this.props.compare(this.state.selectedA, this.state.selectedB);\n    }\n\n    getVersionA() {\n        if (this.props.match.params.avnum) {\n            return this.props.match.params.avnum;\n        }\n        return null;\n    }\n\n    getVersionB() {\n        if (this.props.match.params.bvnum) {\n            return this.props.match.params.bvnum;\n        }\n        return null;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Advanced/Compare');\n        let body = null;\n        if (!this.props.loaded) {\n            let errmsg = [];\n            if (this.props.list_error) {\n                errmsg.push(this.props.list_error);\n            }\n            if (this.props.error) {\n                errmsg.push(this.props.error);\n            }\n            body = (\n                <Aux>\n                    {errmsg.length > 0 ?\n                        <Message type=\"error\" text={errmsg.join(\"\\n\")} tryagain={this.refreshInit} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n\n        } else {\n\n            let options = this.props.list_data.map(deploy => { return {\n                value: deploy.version_num,\n                text: 'Version ' + deploy.version_num\n            }})\n            options.unshift({ value: 'admin', text: 'Current state of admin' });\n            let presets = null;\n            let controls = true;\n            let titles = { a: 'None', b: 'None'};\n\n            if (this.getVersionA() && this.getVersionB()) {\n                presets = {a: this.getVersionA(), b: this.getVersionB()};\n                controls = true;\n            } else if (this.props.avnum && this.props.bvnum) {\n                presets = { a: this.props.avnum, b: this.props.bvnum };\n            }\n\n            if (presets !== null) {\n                for (const opt of options) {\n                    if (opt.value === presets.a) {\n                        titles.a = opt.text;\n                    }\n                    if (opt.value === presets.b) {\n                        titles.b = opt.text;\n                    }\n                }\n            }\n\n            const form = (\n                <CompareForm\n                    current={{ a: this.state.selectedA, b: this.state.selectedB }}\n                    presets={presets}\n                    options={options}\n                    controls={controls}\n                    changedA={this.onChangeA}\n                    changedB={this.onChangeB}\n                    submit={this.onSubmit}\n                    reset={this.onReset} />\n            );\n\n            let result = null;\n            if (this.props.data) {\n                result = (\n                    <DiffDeploys\n                        comparison={this.props.data.comparison}\n                        dataA={this.props.data.a}\n                        dataB={this.props.data.b}\n                        titles={titles}\n                        />\n                );\n            } else if (this.props.processing) {\n                result = <Spinner />;\n            } else if (this.props.error) {\n                result = <Message type=\"error\" text={this.props.error} tryagain={this.refreshCompare} />\n            }\n\n            body = (\n                <Aux>\n                    {form}\n                    {result}\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Compare Deployments\"\n                breadcrumbs={['Admin', 'Advanced', 'Compare Deployments']}\n                advanced={true}>\n                <DeployMessage />\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loaded: state.admin.deploys.list.loaded,\n        list_error: state.admin.deploys.list.error,\n        list_data: state.admin.deploys.list.data,\n        avnum: state.admin.deploys.compare.avnum,\n        bvnum: state.admin.deploys.compare.bvnum,\n        processing: state.admin.deploys.compare.processing,\n        error: state.admin.deploys.compare.error,\n        data: state.admin.deploys.compare.data,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchList: () => dispatch(actions.loadDeployments()),\n        compare: (avnum, bvnum) => dispatch(actions.compareDeployments(avnum, bvnum)),\n        reset: () => dispatch(actions.resetCompareDeployments()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminAdvancedCompare));\n","import React, { Component } from 'react';\nimport { Route, Switch, Link, withRouter } from 'react-router-dom';\n\nimport List from './List/List';\nimport Save from './Save/Save';\nimport Load from './Load/Load';\nimport Replace from './Replace/Replace';\nimport Compare from './Compare/Compare';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport './Advanced.css';\n\nclass AdminAdvanced extends Component {\n\n    render() {\n        return (\n            <Aux>\n                <Switch>\n                    <Route path=\"/admin/advanced/load/:id\" component={Load} />\n                    <Route path=\"/admin/advanced/load\" component={Load} />\n                    <Route path=\"/admin/advanced/replace\" component={Replace} />\n                    <Route path=\"/admin/advanced/save\" component={Save} />\n                    <Route path=\"/admin/advanced/compare/:avnum/:bvnum\" component={Compare} />\n                    <Route path=\"/admin/advanced/compare\" component={Compare} />\n                    <Route path=\"/\" component={List} />\n                </Switch>\n                <div className=\"OtherFunctions\">\n                    <h4>Advanced Functions</h4>\n                    <ul>\n                        <li><Link to=\"/admin/advanced/save\">Save Deploy</Link></li>\n                        <li><Link to=\"/admin/advanced\">List Deployments</Link></li>\n                        <li><Link to=\"/admin/advanced/compare\">Compare Two Deployments</Link></li>\n                        <li><Link to=\"/admin/advanced/replace\">Replace Database</Link></li>\n                    </ul>\n                </div>\n            </Aux>\n        );\n    }\n\n}\n\nexport default withRouter(AdminAdvanced);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport './IconLink.css';\n\nconst iconLink = (props) => {\n    let classes = [ 'IconLink' ];\n    let title = null;\n    let icon = 'fas fa-question';\n    if (props.icon_type === 'refresh') {\n        title = 'refresh';\n        icon = 'fas fa-sync-alt';\n    } else if (props.icon_type === 'edit') {\n        title = 'edit';\n        icon = 'fas fa-pencil-alt';\n    } else if (props.icon_type === 'preview') {\n        title = 'preview';\n        icon = 'far fa-eye';\n    } else if (props.icon_type === 'new') {\n        title = 'new';\n        icon = 'fas fa-plus-circle';\n    } else if (props.icon_type === 'close') {\n        title = 'close';\n        icon = 'fas fa-times';\n    }\n    if (props.title) {\n        title = props.title;\n    }\n    if (props.icon) {\n        icon = props.icon;\n    }\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n    const contents = (\n        <Aux>\n            <i className={icon} title={title}></i>\n            {props.append_text ?\n                <span>{props.append_text}</span>\n            : null}\n        </Aux>\n    );\n    if (props.to.match('^http')) {\n        return (\n            <a className={classes.join(' ')} download={props.download} href={props.to}>\n                {contents}\n            </a>\n        );\n    } else {\n        return (\n            <Link className={classes.join(' ')} to={props.to}>\n                {contents}\n            </Link>\n        );\n    }\n};\n\nexport default iconLink;\n","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Table from '../../../../components/UI/Table/Table';\nimport IconLink from '../../../../components/UI/IconLink/IconLink';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminResultsList extends Component {\n\n    cols = [\n        { key: 'name', title: 'Name' },\n        { key: 'abbreviation', title: 'Abbreviation' },\n        { key: 'scenarios', title: 'Scenarios' },\n        { key: 'resources', title: 'Resources' }\n    ];\n\n    refresh = () => {\n        this.props.fetchBenefits();\n    };\n\n    editCommonResources = () => {\n        this.props.history.push('/admin/resources/common');\n    };\n\n    editCommonLanguage = () => {\n        this.props.history.push('/admin/language/results');\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Results/List');\n        this.props.fetchBenefits();\n    }\n\n    render() {\n        Logger.setComponent('Admin/Results/List');\n        let body = null;\n\n        if (this.props.loaded) {\n            let rows = this.props.data\n                .sort()\n                .map(benefit => {\n                    const slink = '/admin/results/' + benefit.code;\n                    const rlink = '/admin/resources/' + benefit.code;\n                    return {\n                        code: benefit.code,\n                        name: benefit.name,\n                        abbreviation: benefit.abbreviation,\n                        scenarios: <Link to={slink}><i className=\"fas fa-align-justify\" title=\"Edit Scenarios\"></i></Link>,\n                        resources: <Link to={rlink}><i className=\"fas fa-link\" title=\"Resources\"></i></Link>,\n                    };\n                });\n\n            body = (\n                <Aux>\n                    <h3>Results By Benefit</h3>\n                    <Table\n                        rows={rows}\n                        cols={this.cols} />\n                    <div className=\"Extras\">\n                        <h3>Non-Benefit Related Results</h3>\n                        <p><IconLink icon=\"fas fa-align-justify\"\n                            title=\"Language\"\n                            append_text=\"Common Language\"\n                            to=\"/admin/language/results\" /></p>\n                        <p><IconLink icon=\"fas fa-link\"\n                            title=\"Resources\"\n                            append_text=\"Common Resources\"\n                            to=\"/admin/resources/common\" /></p>\n                    </div>\n                </Aux>\n            );\n\n        } else {\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage\n                title=\"Results: Manage the Results Page\"\n                breadcrumbs={['Admin', 'Results', 'List']}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        loaded: state.admin.shared.benefits.loaded,\n        error: state.admin.shared.benefits.error,\n        data: state.admin.shared.benefits.data\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchBenefits: () => dispatch(actions.loadBenefitsList())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminResultsList));\n","import React from 'react';\n\nimport './SelectFilters.css';\n\nconst selectFilters = (props) => {\n    let empty = null;\n    if (props.empty) {\n        empty = <option value=\"\">-- {props.empty} --</option>;\n    }\n    const selects = props.selects.map(select => {\n        const options = select.options.map(option => {\n            return (\n                <option key={option.value} value={option.value}>\n                    {option.text}\n                </option>\n            );\n        });\n        return (\n            <div className=\"Filter\" key={select.label}>\n                <label>{select.label}</label>\n                <select name={select.name} onChange={props.changed}>\n                    {empty}\n                    {options}\n                </select>\n            </div>\n        );\n    });\n    return (\n        <div className=\"SelectFilters\">\n            {selects}\n        </div>\n    );\n};\n\nexport default selectFilters;\n","import React from 'react';\n\nimport Table from '../../UI/Table/Table';\nimport IconButton from '../../UI/IconButton/IconButton';\n\nimport './CompareTable.css';\n\nconst LIST_LAYOUT = 'list';\nconst COMPARE_LAYOUT = 'compare';\n\nconst CompareTable = (props) => {\n\n    let classes = [ 'CompareTable' ];\n    if (props.current === COMPARE_LAYOUT) {\n        classes.push('CompareLayout');\n    } else {\n        classes.push('ListLayout');\n    }\n\n    const doChange = (e, choice) => {\n        e.preventDefault();\n        props.changed(choice);\n    };\n    const layout_selector = (\n        <div className=\"LayoutToggle\">\n            <IconButton icon=\"fas fa-table\"\n                title=\"List View\"\n                clicked={(e) => doChange(e, LIST_LAYOUT)}\n                append_text=\"List\"\n                add_class={props.current === LIST_LAYOUT ? 'Active' : null} />\n            <IconButton icon=\"fas fa-columns\"\n                title=\"Compare View\"\n                clicked={(e) => doChange(e, COMPARE_LAYOUT)}\n                append_text=\"Compare\"\n                add_class={props.current === COMPARE_LAYOUT ? 'Active' : null} />\n        </div>\n    );\n\n    const rows = props.rows || [];\n    const cols = props.cols || [];\n    const other = props.other || {};\n\n    return (\n        <div className={classes.join(' ')}>\n            {layout_selector}\n            <Table {...other}\n                rows={rows}\n                cols={cols} />\n        </div>\n    );\n};\n\nexport { LIST_LAYOUT, COMPARE_LAYOUT };\nexport default CompareTable;\n","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport SelectFilters from '../../../../components/UI/SelectFilters/SelectFilters';\nimport CompareTable from '../../../../components/Admin/CompareTable/CompareTable';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Logger from '../../../../utils/Logger';\nimport Markdown from '../../../../utils/Markdown';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminResultsFilter extends Component {\n\n    state = {\n        layout: 'list'\n    };\n\n    filterResponses = (e) => {\n        const condition = e.target.getAttribute('name');\n        const letter = e.target.options[e.target.selectedIndex].value;\n        this.props.changeFilter(condition, letter);\n    };\n\n    setLayout = (newLayout) => {\n        this.setState({ layout: newLayout });\n    };\n\n    refresh = () => {\n        this.props.fetchResults(this.getBenefitCode());\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Results/Filter');\n        this.props.fetchResults(this.getBenefitCode());\n    }\n\n    getBenefitCode() {\n        return this.props.match.params.benefit;\n    }\n\n    helpToElem(help) {\n        const markup = help.split(/\\n/).join('<br />\\n');\n        return <p dangerouslySetInnerHTML={{__html: markup}}></p>\n    }\n\n    markdownToElem(markdown) {\n        const markup = Markdown.render(markdown || '');\n        return <div dangerouslySetInnerHTML={{__html: markup}}></div>\n    }\n\n    getEditLink(id) {\n        return '/admin/results/' + this.props.benefit.code + '/edit/' + id;\n    }\n\n    filterScenarios() {\n        return this.props.scenarios.filter(scenario => {\n            for (const key in this.props.filters) {\n                if (this.props.filters[key] !== null) {\n                    if (scenario.condition_map[key] !== this.props.filters[key]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        });\n    }\n\n    getListTable(scenarios) {\n        const rows = scenarios.map(scenario => {\n            const link = (\n                <Link to={this.getEditLink(scenario.id)}>\n                    {this.helpToElem(scenario.help)}\n                </Link>\n            );\n            let combined = '';\n            if (scenario.en_result || scenario.en_expanded) {\n                combined += scenario.en_result || '';\n                combined += \"\\n\\n---\\n\\n\";\n                combined += scenario.en_expanded || '';\n            }\n            return {\n                id: scenario.id,\n                help: link,\n                enabled: scenario.enabled ? 'Yes' : 'No',\n                result: combined\n            };\n        });\n\n        const cols = [\n            { key: 'help', title: 'Scenario' },\n            { key: 'enabled', title: 'Eligible?' },\n            { key: 'result', title: 'Response' }\n        ];\n\n        const snip = {\n            result: 120\n        };\n\n        return (\n            <CompareTable\n                current={this.state.layout}\n                changed={this.setLayout}\n                rows={rows}\n                cols={cols}\n                other={{snip: snip}} />\n        );\n    }\n\n    getCompareTable(scenarios) {\n        const cols = scenarios.map(scenario => {\n            return {\n                key: scenario.lang_key_result,\n                title: this.helpToElem(scenario.help)\n            };\n        });\n\n        let enabled_row = {};\n        let short_row = {};\n        let long_row = {};\n        let edit_row = {};\n        for (const scenario of scenarios) {\n            const code = scenario.lang_key_result;\n            let eligibleFlag = null;\n            if (scenario.enabled) {\n                eligibleFlag = (\n                    <span className=\"EligibleFlag GenericSuccess\">\n                        <i class=\"fas fa-check-square\"></i>\n                        &nbsp;\n                        Eligible\n                    </span>\n                );\n            } else {\n                eligibleFlag = (\n                    <span className=\"EligibleFlag GenericError\">\n                        <i class=\"fas fa-times\"></i>\n                        &nbsp;\n                        Not Eligible\n                    </span>\n                );\n            }\n            enabled_row[code] = eligibleFlag;\n            short_row[code] = this.markdownToElem(scenario.en_result);\n            long_row[code] = this.markdownToElem(scenario.en_expanded);\n            edit_row[code] = (\n                <Link to={this.getEditLink(scenario.id)}>\n                    <i className=\"fas fa-pencil-alt\"></i> Edit\n                </Link>\n            );\n        }\n        const rows = [ enabled_row, short_row, long_row, edit_row ];\n\n        return (\n            <CompareTable\n                current={this.state.layout}\n                changed={this.setLayout}\n                rows={rows}\n                cols={cols} />\n        );\n    }\n\n    render() {\n        Logger.setComponent('Admin/Results/Filter');\n        let body = null;\n        let title = 'Results: ';\n        let crumbs = ['Admin', 'Results'];\n\n        if (this.props.loaded) {\n            title += this.props.benefit.abbreviation + ': Filter Responses';\n            crumbs.push(this.props.benefit.abbreviation);\n            crumbs.push('Filter');\n\n            // Filtering\n            const selectProps = this.props.conditions.map(condition => {\n                const options = condition.options.map(option => {\n                    return {\n                        value: option.letter,\n                        text: option.answer,\n                    };\n                });\n                return {\n                    label: condition.name,\n                    name: condition.key_name,\n                    options: options\n                };\n            });\n            const selects = (\n                <SelectFilters\n                    selects={selectProps}\n                    empty=\"any\"\n                    changed={this.filterResponses} />\n            );\n\n            // Table\n            let table = null;\n            const scenarios = this.filterScenarios();\n            if (this.state.layout === 'compare') {\n                table = this.getCompareTable(scenarios);\n            } else {\n                table = this.getListTable(scenarios);\n            }\n\n            body = (\n                <Aux>\n                    {selects}\n                    {table}\n                </Aux>\n            );\n\n        } else {\n            title += 'Filter Benefit Responses';\n            crumbs.push('Filter');\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        loaded: state.admin.results.filter.loaded,\n        error: state.admin.results.filter.error,\n        benefit: state.admin.results.filter.benefit,\n        conditions: state.admin.results.filter.conditions,\n        scenarios: state.admin.results.filter.scenarios,\n        filters: state.admin.results.filter.filters\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchResults: (benefit) => dispatch(actions.loadResults(benefit)),\n        changeFilter: (condtion, letter) => dispatch(actions.adminChangeResultsFilter(condtion, letter))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminResultsFilter));\n","import React from 'react';\n\nimport Message from '../../UI/Message/Message';\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\n\nimport './Form.css';\n\nconst adminForm = (props) => {\n\n    const doSubmit = (e) => {\n        props.submitted(e);\n        window.scrollTo(0, 0);\n    };\n\n    return (\n        <div className=\"AdminForm\">\n            {props.success ?\n                <Message type=\"success\" text={props.success} closed={props.onCloseMsg} />\n            : null}\n            {props.error ?\n                <Message type=\"error\" text={props.error} closed={props.onCloseMsg} />\n            : null}\n\n            {props.help ?\n                <div className=\"FormHeader\">\n                    <div className=\"HelpBox\">{props.help}</div>\n                </div>\n            : null}\n\n            <form method=\"post\" onSubmit={props.submitted}>\n                <div className=\"FormElements\">\n                    {props.children}\n                </div>\n\n                <div className=\"ButtonHolder\">\n                    <ProcessingButton\n                        disabled={!props.valid}\n                        working={props.processing}\n                        clicked={doSubmit}\n                        text={props.button_text || 'Submit'} />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default adminForm;\n","import React from 'react';\n\nimport './Element.css';\n\nconst adminElement = (props) => {\n    let classes = [ 'AdminFormElement' ];\n    if (props.add_class) {\n        classes.push(props.add_class);\n    }\n    return (\n        <div className={classes.join(' ')}>\n            <h3>{props.label}</h3>\n            {props.help ?\n                <div className=\"Description\">\n                    {props.help}\n                </div>\n            : null}\n            {props.error ?\n                <p className=\"Error\">{props.error}</p>\n            : null}\n            {props.children}\n        </div>\n    );\n};\n\nexport default adminElement;\n","import React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport IconButton from '../../UI/IconButton/IconButton';\nimport Markdown from '../../../utils/Markdown';\nimport { TOKEN_REGEX_TAG_OPEN, TOKEN_REGEX_TAG_CLOSE } from '../../../utils/Language';\n\nimport './EditMarkdown.css';\n\nconst MARKDOWN_HELP_LINK = 'https://www.markdownguide.org/basic-syntax';\nconst HIGHLIGHT_OPEN = 'BEGIN_HIGHLIGHT';\nconst HIGHLIGHT_CLOSE = 'END_HIGHLIGHT';\nconst HIGHLIGHT_TOKEN_OPEN = '{{' + HIGHLIGHT_OPEN + '}}';\nconst HIGHLIGHT_TOKEN_CLOSE = '{{' + HIGHLIGHT_CLOSE + '}}';\n\nconst EditMarkdown = (props) => {\n    const [viewtype, setViewType] = useState('split');\n    const [replacement, setReplacement] = useState('');\n    const [previewText, setPreviewText] = useState(props.value || '');\n    const [wrapped, setWrapped] = useState(false);\n    const [highlighted, setHighlighted] = useState(false);\n\n    // Toggle buttons\n    const doChange = (e, choice) => {\n        e.preventDefault();\n        setViewType(choice);\n    };\n    const doHelp = (e) => {\n        e.preventDefault();\n        window.open(MARKDOWN_HELP_LINK, '_blank');\n    };\n    const toggle = (\n        <div className=\"ViewToggle\">\n            <IconButton icon=\"fas fa-columns\"\n                title=\"Split View\"\n                clicked={(e) => doChange(e, 'split')}\n                append_text=\"split\"\n                add_class={viewtype === 'split' ? 'Active' : null} />\n            <IconButton icon_type=\"edit\"\n                clicked={(e) => doChange(e, 'edit')}\n                append_text=\"edit\"\n                add_class={viewtype === 'edit' ? 'Active' : null} />\n            <IconButton icon_type=\"preview\"\n                clicked={(e) => doChange(e, 'preview')}\n                append_text=\"preview\"\n                add_class={viewtype === 'preview' ? 'Active' : null} />\n            <IconButton icon=\"far fa-life-ring\"\n                clicked={(e) => doHelp(e)}\n                title=\"Markdown Help\"\n                append_text=\"help\" />\n        </div>\n    );\n\n    // Replacement buttons\n    let replacementButtons = null;\n    let doValueChange = (e) => {\n        props.changed(e);\n        let newtext = e.target.value;\n        setPreviewText(newtext);\n    };\n    if (props.replace_token && (viewtype === 'split' || viewtype === 'preview')) {\n        const regexp = new RegExp(TOKEN_REGEX_TAG_OPEN +\n            props.replace_token + TOKEN_REGEX_TAG_CLOSE, 'g');\n\n        const doReplacement = (e) => {\n            if (e) {\n                e.preventDefault();\n            }\n            var choice = e.target.options[e.target.selectedIndex].value;\n            setReplacement(choice);\n            let newtext = props.value || '';\n            if (choice) {\n                const elem = HIGHLIGHT_TOKEN_OPEN + choice + HIGHLIGHT_TOKEN_CLOSE;\n                newtext = newtext.replace(regexp, elem);\n                setWrapped(true);\n            }\n            setPreviewText(newtext);\n        };\n\n        doValueChange = (e) => {\n            props.changed(e);\n            if (props.replace_token && (viewtype === 'split' || viewtype === 'preview')) {\n                let newtext = e.target.value;\n                if (replacement) {\n                    const elem = HIGHLIGHT_TOKEN_OPEN + replacement + HIGHLIGHT_TOKEN_CLOSE;\n                    newtext = newtext.replace(regexp, elem);\n                    setWrapped(true);\n                }\n                setPreviewText(newtext);\n            }\n        }\n\n        let doHighlight = (e) => {\n            setHighlighted(!highlighted);\n        };\n\n        let token = '{{' + props.replace_token + '}}';\n        let options = props.replace_options.map(option => {\n            return <option key={option} value={option}>{option}</option>;\n        });\n\n        replacementButtons = (\n            <div className=\"ViewReplacement\">\n                <div className=\"ExplainReplacement\">\n                    Replace\n                    <span className=\"ReplacementToken\">{token}</span>\n                    with:\n                </div>\n                <div className=\"ReplacementOptions\">\n                    <select name=\"replacement\" onChange={doReplacement} value={replacement}>\n                        <option value=\"\">-- do not replace --</option>\n                        {options}\n                    </select>\n                </div>\n                <div className=\"ReplacementHighlight\">\n                    <label>\n                        <input type=\"checkbox\" onChange={doHighlight} />\n                        Highlight\n                    </label>\n                </div>\n            </div>\n        );\n    }\n\n    // Preview window\n    let preview = Markdown.render(previewText);\n    if (props.replace_token && (viewtype === 'split' || viewtype === 'preview')) {\n        let hlclasses = [ 'PreviewToken' ];\n        if (highlighted) {\n            hlclasses.push('Active');\n        }\n        if (wrapped) {\n            const regexp1 = new RegExp(TOKEN_REGEX_TAG_OPEN + HIGHLIGHT_OPEN + TOKEN_REGEX_TAG_CLOSE, 'g');\n            const regexp2 = new RegExp(TOKEN_REGEX_TAG_OPEN + HIGHLIGHT_CLOSE + TOKEN_REGEX_TAG_CLOSE, 'g');\n            preview = preview.replace(regexp1, '<span class=\"' + hlclasses.join(' ') + '\">');\n            preview = preview.replace(regexp2, '</span>');\n        } else {\n            const regexp = new RegExp(TOKEN_REGEX_TAG_OPEN +\n                props.replace_token + TOKEN_REGEX_TAG_CLOSE, 'g');\n            preview = preview.replace(regexp, '<span class=\"' + hlclasses.join(' ') + '\">{{' + props.replace_token + '}}</span>');\n        }\n    }\n    const previewBox = (\n        <div className=\"PreviewBox\">\n            <div className=\"View\" dangerouslySetInnerHTML={{__html: preview}} />\n        </div>\n    );\n\n    // Edit window\n    const minrows = props.minrows || 5;\n    const editBox = (\n        <div className=\"EditorBox\">\n            <TextareaAutosize rows=\"5\" cols=\"75\"\n                minRows={minrows}\n                name={props.name}\n                defaultValue={props.value}\n                onChange={doValueChange} />\n        </div>\n    );\n\n    if (viewtype === 'split') {\n        return (\n            <div className=\"EditMarkdown SplitEditor\">\n                {toggle}\n                {replacementButtons}\n                <div className=\"SplitWrapper\">\n                    <div className=\"SplitContainer\">\n                        <div className=\"SplitInternal\">\n                            <h5>Edit</h5>\n                            {editBox}\n                        </div>\n                        <div className=\"SplitInternal\">\n                            <h5>Preview</h5>\n                            {previewBox}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else if (viewtype === 'edit') {\n        return (\n            <div className=\"EditMarkdown SoloEditor\">\n                {toggle}\n                {editBox}\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"EditMarkdown PreviewOnly\">\n                {toggle}\n                {replacementButtons}\n                {previewBox}\n            </div>\n        );\n    }\n\n};\n\nexport default EditMarkdown;\n","import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport Form from '../../Form/Form';\nimport Element from '../../Form/Element/Element';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport EditMarkdown from '../../EditMarkdown/EditMarkdown';\nimport Language from '../../../../utils/Language';\n\n// props:\n// * processing\n// * saved\n// * submitAction\n// * scenario\n// * prefill\n\nconst FormEditResult = (props) => {\n\n    const fhooks = useForm({ mode: 'onBlur' });\n    const valid = Object.keys(fhooks.errors).length < 1;\n    const isEnabled = fhooks.watch('enabled', props.prefill.enabled);\n\n    let help = {\n        form: <p dangerouslySetInnerHTML={{__html: props.scenario.help.split(\"\\n\").join('<br />')}}></p>,\n        enabled: <p>When this is flag is on, the user will get a response for this scenario.  If we're confident that their employee is not eligible for this benefits, uncheck the box.</p>,\n        en_result: (\n            <Aux>\n                <p>This text should be kept very short and should answer the following questions where relevant:</p>\n                <ul>\n                    <li>What is this benefit?</li>\n                    <li>Who pays for it?</li>\n                    <li>How do they apply?</li>\n                </ul>\n            </Aux>\n        ),\n        en_expanded: (\n            <p>When the user clicks the \"read more\" button, this is what appears below the main result.  It will be followed by any resource links that have been set for the benefit, and can be collapsed out of view when they click \"read less\".</p>\n        )\n    };\n\n    return (\n        <Form\n            success={props.saved ? 'The resource has been saved' : null}\n            valid={valid}\n            error={valid ? null : 'Please correct the errors below'}\n            help={help.form}\n            processing={props.processing}\n            onCloseMsg={props.onCloseMsg}\n            submitted={fhooks.handleSubmit(props.submitAction)}>\n\n            <Element key=\"enabled\" add_class=\"Checkbox\"\n                label=\"Eligibility\"\n                help={help.enabled}>\n                <label>\n                    <input type=\"checkbox\"\n                        name=\"enabled\"\n                        defaultChecked={props.prefill.enabled}\n                        ref={fhooks.register} />\n                     The employee would be eligible in this scenario\n                 </label>\n            </Element>\n\n            {isEnabled && (\n                <Controller\n                    name=\"en_result\"\n                    control={fhooks.control}\n                    defaultValue={props.prefill.en_result || ''}\n                    rules={{ required: 'Please enter some text for the response' }}\n                    render={cprops => {\n                        return <Element key=\"en_result\" add_class=\"Markdown\"\n                            label=\"Main Result\"\n                            help={help.en_result}\n                            error={fhooks.errors.en_result ? fhooks.errors.en_result.message : null}>\n                            <EditMarkdown\n                                name=\"en_result\"\n                                value={cprops.value}\n                                changed={cprops.onChange}\n                                replace_token=\"employee_type\"\n                                replace_options={Language.get_token_options('employee_type')} />\n                        </Element>\n                    }} />\n            )}\n\n            {isEnabled && (\n                <Controller\n                    name=\"en_expanded\"\n                    control={fhooks.control}\n                    defaultValue={props.prefill.en_expanded || ''}\n                    render={cprops => {\n                        return <Element key=\"en_expanded\" add_class=\"Markdown\"\n                            label=\"Expanded Info\"\n                            help={help.en_expanded}\n                            error={fhooks.errors.en_expanded ? fhooks.errors.en_expanded.message : null}>\n                            <EditMarkdown\n                                name=\"en_expanded\"\n                                value={cprops.value}\n                                changed={cprops.onChange}\n                                replace_token=\"employee_type\"\n                                replace_options={Language.get_token_options('employee_type')} />\n                        </Element>\n                    }} />\n            )}\n\n        </Form>\n    );\n};\n\nexport default FormEditResult;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nimport EditForm from '../../../../components/Admin/Forms/EditResult/EditResult';\n\nclass AdminResultsEdit extends Component {\n\n    state = {\n        processing: false,\n        processing_error: null\n    };\n\n    refresh = () => {\n        this.fetchScenario();\n    };\n\n    submit = (form) => {\n        this.props.saveScenario(this.getCode(), this.getId(), form);\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Results/Edit');\n        this.fetchScenario();\n    }\n\n    fetchScenario() {\n        this.props.fetchScenario(this.getCode(), this.getId());\n    }\n\n    getCode() {\n        return this.props.match.params.benefit;\n    }\n\n    getId() {\n        return this.props.match.params.id;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Results/Edit');\n        let body = null;\n        let title = 'Results: ';\n        let crumbs = ['Admin', 'Results'];\n\n        if (this.props.info.loaded) {\n            title += this.props.info.benefit.abbreviation + ': Edit Scenario';\n            crumbs.push(this.props.info.benefit.abbreviation);\n            crumbs.push('Scenario');\n\n            const prefill = {\n                enabled: this.props.info.scenario.enabled,\n                en_result: this.props.info.scenario.en_result,\n                en_expanded: this.props.info.scenario.en_expanded\n            };\n\n            body = (\n                <EditForm\n                    saved={this.state.saved ? 'The scenario response has been saved' : null}\n                    scenario={this.props.info.scenario}\n                    submitAction={this.submit}\n                    prefill={prefill} />\n            );\n\n        } else {\n            title += 'Edit Scenario';\n            crumbs.push('Scenario');\n\n            body = (\n                <Aux>\n                    {this.props.info.error ?\n                        <Message type=\"error\" text={this.props.info.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        info: state.admin.results.info\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchScenario: (benefit, id) => dispatch(actions.loadScenario(benefit, id)),\n        saveScenario: (benefit, id, form) => dispatch(actions.saveScenario(benefit, id, form))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminResultsEdit));\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Filter from './Filter/Filter';\nimport Edit from './Edit/Edit';\n\nclass AdminResults extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/admin/results/:benefit/edit/:id\" component={Edit} />\n                <Route path=\"/admin/results/:benefit\" component={Filter} />\n                <Route path=\"/\" component={List} />\n            </Switch>\n        );\n    }\n\n}\n\nexport default AdminResults;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    if (props.show) {\n        return (\n            <div className=\"Backdrop\" onClick={props.clicked}></div>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default backdrop;\n","import React from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport './Modal.css';\n\nconst modal = (props) => {\n    let classes = [ 'Modal' ];\n    if (props.show) {\n        classes.push('Show');\n    } else {\n        classes.push('Hide');\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.show} clicked={props.cancel} />\n            <div className={classes.join(' ')}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n};\n\nexport default modal;\n","import React from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Modal from '../../UI/Modal/Modal';\nimport Markdown from '../../../utils/Markdown';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\n\nimport './ConfirmDeleteResource.css';\n\nconst confirmDeleteResource = (props) => {\n\n    let contents = null;\n\n    if (props.candidate) {\n        contents = (\n            <Aux>\n                <h4>Are you sure you want to delete this resource?</h4>\n                <div>\n                    <p><strong>Group:</strong> {props.candidate.benefit}</p>\n                    <p><strong>URL:</strong> {props.candidate.link}</p>\n                    <p><strong>Text:</strong> {props.candidate.text}</p>\n                    {props.candidate.desc ?\n                    <div>\n                        <p><strong>Description:</strong></p>\n                        <div dangerouslySetInnerHTML={{__html: Markdown.render(props.candidate.desc)}}></div>\n                    </div>\n                    : null}\n                </div>\n                <div className=\"DeleteButton\">\n                    <ProcessingButton\n                        working={props.working}\n                        clicked={props.confirm}\n                        text=\"Delete\" />\n                </div>\n            </Aux>\n        );\n    }\n\n    return (\n        <Modal show={props.confirming} cancel={props.cancel}>\n            <div className=\"ConfirmDeleteResource\">\n                <div className=\"CloseButton\">\n                    <IconButton icon_type=\"close\" clicked={props.cancel} />\n                </div>\n                {contents}\n            </div>\n        </Modal>\n    );\n\n};\n\nexport default confirmDeleteResource;\n","import React from 'react';\n\nimport IconButton from '../../UI/IconButton/IconButton';\nimport IconLink from '../../UI/IconLink/IconLink';\n\nimport './ActionButtons.css';\n\nconst actionButtons = (props) => {\n    let i = 0;\n    const buttons = props.buttons.map(button => {\n        ++i;\n        if (button.clicked) {\n            const action = (e) => {\n                e.preventDefault();\n                button.clicked(e);\n            }\n            return (\n                <IconButton key={i}\n                    icon={button.icon}\n                    title={button.title}\n                    append_text={button.title}\n                    clicked={action} />\n            );\n        } else if (button.link) {\n            return (\n                <IconLink key={i}\n                    icon={button.icon}\n                    title={button.title}\n                    append_text={button.title}\n                    download={button.download}\n                    to={button.link} />\n            );\n        } else {\n            return null;\n        }\n    });\n    return (\n        <div className=\"ActionButtons\">\n            {buttons}\n        </div>\n    );\n};\n\nexport default actionButtons;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport ConfirmDeleteResource from '../../../../components/Admin/ConfirmDeleteResource/ConfirmDeleteResource';\nimport ActionButtons from '../../../../components/Admin/ActionButtons/ActionButtons';\nimport Table from '../../../../components/UI/Table/Table';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nconst COMMON_CODE = 'common';\n\nclass AdminResourcesList extends Component {\n\n    resources_clickable = {\n        delete: (row) => {\n            this.props.requestDelete(row);\n        },\n    };\n\n    resources_snip = {\n        link: 40\n    };\n\n    newResource = () => {\n        const code = this.getBenefitCode();\n        if (code && code !== COMMON_CODE) {\n            this.props.history.push('/admin/resources/new/' + code);\n        } else {\n            this.props.history.push('/admin/resources/new');\n        }\n    }\n\n    refresh = () => {\n        this.props.fetchResources();\n    };\n\n    cancelDelete = () => {\n        this.props.cancelDelete();\n    };\n\n    confirmDelete = () => {\n        this.props.deleteResource();\n    };\n\n    closeDeleteMessage = () => {\n        this.props.dismissMessage();\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Resources/List');\n        const code = this.getBenefitCode();\n        this.props.fetchResources(code);\n        if (code && code !== COMMON_CODE) {\n            this.props.fetchBenefit(code);\n        }\n    }\n\n    getBenefitCode() {\n        return this.props.match.params.benefit;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Resources/List');\n        let body = null;\n        let title = 'Results: ';\n        let crumbs = ['Admin' ];\n        if (this.props.loaded) {\n            if (this.props.benefit) {\n                title += this.props.benefit.abbreviation + ': Resources';\n                crumbs.push(this.props.benefit.abbreviation);\n                crumbs.push('Resources');\n            } else if (this.getBenefitCode() === COMMON_CODE) {\n                title += 'Common Resources';\n                crumbs.push('Resources');\n            } else {\n                title += 'All Resources';\n                crumbs.push('Resources');\n            }\n            let resources_rows = this.props.data\n                .map(resource => {\n                    let edit_link = (\n                        <Link to={'/admin/resources/edit/' + resource.id}>\n                            <i className=\"fas fa-pencil-alt\" title=\"Edit Resource\"></i>\n                        </Link>\n                    );\n                    let row = {\n                        id: resource.id,\n                        code: resource.code,\n                        text: resource.en_text,\n                        desc: resource.en_desc,\n                        link: resource.links.en,\n                        edit: edit_link,\n                        delete: <i className=\"fas fa-trash-alt\" title=\"Delete Resource\"></i>\n                    };\n                    if (!this.props.benefit) {\n                        row.benefit = resource.benefit || 'Common';\n                    }\n                    return row;\n                });\n            let resources_cols = [];\n            if (!this.props.benefit) {\n                resources_cols.push({ key: 'benefit', title: 'Benefit' });\n            }\n            resources_cols.push({ key: 'link', title: 'Link' });\n            resources_cols.push({ key: 'text', title: 'Text' });\n            resources_cols.push({ key: 'edit', title: 'Edit' });\n            resources_cols.push({ key: 'delete', title: 'Delete' });\n            body = (\n                <Aux>\n                    {this.props.deleted ?\n                        <Message type=\"success\" text=\"The resource was deleted\" closed={this.closeDeleteMessage} />\n                    : null}\n                    <ConfirmDeleteResource\n                        confirming={this.props.confirming_delete}\n                        working={this.props.processing_delete}\n                        confirm={this.confirmDelete}\n                        cancel={this.cancelDelete}\n                        candidate={this.props.delete_candidate} />\n                    <ActionButtons buttons={[{icon: \"fas fa-plus-circle\",\n                        title: \"New Resource\",\n                        clicked: this.newResource}]} />\n                    <Table\n                        rows={resources_rows}\n                        cols={resources_cols}\n                        clickable={this.resources_clickable}\n                        snip={this.resources_snip} />\n                </Aux>\n            );\n\n        } else {\n            title += 'Resources';\n            crumbs.push('Resources');\n\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loaded: state.admin.resources.list.loaded,\n        error: state.admin.resources.list.error,\n        data: state.admin.resources.list.data,\n        benefit: state.admin.resources.list.current_benefit,\n        delete_candidate: state.admin.resources.delete.candidate,\n        confirming_delete: state.admin.resources.delete.confirming,\n        processing_delete: state.admin.resources.delete.processing,\n        deleted: state.admin.resources.delete.deleted\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchResources: () => dispatch(actions.loadResourcesList()),\n        fetchBenefit: (code) => dispatch(actions.loadBenefit(code)),\n        requestDelete: (candidate) => dispatch(actions.adminRequestResourceDelete(candidate)),\n        cancelDelete: () => dispatch(actions.adminCancelResourceDelete()),\n        deleteResource: () => dispatch(actions.deleteResource()),\n        dismissMessage: () => dispatch(actions.adminDismissDeleteResourceMessage())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminResourcesList));\n","import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport Form from '../../Form/Form';\nimport Element from '../../Form/Element/Element';\nimport EditMarkdown from '../../EditMarkdown/EditMarkdown';\nimport Language from '../../../../utils/Language';\n\n// props:\n// * processing\n// * saved\n// * submitAction\n// * benefits\n// * prefill (optional)\n\nconst FormEditResource = (props) => {\n\n    const fhooks = useForm({ mode: 'onBlur' });\n    const valid = Object.keys(fhooks.errors).length < 1;\n\n    const help = {\n        benefit_id: <p>The benefit associated with this resource</p>,\n        link_en: <p>The link to this resource</p>,\n        en_text: <p>The text for the link</p>,\n        en_desc: <p>Any description that should be shown below the link (optional)</p>\n    };\n\n    // Options for the associated benefit select\n    let benefit_options = props.benefits.map(benefit => {\n        return (\n            <option key={benefit.id} value={benefit.id}>{benefit.abbreviation}</option>\n        );\n    });\n    benefit_options.unshift(<option key=\"common\" value=\"\">Common</option>);\n\n    return (\n        <Form\n            success={props.saved ? 'The resource has been saved' : null}\n            valid={valid}\n            error={valid ? null : 'Please correct the errors below'}\n            processing={props.processing}\n            onCloseMsg={props.onCloseMsg}\n            submitted={fhooks.handleSubmit(props.submitAction)}>\n\n            <Element key=\"benefit_id\" add_class=\"Select\"\n                label=\"Associated Benefit\"\n                help={help.benefit_id}>\n                <select name=\"benefit_id\" defaultValue={props.prefill.benefit_id || ''} ref={fhooks.register}>\n                    {benefit_options}\n                </select>\n            </Element>\n\n            <Element key=\"link_en\" add_class=\"Text\"\n                label=\"URL\"\n                help={help.link_en}\n                error={fhooks.errors.link_en ? fhooks.errors.link_en.message : null}>\n                <input type=\"text\" name=\"link_en\" size=\"80\"\n                    defaultValue={props.prefill.link_en || ''}\n                    ref={fhooks.register({required: 'Please enter a link to this resource'})} />\n            </Element>\n\n            <Element key=\"en_text\" add_class=\"Text\"\n                label=\"Text\"\n                help={help.en_text}\n                error={fhooks.errors.en_text ? fhooks.errors.en_text.message : null}>\n                <input type=\"text\" name=\"en_text\" size=\"80\"\n                    defaultValue={props.prefill.en_text || ''}\n                    ref={fhooks.register({required: 'Please enter the text used to link to this resource'})} />\n            </Element>\n\n            <Controller\n                name=\"en_desc\"\n                control={fhooks.control}\n                defaultValue={props.prefill.en_desc || ''}\n                render={cprops => {\n                    return <Element key=\"en_result\" add_class=\"Text\"\n                        label=\"Description\"\n                        help={help.en_desc}\n                        error={fhooks.errors.en_desc ? fhooks.errors.en_desc.message : null}>\n                        <EditMarkdown\n                            name=\"en_result\"\n                            value={cprops.value}\n                            changed={cprops.onChange}\n                            replace_token=\"employee_type\"\n                            replace_options={Language.get_token_options('employee_type')} />\n                    </Element>\n                }} />\n\n        </Form>\n    );\n};\n\nexport default FormEditResource;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nimport EditForm from '../../../../components/Admin/Forms/EditResource/EditResource';\n\nclass AdminResourcesEdit extends Component {\n\n    submit = (values) => {\n        this.props.saveResource(this.props.resource.data, this.props.benefits.data, values);\n    };\n\n    refresh = () => {\n        this.loadAll();\n    };\n\n    closeSavedMessage = () => {\n        this.props.closeMsg();\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Resources/Edit');\n        this.loadAll();\n    }\n\n    getId() {\n        if (this.props.match.params.id) {\n            return this.props.match.params.id;\n        } else {\n            return null;\n        }\n    }\n\n    loadAll() {\n        this.props.fetchBenefits();\n        const id = this.getId();\n        if (id) {\n            this.props.fetchResource(id);\n        }\n    }\n\n    isLoaded() {\n        if (!this.props.benefits.loaded) {\n            return false;\n        }\n        if (!this.getId()) {\n            return true;\n        }\n        if (!this.props.resource.loaded) {\n            return false;\n        }\n        return true;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Resources/Edit');\n\n        let body = null;\n        let title = 'Resources: Edit';\n        let crumbs = ['Admin', 'Resources'];\n\n        if (this.isLoaded()) {\n\n            let redirect = null;\n            if (this.props.save.reload_id) {\n                redirect = <Redirect to={'/admin/resources/edit/' + this.props.save.reload_id} />;\n            }\n\n            let prefill = {};\n            if (this.props.resource.data === null) {\n                title = 'Resources: New';\n            } else {\n                prefill.benefit_id = this.props.resource.data.benefit ? this.props.resource.data.benefit.id : null;\n                prefill.link_en = this.props.resource.data.links.en;\n                prefill.en_text = this.props.resource.data.en_text;\n                prefill.en_desc = this.props.resource.data.en_desc;\n            }\n\n            body = (\n                <Aux>\n                    {redirect}\n                    <EditForm\n                        saved={this.props.save.saved ? 'The resource has been saved' : null}\n                        onCloseMsg={this.closeSavedMessage}\n                        benefits={this.props.benefits.data}\n                        submitAction={this.submit}\n                        prefill={prefill} />\n                </Aux>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.props.save.error ?\n                        <Message type=\"error\" text={this.props.save.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage title={title} breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        benefits: state.admin.shared.benefits,\n        resource: state.admin.resources.info,\n        save: state.admin.resources.save\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchBenefits: () => dispatch(actions.loadBenefitsList()),\n        fetchResource: (id) => dispatch(actions.loadResourceInfo(id)),\n        saveResource: (old, benefits, form) => dispatch(actions.saveResource(old, benefits, form)),\n        closeMsg: () => dispatch(actions.adminSaveResourceMsgDismissed())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminResourcesEdit));\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Edit from './Edit/Edit';\n\nclass AdminResources extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/admin/resources/edit/:id\" component={Edit} />\n                <Route path=\"/admin/resources/new/:benefit\" component={Edit} />\n                <Route path=\"/admin/resources/new\" component={Edit} />\n                <Route path=\"/admin/resources/:benefit\" component={List} />\n                <Route path=\"/\" component={List} />\n            </Switch>\n        );\n    }\n\n}\n\nexport default AdminResources;\n","import React from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './SearchFilters.css';\n\nconst searchFilters = (props) => {\n    const searches = props.searches.map(search => {\n        let clearButton = null;\n        if (search.value) {\n            clearButton = <IconButton icon=\"far fa-times-circle\"\n                title={search.clear_title || 'Clear'}\n                clicked={props.cleared} />;\n        }\n        return (\n            <div className=\"Filter\" key={search.label}>\n                <label>{search.label}</label>\n                <input type=\"text\" name={search.name}\n                    size=\"40\"\n                    value={search.value || ''}\n                    onChange={props.changed} />\n                {clearButton}\n            </div>\n        );\n    });\n    return (\n        <div className=\"SearchFilters\">\n            {searches}\n        </div>\n    );\n};\n\nexport default searchFilters;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport SelectFilters from '../../../../components/UI/SelectFilters/SelectFilters';\nimport SearchFilters from '../../../../components/UI/SearchFilters/SearchFilters';\nimport Table from '../../../../components/UI/Table/Table';\nimport Message from '../../../../components/UI/Message/Message';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nconst MAX_KEY_LENGTH = 50;\nconst MAX_ENGLISH_LENGTH = 100;\nconst SKIP_SECTIONS = [ 'results_resources', 'results_processing' ];\n\nclass AdminLanguageList extends Component {\n    \n    state = {\n        filter: {\n            section: null,\n            search: null\n        },\n    };\n\n    snip = {\n        key: MAX_KEY_LENGTH,\n        english: MAX_ENGLISH_LENGTH\n    };\n\n    clickable = {\n        edit: (row) => { this.editRow(row); }\n    };\n\n    refresh = () => {\n        this.props.fetch();\n    };\n\n    setSectionFilter = (e) => {\n        let newFilter = { ...this.state.filter };\n        newFilter.section = e.target.value;\n        this.setState({ filter: newFilter });\n    };\n\n    doSearch = (e) => {\n        let newFilter = { ...this.state.filter };\n        newFilter.search = e.target.value.toLowerCase();\n        this.setState({ filter: newFilter });\n    };\n\n    clearSearch = (e) => {\n        e.preventDefault();\n        let newFilter = { ...this.state.filter };\n        newFilter.search = null;\n        this.setState({ filter: newFilter });\n    };\n\n    editRow(row) {\n        this.props.history.push('/admin/language/edit/' + row.key);\n    }\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Language/List');\n        this.props.fetch();\n    }\n\n    filterRows() {\n        let base = [];\n        const section = this.state.filter.section || this.getSection();\n        if (section) {\n            for (const info of this.props.data[section]) {\n                base.push({ ...info, section: section });\n            }\n        } else {\n            for (const s in this.props.data) {\n                for (const info of this.props.data[s]) {\n                    if (SKIP_SECTIONS.includes(s)) {\n                        continue;\n                    }\n                    base.push({ ...info, section: s });\n                }\n            }\n        }\n        return base.filter((row) => {\n            if (this.state.filter.search) {\n                if (!row.english) {\n                    return false;\n                } else if (row.english.toLowerCase().includes(this.state.filter.search)) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        });\n    }\n\n    getSection() {\n        if (this.props.match.params.section) {\n            return this.props.match.params.section;\n        }\n        return null;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Language/List');\n        let body = null;\n        if (this.props.loaded) {\n            let cols = [\n                { key: 'key', title: 'Key' },\n                { key: 'english', title: 'English' },\n                { key: 'edit', title: 'Edit' }\n            ];\n            let filterBySection = null;\n            if (this.getSection() === null) {\n                cols.unshift({ key: 'section', title: 'Section' });\n                const options = Object.keys(this.props.data)\n                    .map(section => {\n                        return { value: section, text: section };\n                    });\n                const selectProps = [{\n                    label: 'Filter by Section',\n                    name: 'section',\n                    options: options\n                }];\n                filterBySection = (\n                    <SelectFilters\n                        selects={selectProps}\n                        empty=\"any\"\n                        changed={this.setSectionFilter} />\n                );\n            }\n            const searches = [{\n                label: 'Search',\n                name: 'search',\n                value: this.state.filter.search\n            }];\n            const rows = this.filterRows().map(row => {\n                let tablerow = {\n                    key: row.key,\n                    english: row.english,\n                    edit: <i className=\"fas fa-pencil-alt\" title=\"Edit Language\"></i>\n                };\n                if (this.getSection() === null) {\n                    tablerow.section = row.section;\n                }\n                return tablerow;\n            });\n            body = (\n                <Aux>\n                    {filterBySection}\n                    <SearchFilters\n                        searches={searches}\n                        changed={this.doSearch}\n                        cleared={this.clearSearch} />\n                    <Table\n                        rows={rows}\n                        cols={cols}\n                        clickable={this.clickable}\n                        snip={this.snip} />\n                </Aux>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        let title = 'Language';\n        let crumbs = ['Admin', 'Language', 'List'];\n        let section = this.getSection();\n        if (section === null) {\n            title += ': All language used in the user-facing site';\n        } else {\n            let sectitle = section.split('_')\n                .map(w => w.replace(w[0], w[0].toUpperCase()))\n                .join(' ');\n            title += ': ' + sectitle + ' Section';\n            crumbs.push(sectitle);\n        }\n        return (\n            <AdminPage\n                title={title}\n                breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loaded: state.admin.language.list.loaded,\n        error: state.admin.language.list.error,\n        data: state.admin.language.list.data\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetch: () => dispatch(actions.loadLangList()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminLanguageList));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport EditMarkdown from '../../../../components/Admin/EditMarkdown/EditMarkdown';\nimport Form from '../../../../components/Admin/Form/Form';\nimport Element from '../../../../components/Admin/Form/Element/Element';\nimport Logger from '../../../../utils/Logger';\nimport Language from '../../../../utils/Language';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminLanguageEdit extends Component {\n\n    md = null;\n\n    refresh = () => {\n        this.props.fetchInfo();\n    };\n\n    changeEnglish = (e) => {\n        this.props.holdText(e.target.value);\n    };\n\n    submitEdit = () => {\n        this.props.saveText();\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Language/Edit');\n        this.md = require('markdown-it')();\n        this.props.fetchInfo(this.getKey());\n    }\n\n    getKey() {\n        if (this.props.match.params.key) {\n            return this.props.match.params.key;\n        }\n        return null;\n    }\n\n    render() {\n        Logger.setComponent('Admin/Language/Edit');\n        let body = null;\n        if (!this.props.info.loaded) {\n            body = (\n                <Aux>\n                    {this.props.info.error ?\n                        <Message type=\"error\" text={this.props.info.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n\n        } else {\n            let helptext = this.md.render(this.props.info.data.help);\n            let helpbox = (\n                <Aux>\n                    <p><i>Appears in: <strong>{this.props.info.data.section}</strong></i></p>\n                    {helptext ?\n                        <div dangerouslySetInnerHTML={{__html: helptext}} />\n                    : null}\n                </Aux>\n            );\n            let label = 'English text for: ' + this.getKey();\n            let input = null;\n            let elem_class = null;\n            if (this.props.info.data.markdown_allowed) {\n                elem_class = 'Markdown';\n                input = <EditMarkdown\n                    name=\"english\"\n                    value={this.props.current.text}\n                    changed={this.changeEnglish}\n                    replace_token={this.props.language_info.token_replace}\n                    replace_options={Language.get_token_options(this.props.info.data.token_replace)} />\n            } else {\n                elem_class = 'PlainText';\n                input = <input type=\"text\"\n                    size=\"50\"\n                    name=\"english\"\n                    value={this.props.current.text}\n                    onChange={this.changeEnglish} />\n            }\n            body = (\n                <Form help={helpbox}\n                    success={this.props.save.saved ? 'The new language has been saved' : null}\n                    error={this.props.save.error}\n                    valid={true}\n                    processing={this.props.save.processing}\n                    submitted={this.submitEdit}>\n                    <Element add_class={elem_class} label={label}>\n                        {input}\n                    </Element>\n                </Form>\n            );\n        }\n\n        return (\n            <AdminPage\n                title=\"Language: Edit language for the tool\"\n                breadcrumbs={['Admin', 'Language', 'Edit']}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        info: {\n            loaded: state.admin.language.info.loaded,\n            error: state.admin.language.info.error,\n            data: state.admin.language.info.data,\n        },\n        current: {\n            key: state.admin.language.current.key,\n            lang: state.admin.language.current.lang,\n            text: state.admin.language.current.text\n        },\n        save: {\n            processing: state.admin.language.save.processing,\n            error: state.admin.language.save.error,\n            saved: state.admin.language.save.saved\n        }\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchInfo: (key) => dispatch(actions.loadLangInfo(key)),\n        holdText: (text) => dispatch(actions.adminHoldLangEditingText(text)),\n        saveText: () => dispatch(actions.saveLangInfo()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminLanguageEdit));\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Edit from './Edit/Edit';\n\nclass AdminLanguage extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/admin/language/edit/:key\" component={Edit} />\n                <Route path=\"/admin/language/:section\" component={List} />\n                <Route path=\"/\" component={List} />\n            </Switch>\n        );\n    }\n}\n\nexport default AdminLanguage;\n","import React from 'react';\n\nimport Spinner from '../../UI/Spinner/Spinner';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport IconLink from '../../UI/IconLink/IconLink';\nimport Message from '../../UI/Message/Message';\n\nimport './DashboardBlock.css';\n\nconst dashboardBlock = (props) => {\n    let body = null;\n    if (props.loaded) {\n        let refresh = null;\n        if (props.refresh) {\n            refresh = (\n                <div className=\"RefreshWrapper\">\n                    <IconButton icon_type=\"refresh\"\n                        clicked={props.refresh} />\n                </div>\n            );\n        }\n        let data = null;\n        let more = null;\n        if (props.children) {\n            data = (\n                <div className=\"YesData\">\n                    {props.children}\n                </div>\n            );\n            if (props.more) {\n                more = (\n                    <div className=\"MoreLink\">\n                        <IconLink icon=\"fas fa-arrow-alt-circle-right\"\n                            to={props.more}\n                            title=\"See more\"\n                            append_text=\"More\" />\n                    </div>\n                );\n            }\n        } else {\n            data = <div className=\"NoData\">There is nothing to show</div>\n        }\n        body = (\n            <div className=\"DashboardBlockBody Loaded\">\n                {refresh}\n                {data}\n                {more}\n            </div>\n        );\n    } else {\n        let message = null;\n        if (props.error) {\n            message = (\n                <Message type=\"error\"\n                    text={props.error}\n                    tryagain={props.refresh} />\n            );\n        }\n        body = (\n            <div className=\"DashboardBlockBody Waiting\">\n                <Spinner />\n                {message}\n            </div>\n        );\n    }\n    return (\n        <div className=\"DashboardBlock\">\n            <h4>{props.title}</h4>\n            {body}\n        </div>\n    );\n};\n\nexport default dashboardBlock;\n","import React from 'react';\nimport { ResponsivePie } from '@nivo/pie';\n\nimport './Pie.css';\n\nconst pieChart = (props) => {\n\n    return (\n        <div className=\"PieChart\">\n            <div className=\"Diagram\" style={{ height: '250px' }} key=\"diagram\">\n                <ResponsivePie data={props.data}\n                    margin={{ top: 20, right: 40, bottom: 20, left: 40 }}\n                    innerRadius={0.5}\n                    padAngle={0.7}\n                    cornerRadius={3}\n                    colors={{ datum: 'data.color' }}\n                    borderWidth={0.5}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                    enableRadialLabels={false}\n                    />\n            </div>\n            <div className=\"Legend\" key=\"legend\">\n                {props.data.map((item, idx) =>\n                    <div className=\"Item\" key={'item-' + idx}>\n                        <div key=\"dot\" className=\"Cell Dot\">\n                            <span className=\"InnerDot\" style={{ backgroundColor: item.color }}></span>\n                        </div>\n                        <div key=\"label\" className=\"Cell Label\">{item.label}</div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default pieChart;\n","import { schemeSet3, schemeGreys } from 'd3-scale-chromatic';\nimport { shuffle } from './utils';\n\nexport const statsToChartData = (stats) => {\n    if (typeof stats != 'object') {\n        stats = {};\n    }\n    const cdata = [];\n    let scheme = [];\n    for (let i = 0; i < 12; ++i) {\n        scheme.push(schemeSet3[i]);\n    }\n    if (Object.keys(stats).length > scheme.length) {\n        const count = Object.keys(stats).length - scheme.length;\n        const extraScheme = schemeGreys[count + 2];\n        for (let k = 0; k < count; ++k) {\n            scheme.push(extraScheme[k]);\n        }\n    }\n    const schemeRandom = shuffle(scheme);\n    let idx = 0;\n    for (const key in stats) {\n        cdata.push({\n            id: key,\n            label: key,\n            value: stats[key],\n            color: schemeRandom[idx++],\n        });\n    }\n    if (cdata.length < 1) {\n        cdata.push({\n            id: 'NO DATA',\n            label: 'NO DATA',\n            value: 1\n        });\n    }\n    return cdata;\n};\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Block from '../../../components/Admin/DashboardBlock/DashboardBlock';\nimport Table from '../../../components/UI/Table/Table';\nimport PieChart from '../../../components/Admin/Charts/Pie/Pie';\nimport Logger from '../../../utils/Logger';\nimport * as actions from '../../../storage/redux/actions/index';\nimport { statsToChartData } from '../../../utils/dashboard';\n\nclass AdminDashboard extends Component {\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Dashboard');\n        this.props.fetchResponses();\n        this.props.fetchContacts();\n        this.props.fetchStats('books');\n        this.props.fetchStats('type');\n    }\n\n    refreshResponses = () => {\n        this.props.fetchResponses();\n    };\n\n    refreshContacts = () => {\n        this.props.fetchContacts();\n    };\n\n    refreshStatsBooks = () => {\n        this.props.fetchStats('books');\n    };\n\n    refreshStatsType = () => {\n        this.props.fetchStats('type');\n    };\n\n    render() {\n        Logger.setComponent('Admin/Dashboard');\n\n        const blocks = [];\n\n        // Responses\n        let responses = null;\n        if (this.props.responses.loaded && this.props.responses.data.length > 0) {\n            const rcols = [\n                { key: 'date', title: 'Date' },\n                { key: 'type', title: 'Employee Type' },\n                { key: 'agency', title: 'Agency?' },\n                { key: 'books', title: 'On the Books?' },\n            ];\n            responses = <Table size=\"tiny\" rows={this.props.responses.data} cols={rcols} />;\n        }\n        blocks.push(<Block\n            key=\"responses\"\n            title=\"Recent Responses\"\n            loaded={this.props.responses.loaded}\n            error={this.props.responses.error}\n            refresh={this.refreshResponses}\n            more=\"/admin/responses\">\n            {responses}\n        </Block>);\n\n        // Contacts\n        let contacts = null;\n        if (this.props.contacts.loaded && this.props.contacts.data.length > 0) {\n            const ccols = [\n                { key: 'email', title: 'Email' },\n                { key: 'zip', title: 'ZIP Code' },\n            ];\n            contacts = <Table size=\"tiny\" rows={this.props.contacts.data} cols={ccols} />;\n        }\n        blocks.push(<Block\n            title=\"Recent Contacts\"\n            key=\"contacts\"\n            loaded={this.props.contacts.loaded}\n            error={this.props.contacts.error}\n            refresh={this.refreshContacts}\n            more=\"/admin/contacts\">\n            {contacts}\n        </Block>);\n\n        // On the Books chart\n        let bchart = null;\n        if (this.props.stats.books.loaded && Object.keys(this.props.stats.books.data).length > 0) {\n            bchart = (\n                <PieChart data={statsToChartData(this.props.stats.books.data)} />\n            );\n        }\n        blocks.push(<Block\n            title=\"On the Books\"\n            key=\"chart_books\"\n            loaded={this.props.stats.books.loaded}\n            error={this.props.stats.books.error}\n            refresh={this.refreshStatsBooks}>\n            {bchart}\n        </Block>);\n\n        // Employee Type chart\n        let tchart = null;\n        if (this.props.stats.type.loaded && Object.keys(this.props.stats.type.data).length > 0) {\n            tchart = (\n                <PieChart data={statsToChartData(this.props.stats.type.data)} />\n            );\n        }\n        blocks.push(<Block\n            title=\"Employee Type\"\n            key=\"chart_type\"\n            loaded={this.props.stats.type.loaded}\n            error={this.props.stats.type.error}\n            refresh={this.refreshStatsType}>\n            {tchart}\n        </Block>);\n\n        return (\n            <div className=\"Dashboard\">\n                {blocks}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        responses: state.admin.dashboard.responses,\n        contacts: state.admin.dashboard.contacts,\n        stats: state.admin.dashboard.stats\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchResponses: () => dispatch(actions.loadDashboardResponses()),\n        fetchContacts: () => dispatch(actions.loadDashboardContacts()),\n        fetchStats: (key) => dispatch(actions.loadDashboardStats(key))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboard);\n","import { DateTime } from 'luxon';\nimport { shuffle } from '../../../../utils/utils';\n\nimport * as actionTypes from '../actionTypes';\nimport Api from '../../../Api';\nimport Logger from '../../../../utils/Logger';\n\nexport const adminDashResponsesStarted = () => {\n    return {\n        type: actionTypes.ADMIN_DASH_RESPONSES_STARTED\n    };\n};\n\nexport const adminDashResponsesFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_DASH_RESPONSES_FAILED,\n        error: error\n    };\n}\n\nexport const adminDashResponsesSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_DASH_RESPONSES_SUCCEEDED,\n        data: data\n    };\n}\n\nexport const loadDashboardResponses = () => {\n    return (dispatch, getState) => {\n        dispatch(adminDashResponsesStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getRecentResponses(data)\n            .then((response) => {\n                const found = response.data.recent ? response.data.recent : [];\n                const recent = found.map((row) => {\n                    let dt = DateTime.fromISO(row.submitted);\n                    let formatted = dt.toFormat('LLL dd');\n                    return { ...row, date: formatted };\n                });\n                dispatch(adminDashResponsesSucceeded(recent));\n            })\n            .catch(error => {\n                const msg = 'Could not fetch recent responses';\n                if (!error.isAxiosError) {\n                    const lcode = '89C8';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    Logger.alert(msg, { api_error: Api.parseAxiosError(error) });\n                }\n                dispatch(adminDashResponsesFailed(msg));\n            });\n    };\n};\n\nexport const adminDashContactsStarted = () => {\n    return {\n        type: actionTypes.ADMIN_DASH_CONTACTS_STARTED\n    };\n};\n\nexport const adminDashContactsFailed = (error) => {\n    return {\n        type: actionTypes.ADMIN_DASH_CONTACTS_FAILED,\n        error: error\n    };\n}\n\nexport const adminDashContactsSucceeded = (data) => {\n    return {\n        type: actionTypes.ADMIN_DASH_CONTACTS_SUCCEEDED,\n        data: data\n    };\n}\n\nexport const adminDashStatsStarted = (key) => {\n    return {\n        type: actionTypes.ADMIN_DASH_STATS_STARTED,\n        key: key\n    };\n}\n\nexport const adminDashStatsFailed = (key, error) => {\n    return {\n        type: actionTypes.ADMIN_DASH_STATS_FAILED,\n        key: key,\n        error: error\n    };\n}\n\nexport const adminDashStatsSucceeded = (key, data) => {\n    return {\n        type: actionTypes.ADMIN_DASH_STATS_SUCCEEDED,\n        key: key,\n        data: data\n    };\n}\n\nexport const loadDashboardContacts = () => {\n    return (dispatch, getState) => {\n        dispatch(adminDashContactsStarted());\n        const data = { token: getState().admin.auth.token };\n        Api.getRecentContacts(data)\n            .then((response) => {\n                const found = response.data.recent ? response.data.recent : [];\n                // I promised not to associate contact info with response data,\n                // but at low volume and in order, it's fairly obvious, so\n                // shuffle before displaying\n                const recent = shuffle(found.map(row => {\n                    return {\n                        email: row.email,\n                        zip: row.zip_code\n                    };\n                }));\n                dispatch(adminDashContactsSucceeded(recent));\n            })\n            .catch(error => {\n                const msg = 'Could not fetch recent contacts';\n                if (!error.isAxiosError) {\n                    const lcode = '4EC9';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    Logger.alert(msg, { api_error: Api.parseAxiosError(error) });\n                }\n                dispatch(adminDashContactsFailed(msg));\n            });\n    };\n};\n\nexport const loadDashboardStats = (key) => {\n    return (dispatch, getState) => {\n        dispatch(adminDashStatsStarted(key));\n        const data = { token: getState().admin.auth.token };\n        Api.getStats(key, data)\n            .then((response) => {\n                const stats = response.data.stats ? response.data.stats : {};\n                dispatch(adminDashStatsSucceeded(key, stats));\n            })\n            .catch(error => {\n                const msg = 'Could not fetch \"' + key + '\" stats';\n                if (!error.isAxiosError) {\n                    const lcode = '12C4';\n                    Logger.alert('Unknown error', { location_code: lcode, error: error });\n                } else {\n                    Logger.alert(msg, { api_error: Api.parseAxiosError(error) });\n                }\n                dispatch(adminDashStatsFailed(key, msg));\n            });\n    };\n};\n\n","import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\nimport { connect } from 'react-redux';\n\nimport AdminPage from '../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Table from '../../../components/UI/Table/Table';\nimport Message from '../../../components/UI/Message/Message';\nimport ActionButtons from '../../../components/Admin/ActionButtons/ActionButtons';\nimport Api from '../../../storage/Api';\nimport Questions from '../../../logic/Questions';\nimport Logger from '../../../utils/Logger';\nimport * as actions from '../../../storage/redux/actions/index';\n\nclass AdminResponses extends Component {\n\n    toggle_cols = {\n        'hours per week': true,\n        'length of employment': true,\n        'hours per year': true,\n        'self-quarantine': true,\n        'family quarantine': true,\n        'stay at home': true,\n        'school closed': true,\n    };\n\n    refresh = () => {\n        this.props.fetch();\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Responses/List');\n        this.props.fetch();\n    }\n\n    render() {\n        Logger.setComponent('Admin/Responses/List');\n        let body = null;\n        if (this.props.loaded) {\n            let cols = [\n                { key: 'date', title: 'Date' },\n            ];\n            const rows = this.props.data.map(row => {\n                let tablerow = {\n                    key: row.response_id\n                };\n                const do_cols = cols.length < 2;\n                for (var qcode of Questions.question_order) {\n                    const spec = Questions.getEnglishSpec(qcode);\n                    if (do_cols) {\n                        cols.push({\n                            key: qcode,\n                            title: spec.title\n                        });\n                    }\n                    tablerow[qcode] = row[qcode];\n                }\n                let dt = DateTime.fromISO(row.submitted);\n                let formatted = dt.toFormat('LLL dd');\n                tablerow.date = formatted;\n                return tablerow;\n            });\n            const url = Api.getResponsesDownloadUrl(this.props.token);\n            const now = DateTime.local();\n            const filename = 'hnct-' + now.toISODate() + '-responses.csv';\n            body = (\n                <Aux>\n                    <ActionButtons buttons={[{icon: \"fas fa-download\",\n                        title: 'Download',\n                        link: url,\n                        download: filename}]} />\n                    <Table rows={rows} cols={cols}\n                        toggle_cols={this.toggle_cols}\n                        toggle_expand_title=\"show all answers\"\n                        toggle_collapse_title=\"show fewer answers\" />\n                </Aux>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        let title = 'Responses';\n        let crumbs = ['Admin', 'Responses', 'List'];\n        return (\n            <AdminPage\n                title={title}\n                breadcrumbs={crumbs}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.admin.auth.token,\n        loaded: state.admin.responses.loaded,\n        error: state.admin.responses.error,\n        data: state.admin.responses.data\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetch: () => dispatch(actions.loadResponses()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminResponses);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { DateTime } from 'luxon';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport ActionButtons from '../../../../components/Admin/ActionButtons/ActionButtons';\nimport Table from '../../../../components/UI/Table/Table';\nimport Logger from '../../../../utils/Logger';\nimport * as actions from '../../../../storage/redux/actions/index';\n\nclass AdminContactsListRaw extends Component {\n\n    cols = [\n        { key: 'email', title: 'Email' },\n        { key: 'zip', title: 'ZIP Code' }\n    ];\n\n    refresh = () => {\n        this.props.fetchContacts();\n    };\n\n    componentDidMount() {\n        Logger.setComponent('Admin/Contacts/ListRaw');\n        this.props.fetchContacts();\n    }\n\n    render() {\n        Logger.setComponent('Admin/Contacts/ListRaw');\n        let body = null;\n        if (this.props.loaded) {\n            let rows = this.props.contacts\n                .sort()\n                .map(contact => {\n                    return {\n                        email: contact.email,\n                        zip: contact.zip_code\n                    };\n                });\n            const url = Api.getRawContactsDownloadUrl(this.props.token);\n            const now = DateTime.local();\n            const filename = 'hnct-' + now.toISODate() + '-contacts.csv';\n            console.log(url);\n            body = (\n                <Aux>\n                    <h3>Raw Contacts</h3>\n                    <ActionButtons buttons={[{icon: \"fas fa-download\",\n                        title: 'Download',\n                        link: url,\n                        download: filename}]} />\n                    <Table\n                        rows={rows}\n                        cols={this.cols} />\n                </Aux>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.props.error ?\n                        <Message type=\"error\" text={this.props.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Contacts: Raw\"\n                breadcrumbs={['Admin', 'Contacts', 'List Raw']}>\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.admin.auth.token,\n        loaded: state.admin.contacts.listraw.loaded,\n        error: state.admin.contacts.listraw.error,\n        contacts: state.admin.contacts.listraw.data,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchContacts: () => dispatch(actions.loadContactsRaw())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminContactsListRaw));\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ListRaw from './ListRaw/ListRaw';\n\nclass AdminContacts extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/\" component={ListRaw} />\n            </Switch>\n        );\n    }\n\n}\n\nexport default AdminContacts;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport './AdminLayout.css';\n\nclass AdminLayout extends Component {\n    render() {\n\n        return (\n            <div className=\"Admin\">\n                <div className=\"AdminNav\">\n                    <ul>\n                        <li><NavLink exact to=\"/admin\">Dashboard</NavLink></li>\n                        <li><NavLink to=\"/admin/language\">Language</NavLink></li>\n                        <li><NavLink to=\"/admin/results\">Results</NavLink></li>\n                        <li><NavLink to=\"/admin/resources\">Resources</NavLink></li>\n                        <li><NavLink to=\"/admin/advanced\">Advanced</NavLink></li>\n                    </ul>\n                </div>\n                <div className=\"AdminMain\">\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminLayout;\n","import React from 'react';\n\nimport './LoginBox.css';\n\nconst loginBox = (props) => {\n    let button = null;\n    if (props.loading) {\n        button = <button disabled=\"disabled\" className=\"Loading\">{props.lang.button_text}</button>;\n    } else {\n        button = <button type=\"submit\">{props.lang.button_text}</button>;\n    }\n\n    return (\n        <div className=\"LoginBox\">\n            {props.header ? (\n                <h3>{props.header}</h3>\n            ) : null}\n            {props.loginError ?\n                <div className=\"Error\">{props.lang.login_error}</div>\n            : null}\n            <form method=\"post\" onSubmit={props.submitted}>\n                <label>{props.lang.username_label}</label>\n                <input type=\"text\" name=\"username\" value={props.username} onChange={props.usernameChanged} autoComplete=\"username\" />\n                <label>{props.lang.password_label}</label>\n                <input type=\"password\" name=\"password\" value={props.password} onChange={props.passwordChanged} autoComplete=\"current-password\" />\n                <div className=\"ButtonContainer\">\n                    {button}\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default loginBox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LoginBox from '../../components/LoginBox/LoginBox';\nimport Language from '../../utils/Language';\nimport Logger from '../../utils/Logger';\nimport * as actions from '../../storage/redux/actions/index';\n\nclass Login extends Component {\n\n    state = {\n        username: '',\n        password: '',\n    };\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    };\n\n    changePassword = (e) => {\n        this.setState({ password: e.target.value });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        if (this.props.login_type === 'prelaunch') {\n            this.props.onPrelaunchLogin(this.state.username, this.state.password);\n        } else {\n            this.props.onAdminLogin(this.state.username, this.state.password);\n        }\n    };\n\n    componentDidMount() {\n        if (this.props.login_type === 'prelaunch') {\n            Logger.setComponent('Prelaunch/Login');\n        } else {\n            Logger.setComponent('Admin/Login');\n        }\n    }\n\n    render() {\n        if (this.props.login_type === 'prelaunch') {\n            Logger.setComponent('Prelaunch/Login');\n        } else {\n            Logger.setComponent('Admin/Login');\n        }\n        const status = this.props.login_type === 'prelaunch' ? this.props.prelaunch_status : this.props.admin_status;\n        if (status.logged_in) {\n            return null;\n        } else {\n\n            const lang = {\n                button_text: Language.get('prelaunch_login_button_text'),\n                login_error: Language.get('prelaunch_login_error'),\n                username_label: Language.get('prelaunch_login_username_label'),\n                password_label: Language.get('prelaunch_login_password_label'),\n            };\n\n            return <LoginBox\n                header={this.props.header}\n                loading={status.processing}\n                loginError={status.error}\n                username={this.state.username}\n                password={this.state.password}\n                usernameChanged={this.changeUsername}\n                passwordChanged={this.changePassword}\n                submitted={this.submit}\n                lang={lang} />;\n\n        }\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        prelaunch_status: {\n            logged_in: state.prelaunch.username === null ? false : true,\n            processing: state.prelaunch.processing,\n            error: state.prelaunch.error,\n        },\n        admin_status: {\n            logged_in: state.admin.auth.username === null ? false : true,\n            processing: state.admin.auth.processing,\n            error: state.admin.auth.error,\n        }\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPrelaunchLogin: (username, password) => dispatch(actions.authenticatePrelaunch(username, password)),\n        onAdminLogin: (username, password) => dispatch(actions.authenticateAdmin(username, password)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Advanced from './Advanced/Advanced';\nimport Results from './Results/Results';\nimport Resources from './Resources/Resources';\nimport Language from './Language/Language';\nimport Dashboard from './Dashboard/Dashboard';\nimport Responses from './Responses/Responses';\nimport Contacts from './Contacts/Contacts';\nimport AdminLayout from '../../hoc/AdminLayout/AdminLayout';\nimport Login from '../Login/Login';\nimport * as actions from '../../storage/redux/actions/index';\n\nimport './Admin.css';\n\nclass Admin extends Component {\n\n    componentDidMount() {\n        this.props.checkAuthState();\n    }\n\n    render() {\n        if (this.props.authenticated) {\n            return (\n                <AdminLayout>\n                    <Switch>\n                        <Route path=\"/admin/advanced\" component={Advanced} />\n                        <Route path=\"/admin/resources\" component={Resources} />\n                        <Route path=\"/admin/results\" component={Results} />\n                        <Route path=\"/admin/language\" component={Language} />\n                        <Route path=\"/admin/responses\" component={Responses} />\n                        <Route path=\"/admin/contacts\" component={Contacts} />\n                        <Route path=\"/admin\" component={Dashboard} />\n                    </Switch>\n                </AdminLayout>\n            );\n\n        } else {\n            const header = 'Admin Login';\n            return (\n                <div className=\"AdminLogin\">\n                    <Login header={header} />\n                </div>\n            );\n        }\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        authenticated: state.admin.auth.username === null ? false : true,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        checkAuthState: () => dispatch(actions.checkAdminAuthState())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from '../../hoc/Layout/Layout';\nimport BenefitsTool from '../../containers/BenefitsTool/BenefitsTool';\nimport Admin from '../../containers/Admin/Admin';\nimport Language from '../../utils/Language';\n\nclass Main extends Component {\n\n    render() {\n        const lang = {\n            layout: {\n                logo_alt_text: Language.get('layout_logo_alt_text'),\n                header_title: Language.get('layout_header_title')\n            }\n        };\n        return (\n            <Layout lang={lang.layout}>\n                <Switch>\n                    <Route path=\"/admin\" component={Admin} />\n                    <Route path=\"/\" component={BenefitsTool} />\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Before launch, we loaded the PreLaunch container to wrap everything in a global access login\nimport Main from './containers/Main/Main';\n\nimport './App.css';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject} from '../utility';\n\nconst initialState = {\n    visitor_id: null,\n    visitor_prefs: null,\n    answers: null,\n    visitor_id_loaded: false,\n    cookies_fetch_error: null,\n    answers_loaded: false,\n    answers_push_error: false,\n    step_saved: false,\n    answers_update_error: false,\n    loaded: false,\n    error: null\n};\n\nconst setLoaded = (state) => {\n    let newState = state;\n    if (state.visitor_id_loaded && state.answers_loaded) {\n        newState = updateObject(state, { loaded: true });\n    } else {\n        newState = updateObject(state, { loaded: false });\n    }\n    return newState;\n};\n\nconst toolCookiesLoadFailed = (state, action) => {\n    return setLoaded(updateObject(state, {\n        visitor_id_loaded: true,\n        answers_loaded: true,\n        cookies_fetch_error: action.error\n    }));\n};\n\nconst toolCookiesLoaded = (state, action) => {\n    return setLoaded(updateObject(state, {\n        visitor_id_loaded: true,\n        answers_loaded: true,\n        visitor_id: action.visitor_id,\n        visitor_prefs: action.visitor_prefs,\n        answers: action.answers\n    }));\n};\n\nconst answersClear = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: true,\n        answers: {}\n    }));\n};\n\nconst questionInit = (state, action) => {\n    // The action includes the current step in its payload, but I don't think we actually need that\n    return updateObject(state, {\n        step_saved: false,\n        answers_push_error: false\n    });\n};\n\nconst answersPushStarted = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: false,\n        answers_push_error: false,\n        step_saved: false\n    }));\n};\n\nconst answersPushCompleted = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: true,\n        answers_push_error: false,\n        answers: action.answers,\n        step_saved: true\n    }));\n};\n\nconst answersPushFailed = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: true,\n        answers_push_error: true,\n        step_saved: false\n    }));\n};\n\nconst answersUpdateStarted = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: false,\n        answers_update_error: false\n    }));\n};\n\nconst answersUpdateCompleted = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: true,\n        answers_update_error: false,\n        answers: action.answers\n    }));\n};\n\nconst answersUpdateFailed = (state, action) => {\n    return setLoaded(updateObject(state, {\n        answers_loaded: true,\n        answers_update_error: true\n    }));\n};\n\nconst visitorPrefsStored = (state, action) => {\n    return updateObject(state, {\n        visitor_prefs: action.visitor_prefs\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOOL_COOKIES_LOAD_FAILED: return toolCookiesLoadFailed(state, action);\n        case actionTypes.TOOL_COOKIES_LOADED: return toolCookiesLoaded(state, action);\n        case actionTypes.ANSWERS_CLEAR: return answersClear(state, action);\n        case actionTypes.QUESTION_INIT: return questionInit(state, action);\n        case actionTypes.ANSWERS_PUSH_STARTED: return answersPushStarted(state, action);\n        case actionTypes.ANSWERS_PUSH_COMPLETED: return answersPushCompleted(state, action);\n        case actionTypes.ANSWERS_PUSH_FAILED: return answersPushFailed(state, action);\n        case actionTypes.ANSWERS_UPDATE_STARTED: return answersUpdateStarted(state, action);\n        case actionTypes.ANSWERS_UPDATE_COMPLETED: return answersUpdateCompleted(state, action);\n        case actionTypes.ANSWERS_UPDATE_FAILED: return answersUpdateFailed(state, action);\n        case actionTypes.VISITOR_PREFS_STORED: return visitorPrefsStored(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        username: null,\n        processing: false,\n        token: null,\n        error: null,\n        timed_logout: false\n    };\n};\n\nexport const adminLoginCheckStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        auth: updateObject(state.auth, {\n            timed_logout: false\n        })\n    }), true);\n};\n\nexport const adminLoginStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        auth: updateObject(state.auth, {\n            username: null,\n            processing: false,\n            token: null,\n            error: null,\n            timed_logout: false\n        })\n    }), true);\n};\n\nexport const adminLoginFailed = (state, action) => {\n    return updateObject(state, {\n        auth: updateObject(state.auth, {\n            username: null,\n            processing: false,\n            token: null,\n            error: action.error\n        })\n    });\n};\n\nexport const adminLoginSucceeded = (state, action) => {\n    return updateObject(state, {\n        auth: updateObject(state.auth, {\n            username: action.username,\n            processing: false,\n            token: action.token,\n            error: null\n        })\n    });\n};\n\nexport const adminLogout = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        auth: updateObject(state.auth, {\n            username: null,\n            processing: false,\n            token: null,\n            error: null,\n            timed_logout: action.timed_logout\n        })\n    }), !action.timed_logout);\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        responses: {\n            loaded: false,\n            error: null,\n            data: null\n        },\n        contacts: {\n            loaded: false,\n            error: null,\n            data: null\n        },\n        stats: {\n            books: {\n                loaded: false,\n                error: null,\n                data: null\n            },\n            type: {\n                loaded: false,\n                error: null,\n                data: null\n            }\n        }\n    };\n};\n\nexport const adminDashResponsesStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            responses: updateObject(state.dashboard.responses, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminDashResponsesFailed = (state, action) => {\n    return updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            responses: updateObject(state.dashboard.responses, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminDashResponsesSucceeded = (state, action) => {\n    return updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            responses: updateObject(state.dashboard.responses, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminDashContactsStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            contacts: updateObject(state.dashboard.contacts, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminDashContactsFailed = (state, action) => {\n    return updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            contacts: updateObject(state.dashboard.contacts, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminDashContactsSucceeded = (state, action) => {\n    return updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            contacts: updateObject(state.dashboard.contacts, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminDashStatsStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            stats: updateObject(state.dashboard.stats, {\n                [action.key]: updateObject(state.dashboard.stats[action.key], {\n                    loaded: false,\n                    error: null,\n                    data: null\n                })\n            })\n        })\n    }), true);\n};\n\nexport const adminDashStatsFailed = (state, action) => {\n    return updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            stats: updateObject(state.dashboard.stats, {\n                [action.key]: updateObject(state.dashboard.stats[action.key], {\n                    loaded: false,\n                    error: action.error,\n                    data: null\n                })\n            })\n        })\n    });\n};\n\nexport const adminDashStatsSucceeded = (state, action) => {\n    return updateObject(state, {\n        dashboard: updateObject(state.dashboard, {\n            stats: updateObject(state.dashboard.stats, {\n                [action.key]: updateObject(state.dashboard.stats[action.key], {\n                    loaded: true,\n                    error: null,\n                    data: action.data\n                })\n            })\n        })\n    });\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        list: {\n            loaded: false,\n            error: null,\n            data: null\n        },\n        fetch: {\n            loaded: false,\n            error: null,\n            data: null\n        },\n        overload: {\n            processing: false,\n            data: null,\n            error: null\n        },\n        replace: {\n            processing: false,\n            data: null,\n            error: null\n        },\n        save: {\n            processing: false,\n            data: null,\n            info: null,\n            error: null\n        },\n        compare: {\n            avnum: null,\n            bvnum: null,\n            processing: false,\n            error: null,\n            data: null,\n        }\n    };\n};\n\nexport const adminFetchDeploymentsStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            list: updateObject(state.deploys.list, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchDeploymentsFailed = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            list: updateObject(state.deploys.list, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchDeploymentsSucceeded = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            list: updateObject(state.deploys.list, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminFetchDeploymentStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            fetch: updateObject(state.deploys.fetch, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchDeploymentFailed = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            fetch: updateObject(state.deploys.fetch, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchDeploymentSucceeded = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            fetch: updateObject(state.deploys.fetch, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminOverloadDeploymentStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            overload: updateObject(state.deploys.overload, {\n                processing: true,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminOverloadDeploymentFailed = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            overload: updateObject(state.deploys.overload, {\n                processing: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminOverloadDeploymentSucceeded = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            overload: updateObject(state.deploys.overload, {\n                processing: false,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminReplaceWithDeploymentStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            replace: updateObject(state.deploys.replace, {\n                processing: true,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminReplaceWithDeploymentFailed = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            replace: updateObject(state.deploys.replace, {\n                processing: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminReplaceWithDeploymentSucceeded = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            replace: updateObject(state.deploys.replace, {\n                processing: false,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminSaveNewDeploymentStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            save: updateObject(state.deploys.save, {\n                processing: true,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminSaveNewDeploymentFailed = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            save: updateObject(state.deploys.save, {\n                processing: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminSaveNewDeploymentSucceeded = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            save: updateObject(state.deploys.save, {\n                processing: false,\n                error: null,\n                data: action.data,\n                info: action.info\n            })\n        })\n    });\n};\n\nexport const adminCompareDeploymentsStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            compare: updateObject(state.deploys.compare, {\n                avnum: action.avnum,\n                bvnum: action.bvnum,\n                processing: true,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminCompareDeploymentsFailed = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            compare: updateObject(state.deploys.compare, {\n                processing: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminCompareDeploymentsSucceeded = (state, action) => {\n    return updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            compare: updateObject(state.deploys.compare, {\n                processing: false,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminCompareDeploymentsReset = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        deploys: updateObject(state.deploys, {\n            compare: updateObject(state.deploys.compare, {\n                avnum: null,\n                bvnum: null,\n                processing: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        listraw: {\n            loaded: false,\n            error: null,\n            data: null\n        }\n    };\n};\n\nexport const adminFetchContactsRawStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        contacts: updateObject(state.contacts, {\n            listraw: updateObject(state.contacts.listraw, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchContactsRawFailed = (state, action) => {\n    return updateObject(state, {\n        contacts: updateObject(state.contacts, {\n            listraw: updateObject(state.contacts.listraw, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchContactsRawSucceeded = (state, action) => {\n    return updateObject(state, {\n        contacts: updateObject(state.contacts, {\n            listraw: updateObject(state.contacts.listraw, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        list: {\n            loaded: false,\n            error: null,\n            data: null\n        },\n        info: {\n            loaded: false,\n            error: null,\n            data: null,\n        },\n        current: {\n            key: null,\n            lang: 'en',\n            text: null\n        },\n        save: {\n            processing: false,\n            error: null,\n            saved: false\n        }\n    };\n};\n\nexport const adminFetchLangListStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        language: updateObject(state.language, {\n            list: updateObject(state.language.list, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchLangListFailed = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            list: updateObject(state.language.list, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchLangListSucceeded = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            list: updateObject(state.language.list, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminFetchLangInfoStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        language: updateObject(state.language, {\n            info: updateObject(state.language.info, {\n                loaded: false,\n                error: null,\n                data: null,\n            }),\n            current: updateObject(state.language.current, {\n                key: action.key,\n                text: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchLangInfoFailed = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            info: updateObject(state.language.info, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchLangInfoSucceeded = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            info: updateObject(state.language.info, {\n                loaded: true,\n                error: null,\n                data: action.data,\n            }),\n            current: updateObject(state.language.current, {\n                text: action.text\n            })\n        })\n    });\n};\n\nexport const adminHoldLangTranslation = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            current: updateObject(state.language.current, {\n                text: action.text\n            })\n        })\n    });\n};\n\nexport const adminSaveLangInfoStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        language: updateObject(state.language, {\n            save: updateObject(state.language.save, {\n                processing: true,\n                error: null,\n                saved: false\n            })\n        })\n    }), true);\n};\n\nexport const adminSaveLangInfoFailed = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            save: updateObject(state.language.save, {\n                processing: false,\n                error: action.error,\n                saved: false\n            })\n        })\n    });\n};\n\nexport const adminSaveLangInfoSucceeded = (state, action) => {\n    return updateObject(state, {\n        language: updateObject(state.language, {\n            save: updateObject(state.language.save, {\n                processing: false,\n                error: null,\n                saved: true\n            })\n        })\n    });\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        list: {\n            loaded: false,\n            error: null,\n            data: null,\n            benefit: null\n        },\n        delete: {\n            candidate: null,\n            confirming: false,\n            processing: false,\n            deleted: false,\n            error: null\n        },\n        info: {\n            loaded: false,\n            error: null,\n            data: null\n        },\n        save: {\n            processing: false,\n            error: null,\n            saved: false,\n            reload_id: null\n        }\n    };\n};\n\nexport const adminFetchResourcesListStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            list: updateObject(state.resources.list, {\n                loaded: false,\n                error: null,\n                data: null,\n                benefit: action.benefit\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchResourcesListFailed = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            list: updateObject(state.resources.list, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchResourcesListSucceeded = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            list: updateObject(state.resources.list, {\n                loaded: true,\n                error: null,\n                data: action.data,\n                benefit: action.benefit\n            })\n        })\n    });\n};\n\nexport const adminRequestResourceDelete = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            delete: updateObject(state.resources.delete, {\n                candidate: action.candidate,\n                confirming: true,\n                processing: false,\n                deleted: false,\n                error: null\n            })\n        })\n    }));\n};\n\nexport const adminCancelResourceDelete = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            delete: updateObject(state.resources.delete, {\n                candidate: null,\n                confirming: false,\n                processing: false,\n                deleted: false,\n                error: null\n            })\n        })\n    }));\n};\n\nexport const adminDeleteResourceStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            delete: updateObject(state.resources.delete, {\n                confirming: false,\n                processing: true,\n                deleted: false,\n                error: null\n            })\n        })\n    }));\n};\n\nexport const adminDeleteResourceFailed = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            delete: updateObject(state.resources.delete, {\n                candidate: null,\n                confirming: false,\n                processing: false,\n                deleted: false,\n                error: action.error\n            })\n        })\n    });\n};\n\nexport const adminDeleteResourceSucceeded = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            delete: updateObject(state.resources.delete, {\n                candidate: null,\n                confirming: false,\n                processing: false,\n                deleted: true,\n                error: null\n            })\n        })\n    });\n};\n\nexport const adminDismissDeleteResourceMessage = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            delete: updateObject(state.resources.delete, {\n                candidate: null,\n                confirming: false,\n                processing: false,\n                deleted: false,\n                error: null\n            })\n        })\n    }));\n};\n\nexport const adminFetchResourceStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            info: updateObject(state.resources.info, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }));\n};\n\nexport const adminFetchResourceFailed = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            info: updateObject(state.resources.info, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchResourceSucceeded = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            info: updateObject(state.resources.info, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\nexport const adminSaveResourceStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            save: updateObject(state.resources.save, {\n                processing: true,\n                error: null,\n                saved: false,\n                reload_id: null\n            })\n        })\n    }));\n};\n\nexport const adminSaveResourceFailed = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            save: updateObject(state.resources.save, {\n                processing: false,\n                error: action.error,\n                saved: false,\n                reload_id: null\n            })\n        })\n    });\n};\n\nexport const adminSaveResourceSucceeded = (state, action) => {\n    return updateObject(state, {\n        resources: updateObject(state.resources, {\n            save: updateObject(state.resources.save, {\n                processing: false,\n                error: null,\n                saved: true,\n                reload_id: action.id\n            })\n        })\n    });\n};\n\nexport const adminSaveResourceMsgDismissed = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        resources: updateObject(state.resources, {\n            save: updateObject(state.resources.save, {\n                saved: false,\n                reload_id: null\n            })\n        })\n    }));\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        loaded: false,\n        error: null,\n        data: null\n    };\n};\n\nexport const adminResponsesStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        responses: updateObject(state.responses, {\n            loaded: false,\n            error: null,\n            data: null\n        })\n    }), true);\n};\n\nexport const adminResponsesFailed = (state, action) => {\n    return updateObject(state, {\n        responses: updateObject(state.responses, {\n            loaded: false,\n            error: action.error,\n            data: null\n        })\n    });\n};\n\nexport const adminResponsesSucceeded = (state, action) => {\n    return updateObject(state, {\n        responses: updateObject(state.responses, {\n            loaded: true,\n            error: null,\n            data: action.data\n        })\n    });\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        filter: {\n            loaded: false,\n            error: null,\n            benefit: null,\n            conditions: null,\n            scenarios: null,\n            filters: null\n        },\n        info: {\n            loaded: false,\n            error: null,\n            benefit: null,\n            scenario: null\n        },\n        save: {\n            processing: false,\n            error: null,\n            saved: false\n        }\n    };\n};\n\nexport const adminFetchResultsListStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        results: updateObject(state.results, {\n            filter: updateObject(state.results.filter, {\n                loaded: false,\n                error: null,\n                benefit: null,\n                conditions: null,\n                scenarios: null,\n                filters: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchResultsListFailed = (state, action) => {\n    return updateObject(state, {\n        results: updateObject(state.results, {\n            filter: updateObject(state.results.filter, {\n                loaded: false,\n                error: action.error,\n                benefit: null,\n                conditions: null,\n                scenarios: null,\n                filters: null\n            })\n        })\n    });\n};\n\nexport const adminFetchResultsListSucceeded = (state, action) => {\n    return updateObject(state, {\n        results: updateObject(state.results, {\n            filter: updateObject(state.results.filter, {\n                loaded: true,\n                error: null,\n                benefit: action.benefit,\n                conditions: action.conditions,\n                scenarios: action.scenarios,\n                filters: action.filters\n            })\n        })\n    });\n};\n\nexport const adminChangeResultsFilter = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        results: updateObject(state.results, {\n            filter: updateObject(state.results.filter, {\n                filters: updateObject(state.results.filter.filters, {\n                    [action.condition]: action.letter ? action.letter : null\n                })\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchScenarioStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        results: updateObject(state.results, {\n            info: updateObject(state.results.info, {\n                loaded: false,\n                error: null,\n                benefit: null,\n                scenario: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchScenarioFailed = (state, action) => {\n    return updateObject(state, {\n        results: updateObject(state.results, {\n            info: updateObject(state.results.info, {\n                loaded: false,\n                error: action.error,\n                benefit: null,\n                scenario: null\n            })\n        })\n    });\n};\n\nexport const adminFetchScenarioSucceeded = (state, action) => {\n    return updateObject(state, {\n        results: updateObject(state.results, {\n            info: updateObject(state.results.info, {\n                loaded: true,\n                error: null,\n                benefit: action.benefit,\n                scenario: action.scenario\n            })\n        })\n    });\n};\n\nexport const adminSaveScenarioStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        results: updateObject(state.results, {\n            save: updateObject(state.results.save, {\n                processing: true,\n                error: null,\n                saved: false\n            })\n        })\n    }), true);\n};\n\nexport const adminSaveScenarioFailed = (state, action) => {\n    return updateObject(state, {\n        results: updateObject(state.results, {\n            save: updateObject(state.results.save, {\n                processing: false,\n                error: action.error,\n                saved: false\n            })\n        })\n    });\n};\n\nexport const adminSaveScenarioSucceeded = (state, action) => {\n    return updateObject(state, {\n        results: updateObject(state.results, {\n            save: updateObject(state.results.save, {\n                processing: false,\n                error: null,\n                saved: true\n            })\n        })\n    });\n};\n\n","import { updateObject, updateAdminActivity } from '../../utility';\n\nexport const getInitialState = () => {\n    return {\n        benefit: {\n            loaded: false,\n            error: null,\n            data: null,\n            code: null\n        },\n        benefits: {\n            loaded: false,\n            error: null,\n            data: null\n        }\n    };\n};\n\nexport const adminFetchBenefitStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        shared: updateObject(state.shared, {\n            benefit: updateObject(state.shared.benefit, {\n                loaded: false,\n                error: null,\n                data: null,\n                code: action.code\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchBenefitFailed = (state, action) => {\n    return updateObject(state, {\n        shared: updateObject(state.shared, {\n            benefit: updateObject(state.shared.benefit, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchBenefitSucceeded = (state, action) => {\n    return updateObject(state, {\n        shared: updateObject(state.shared, {\n            benefit: updateObject(state.shared.benefit, {\n                loaded: true,\n                error: null,\n                data: action.data,\n                code: action.code\n            })\n        })\n    });\n};\n\n\nexport const adminFetchBenefitsListStarted = (state, action) => {\n    return updateAdminActivity(updateObject(state, {\n        shared: updateObject(state.shared, {\n            benefits: updateObject(state.shared.benefits, {\n                loaded: false,\n                error: null,\n                data: null\n            })\n        })\n    }), true);\n};\n\nexport const adminFetchBenefitsListFailed = (state, action) => {\n    return updateObject(state, {\n        shared: updateObject(state.shared, {\n            benefits: updateObject(state.shared.benefits, {\n                loaded: false,\n                error: action.error,\n                data: null\n            })\n        })\n    });\n};\n\nexport const adminFetchBenefitsListSucceeded = (state, action) => {\n    return updateObject(state, {\n        shared: updateObject(state.shared, {\n            benefits: updateObject(state.shared.benefits, {\n                loaded: true,\n                error: null,\n                data: action.data\n            })\n        })\n    });\n};\n\n","import * as actionTypes from '../actions/actionTypes';\n\nimport * as auth from './admin/auth';\nimport * as dashboard from './admin/dashboard';\nimport * as deploys from './admin/deploys';\nimport * as contacts from './admin/contacts';\nimport * as language from './admin/language';\nimport * as resources from './admin/resources';\nimport * as responses from './admin/responses';\nimport * as results from './admin/results';\nimport * as shared from './admin/shared';\n\nconst initialState = {\n    auth: auth.getInitialState(),\n    contacts: contacts.getInitialState(),\n    dashboard: dashboard.getInitialState(),\n    deploys: deploys.getInitialState(),\n    language: language.getInitialState(),\n    resources: resources.getInitialState(),\n    responses: responses.getInitialState(),\n    results: results.getInitialState(),\n    shared: shared.getInitialState(),\n    lastActive: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        // Auth\n        case actionTypes.ADMIN_LOGIN_CHECK_STARTED: return auth.adminLoginCheckStarted(state, action);\n        case actionTypes.ADMIN_LOGIN_STARTED: return auth.adminLoginStarted(state, action);\n        case actionTypes.ADMIN_LOGIN_FAILED: return auth.adminLoginFailed(state, action);\n        case actionTypes.ADMIN_LOGIN_SUCCEEDED: return auth.adminLoginSucceeded(state, action);\n        case actionTypes.ADMIN_LOGOUT: return auth.adminLogout(state, action);\n\n        // Contacts\n        case actionTypes.ADMIN_FETCH_CONTACTS_RAW_STARTED: return contacts.adminFetchContactsRawStarted(state, action);\n        case actionTypes.ADMIN_FETCH_CONTACTS_RAW_FAILED: return contacts.adminFetchContactsRawFailed(state, action);\n        case actionTypes.ADMIN_FETCH_CONTACTS_RAW_SUCCEEDED: return contacts.adminFetchContactsRawSucceeded(state, action);\n\n        // Dashboard\n        case actionTypes.ADMIN_DASH_RESPONSES_STARTED: return dashboard.adminDashResponsesStarted(state, action);\n        case actionTypes.ADMIN_DASH_RESPONSES_FAILED: return dashboard.adminDashResponsesFailed(state, action);\n        case actionTypes.ADMIN_DASH_RESPONSES_SUCCEEDED: return dashboard.adminDashResponsesSucceeded(state, action);\n        case actionTypes.ADMIN_DASH_CONTACTS_STARTED: return dashboard.adminDashContactsStarted(state, action);\n        case actionTypes.ADMIN_DASH_CONTACTS_FAILED: return dashboard.adminDashContactsFailed(state, action);\n        case actionTypes.ADMIN_DASH_CONTACTS_SUCCEEDED: return dashboard.adminDashContactsSucceeded(state, action);\n        case actionTypes.ADMIN_DASH_STATS_STARTED: return dashboard.adminDashStatsStarted(state, action);\n        case actionTypes.ADMIN_DASH_STATS_FAILED: return dashboard.adminDashStatsFailed(state, action);\n        case actionTypes.ADMIN_DASH_STATS_SUCCEEDED: return dashboard.adminDashStatsSucceeded(state, action);\n\n        // Deploys\n        case actionTypes.ADMIN_FETCH_DEPLOYMENTS_STARTED: return deploys.adminFetchDeploymentsStarted(state, action);\n        case actionTypes.ADMIN_FETCH_DEPLOYMENTS_FAILED: return deploys.adminFetchDeploymentsFailed(state, action);\n        case actionTypes.ADMIN_FETCH_DEPLOYMENTS_SUCCEEDED: return deploys.adminFetchDeploymentsSucceeded(state, action);\n        case actionTypes.ADMIN_FETCH_DEPLOYMENT_STARTED: return deploys.adminFetchDeploymentStarted(state, action);\n        case actionTypes.ADMIN_FETCH_DEPLOYMENT_FAILED: return deploys.adminFetchDeploymentFailed(state, action);\n        case actionTypes.ADMIN_FETCH_DEPLOYMENT_SUCCEEDED: return deploys.adminFetchDeploymentSucceeded(state, action);\n        case actionTypes.ADMIN_OVERLOAD_DEPLOYMENT_STARTED: return deploys.adminOverloadDeploymentStarted(state, action);\n        case actionTypes.ADMIN_OVERLOAD_DEPLOYMENT_FAILED: return deploys.adminOverloadDeploymentFailed(state, action);\n        case actionTypes.ADMIN_OVERLOAD_DEPLOYMENT_SUCCEEDED: return deploys.adminOverloadDeploymentSucceeded(state, action);\n        case actionTypes.ADMIN_REPLACE_WITH_DEPLOYMENT_STARTED: return deploys.adminReplaceWithDeploymentStarted(state, action);\n        case actionTypes.ADMIN_REPLACE_WITH_DEPLOYMENT_FAILED: return deploys.adminReplaceWithDeploymentFailed(state, action);\n        case actionTypes.ADMIN_REPLACE_WITH_DEPLOYMENT_SUCCEEDED: return deploys.adminReplaceWithDeploymentSucceeded(state, action);\n        case actionTypes.ADMIN_SAVE_NEW_DEPLOYMENT_STARTED: return deploys.adminSaveNewDeploymentStarted(state, action);\n        case actionTypes.ADMIN_SAVE_NEW_DEPLOYMENT_FAILED: return deploys.adminSaveNewDeploymentFailed(state, action);\n        case actionTypes.ADMIN_SAVE_NEW_DEPLOYMENT_SUCCEEDED: return deploys.adminSaveNewDeploymentSucceeded(state, action);\n        case actionTypes.ADMIN_COMPARE_DEPLOYMENTS_STARTED: return deploys.adminCompareDeploymentsStarted(state, action);\n        case actionTypes.ADMIN_COMPARE_DEPLOYMENTS_FAILED: return deploys.adminCompareDeploymentsFailed(state, action);\n        case actionTypes.ADMIN_COMPARE_DEPLOYMENTS_SUCCEEDED: return deploys.adminCompareDeploymentsSucceeded(state, action);\n        case actionTypes.ADMIN_COMPARE_DEPLOYMENTS_RESET: return deploys.adminCompareDeploymentsReset(state, action);\n\n        // Language\n        case actionTypes.ADMIN_FETCH_LANG_LIST_STARTED: return language.adminFetchLangListStarted(state, action);\n        case actionTypes.ADMIN_FETCH_LANG_LIST_FAILED: return language.adminFetchLangListFailed(state, action);\n        case actionTypes.ADMIN_FETCH_LANG_LIST_SUCCEEDED: return language.adminFetchLangListSucceeded(state, action);\n        case actionTypes.ADMIN_FETCH_LANG_INFO_STARTED: return language.adminFetchLangInfoStarted(state, action);\n        case actionTypes.ADMIN_FETCH_LANG_INFO_FAILED: return language.adminFetchLangInfoFailed(state, action);\n        case actionTypes.ADMIN_FETCH_LANG_INFO_SUCCEEDED: return language.adminFetchLangInfoSucceeded(state, action);\n        case actionTypes.ADMIN_SAVE_LANG_INFO_STARTED: return language.adminSaveLangInfoStarted(state, action);\n        case actionTypes.ADMIN_SAVE_LANG_INFO_FAILED: return language.adminSaveLangInfoFailed(state, action);\n        case actionTypes.ADMIN_SAVE_LANG_INFO_SUCCEEDED: return language.adminSaveLangInfoSucceeded(state, action);\n\n        // Responses\n        case actionTypes.ADMIN_RESPONSES_STARTED: return responses.adminResponsesStarted(state, action);\n        case actionTypes.ADMIN_RESPONSES_FAILED: return responses.adminResponsesFailed(state, action);\n        case actionTypes.ADMIN_RESPONSES_SUCCEEDED: return responses.adminResponsesSucceeded(state, action);\n\n        // Resources\n        case actionTypes.ADMIN_FETCH_RESOURCES_LIST_STARTED: return resources.adminFetchResourcesListStarted(state, action);\n        case actionTypes.ADMIN_FETCH_RESOURCES_LIST_FAILED: return resources.adminFetchResourcesListFailed(state, action);\n        case actionTypes.ADMIN_FETCH_RESOURCES_LIST_SUCCEEDED: return resources.adminFetchResourcesListSucceeded(state, action);\n        case actionTypes.ADMIN_REQUEST_RESOURCE_DELETE: return resources.adminRequestResourceDelete(state, action);\n        case actionTypes.ADMIN_CANCEL_RESOURCE_DELETE: return resources.adminCancelResourceDelete(state, action);\n        case actionTypes.ADMIN_DELETE_RESOURCE_STARTED: return resources.adminDeleteResourceStarted(state, action);\n        case actionTypes.ADMIN_DELETE_RESOURCE_FAILED: return resources.adminDeleteResourceFailed(state, action);\n        case actionTypes.ADMIN_DELETE_RESOURCE_SUCCEEDED: return resources.adminDeleteResourceSucceeded(state, action);\n        case actionTypes.ADMIN_DISMISS_DELETE_RESOURCE_MESSAGE: return resources.adminDismissDeleteResourceMessage(state, action);\n        case actionTypes.ADMIN_FETCH_RESOURCE_STARTED: return resources.adminFetchResourceStarted(state, action);\n        case actionTypes.ADMIN_FETCH_RESOURCE_FAILED: return resources.adminFetchResourceFailed(state, action);\n        case actionTypes.ADMIN_FETCH_RESOURCE_SUCCEEDED: return resources.adminFetchResourceSucceeded(state, action);\n        case actionTypes.ADMIN_SAVE_RESOURCE_STARTED: return resources.adminSaveResourceStarted(state, action);\n        case actionTypes.ADMIN_SAVE_RESOURCE_FAILED: return resources.adminSaveResourceFailed(state, action);\n        case actionTypes.ADMIN_SAVE_RESOURCE_SUCCEEDED: return resources.adminSaveResourceSucceeded(state, action);\n        case actionTypes.ADMIN_SAVE_RESOURCE_MSG_DISMISSED: return resources.adminSaveResourceMsgDismissed(state, action);\n\n        // Results\n        case actionTypes.ADMIN_FETCH_RESULTS_LIST_STARTED: return results.adminFetchResultsListStarted(state, action);\n        case actionTypes.ADMIN_FETCH_RESULTS_LIST_FAILED: return results.adminFetchResultsListFailed(state, action);\n        case actionTypes.ADMIN_FETCH_RESULTS_LIST_SUCCEEDED: return results.adminFetchResultsListSucceeded(state, action);\n        case actionTypes.ADMIN_CHANGE_RESULTS_FILTER: return results.adminChangeResultsFilter(state, action);\n        case actionTypes.ADMIN_FETCH_SCENARIO_STARTED: return results.adminFetchScenarioStarted(state, action);\n        case actionTypes.ADMIN_FETCH_SCENARIO_FAILED: return results.adminFetchScenarioFailed(state, action);\n        case actionTypes.ADMIN_FETCH_SCENARIO_SUCCEEDED: return results.adminFetchScenarioSucceeded(state, action);\n        case actionTypes.ADMIN_SAVE_SCENARIO_STARTED: return results.adminSaveScenarioStarted(state, action);\n        case actionTypes.ADMIN_SAVE_SCENARIO_FAILED: return results.adminSaveScenarioFailed(state, action);\n        case actionTypes.ADMIN_SAVE_SCENARIO_SUCCEEDED: return results.adminSaveScenarioSucceeded(state, action);\n\n        // Shared\n        case actionTypes.ADMIN_FETCH_BENEFIT_STARTED: return shared.adminFetchBenefitStarted(state, action);\n        case actionTypes.ADMIN_FETCH_BENEFIT_FAILED: return shared.adminFetchBenefitFailed(state, action);\n        case actionTypes.ADMIN_FETCH_BENEFIT_SUCCEEDED: return shared.adminFetchBenefitSucceeded(state, action);\n        case actionTypes.ADMIN_FETCH_BENEFITS_LIST_STARTED: return shared.adminFetchBenefitsListStarted(state, action);\n        case actionTypes.ADMIN_FETCH_BENEFITS_LIST_FAILED: return shared.adminFetchBenefitsListFailed(state, action);\n        case actionTypes.ADMIN_FETCH_BENEFITS_LIST_SUCCEEDED: return shared.adminFetchBenefitsListSucceeded(state, action);\n\n        default: return state;\n    }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject} from '../utility';\n\nconst initialState = {\n    username: null,\n    processing: false,\n    token: null,\n    error: null\n};\n\nconst prelaunchLoginStarted = (state, action) => {\n    return updateObject(state, {\n        username: null,\n        processing: false,\n        token: null,\n        error: null,\n    });\n};\n\nconst prelaunchLoginFailed = (state, action) => {\n    return updateObject(state, {\n        username: null,\n        processing: false,\n        token: null,\n        error: action.error\n    });\n};\n\nconst prelaunchLoginSucceeded = (state, action) => {\n    return updateObject(state, {\n        username: action.username,\n        processing: false,\n        token: action.token,\n        error: null\n    });\n};\n\nconst prelaunchLogout = (state, action) => {\n    return updateObject(state, {\n        username: null,\n        processing: false,\n        token: null,\n        error: null,\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PRELAUNCH_LOGIN_STARTED: return prelaunchLoginStarted(state, action);\n        case actionTypes.PRELAUNCH_LOGIN_FAILED: return prelaunchLoginFailed(state, action);\n        case actionTypes.PRELAUNCH_LOGIN_SUCCEEDED: return prelaunchLoginSucceeded(state, action);\n        case actionTypes.PRELAUNCH_LOGOUT: return prelaunchLogout(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport toolReducer from './storage/redux/reducers/tool';\nimport adminReducer from './storage/redux/reducers/admin';\nimport prelaunchReducer from './storage/redux/reducers/prelaunch';\n\nimport './index.css';\n\nconst rootReducer = combineReducers({\n    tool: toolReducer,\n    admin: adminReducer,\n    prelaunch: prelaunchReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}