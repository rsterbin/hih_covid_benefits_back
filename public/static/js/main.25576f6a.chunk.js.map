{"version":3,"sources":["utils/Storage.js","data/benefits sync /^/.//.*/.json$","hoc/Layout/Layout.js","components/Intro/Intro.js","components/Question/Question.js","components/Confirmation/Confirmation.js","components/Response/Response.js","containers/Quiz/Quiz.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["Storage","cookies","axiosInstance","allowedAnswers","this","Cookies","cookiestring","get","cookiestate","text","Buffer","toString","JSON","parse","e","console","log","visitor_id","newstate","key","step","isNaN","parseInt","Object","keys","length","answers","includes","oldstate","data","stringify","base64data","set","path","maxAge","sameSite","axios","create","baseURL","getAxios","post","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","layout","props","className","href","src","alt","children","intro","onClick","clicked","question","stepBullets","steps","timeline","title","answerButtons","aKey","classes","selected","questionText","helpText","answerLayout","backClicked","restartClicked","confirmation","answerList","questions","order","qtext","spec","q","atext","a","forwardClicked","response","i","answer","answerSections","section","items","header","push","para","resourceBlock","resources","j","linkList","link","window","open","Quiz","state","started","completed","confirmed","loading","QuestionsData","benefits","BenefitsData","responses","ResponsesData","benefitResponses","customAnswers","splitTypeByEssential","type","splitTypeByHomeCare","splitBooksByTaxes","books","splitBooksByCompliance","splitLengthByYear","splitLengthByMonths","findReasonForFFCRA","findReasonForNYS","startQuiz","setState","saveState","clickAnswer","newAnswers","newStep","goBack","goToStep","stepNum","confirmAnswers","letter","toUpperCase","recordResponse","then","catch","error","restartQuiz","allowed","loadState","uuidv4","stepCount","qstep","t","target","benefit","r","require","answerKey","conditions","simple","complex","k","m","template","employeeType","item","replace","sections","loadBenefitResponses","b","buildAnswerKey","match","c","long","replaceEmployeeType","short","defaultNoBenefits","unshift","introWithBenefits","retaliationWarning","body","finalAnswer","getFinalAnswer","standardHeader","qspec","aspec","value","getSteps","help","Component","login","button","disabled","loginError","class","method","onSubmit","submitted","name","username","onChange","usernameChanged","autoComplete","password","passwordChanged","App","loggedIn","changeUsername","changePassword","validate","preventDefault","checkLogin","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8MAMMA,E,iDAGFC,QAAU,K,KAGVC,cAAgB,K,sDAENC,GAGe,OAAjBC,KAAKH,UACLG,KAAKH,QAAU,IAAII,KAEvB,IAAIC,EAAeF,KAAKH,QAAQM,IAjBjB,gBAkBf,IAAKD,EACD,OAAO,KAIX,IAAIE,EAAc,GAClB,IACI,IACIC,EADO,IAAIC,EAAOJ,EAAc,UACpBK,SAAS,QACzBH,EAAcI,KAAKC,MAAMJ,GAC3B,MAAOK,GAEL,OADAC,QAAQC,IAAI,kDACL,KAEX,IAAKR,EAAYS,WAEb,OADAF,QAAQC,IAAI,sDACL,KAKX,IADA,IAAIE,EAAW,CAAED,WAAYT,EAAYS,YACzC,MAAkB,CAAE,UAAW,YAAa,aAA5C,eAA2D,CAAtD,IAAME,EAAG,KACuB,qBAAtBX,EAAYW,KACnBD,EAASC,KAAOX,EAAYW,IASpC,GANiC,qBAAtBX,EAAYY,OAClBC,MAAMC,SAASd,EAAYY,KAAO,MACnCZ,EAAYY,MAAQ,GACpBZ,EAAYY,KAAOG,OAAOC,KAAKrB,GAAgBsB,SAC/CP,EAASE,KAAOE,SAASd,EAAYY,KAAO,KAEZ,kBAAzBZ,EAAYkB,QAAuB,CAC1CR,EAASQ,QAAU,GACnB,cAAkBH,OAAOC,KAAKrB,GAA9B,eAA+C,CAA1C,IAAMgB,EAAG,KACNhB,EAAegB,GAAKQ,SAASnB,EAAYkB,QAAQP,MACjDD,EAASQ,QAAQP,GAAOX,EAAYkB,QAAQP,KAKxD,OAAOD,I,gCAGDU,GACe,OAAjBxB,KAAKH,UACLG,KAAKH,QAAU,IAAII,KAEvB,IAAMwB,EAAOjB,KAAKkB,UAAUF,GAEtBG,EADK,IAAIrB,EAAOmB,GACElB,SAAS,UACjCP,KAAKH,QAAQ+B,IAAI,eAAgBD,EAAY,CACzCE,KAAM,IACNC,OAAQ,QACRC,SAAU,a,iCAUd,OAL2B,OAAvB/B,KAAKF,gBACLE,KAAKF,cAAgBkC,IAAMC,OAAO,CAC9BC,QA9EyC,eAiF1ClC,KAAKF,gB,qCAGD2B,GACX,OAAOzB,KAAKmC,WAAWC,KAAK,UAAWX,K,iCAGhCA,GACP,OAAOzB,KAAKmC,WAAWC,KAAK,SAAUX,O,KAI/B,QAAI7B,I,64OCjGnB,IAAIyC,EAAM,CACT,eAAgB,IAIjB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAI7B,EAAI,IAAIkC,MAAM,uBAAyBL,EAAM,KAEjD,MADA7B,EAAEmC,KAAO,mBACHnC,EAEP,OAAO2B,EAAIE,GAEZD,EAAelB,KAAO,WACrB,OAAOD,OAAOC,KAAKiB,IAEpBC,EAAeQ,QAAUL,EACzBM,EAAOC,QAAUV,EACjBA,EAAeE,GAAK,I,sufCFLS,G,MAhBA,SAACC,GACZ,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,QACX,uBAAGC,KAAK,kCAAiC,yBAAKC,IAAI,mBAAmBC,IAAI,mDAE7E,yBAAKH,UAAU,UACX,4BAAI,uBAAGC,KAAK,KAAR,gCAER,yBAAKD,UAAU,eACVD,EAAMK,a,uBCSRC,G,MAnBD,SAACN,GACX,OACI,6BACI,8EAEA,wOAEA,+KAEA,2BAAG,uCAAH,oCAEA,yBAAKC,UAAU,mBACX,4BAAQA,UAAU,qBAAqBM,QAASP,EAAMQ,SAAtD,aC6CDC,G,MAzDE,SAACT,GAEd,IAAMU,EAAcV,EAAMW,MACrBxB,KAAI,SAACrB,GACF,IAAImC,EAAY,SAWhB,MAVsB,YAAlBnC,EAAK8C,SACLX,GAAa,WACY,SAAlBnC,EAAK8C,SACZX,GAAa,WACY,WAAlBnC,EAAK8C,WACZX,GAAa,cAEY,oBAAlBnC,EAAK0C,UACZP,GAAa,cAGb,wBAAIpC,IAAKC,EAAK+C,MACVZ,UAAWA,EACXY,MAAO/C,EAAK+C,MACZN,QAASzC,EAAK0C,SAHlB,WAONM,EAAgB7C,OAAOC,KAAK8B,EAAM5B,SACnCe,KAAI,SAAC4B,GACF,IAAIC,EAAU,sBAId,OAHIhB,EAAM5B,QAAQ2C,GAAME,WACpBD,GAAW,yBAGT,4BAAQnD,IAAKkD,EAAMd,UAAWe,EAAST,QAASP,EAAM5B,QAAQ2C,GAAMP,SAAUR,EAAM5B,QAAQ2C,GAAM5D,SAIhH,OACI,6BACI,yBAAK8C,UAAU,eACX,4BACKS,IAIT,wBAAIT,UAAU,YAAYD,EAAMkB,cAE/BlB,EAAMmB,SAAW,uBAAGlB,UAAU,QAAQD,EAAMmB,UAAgB,KAE7D,yBAAKlB,UAAkC,UAAvBD,EAAMoB,aAA2B,kBAAoB,uBAChEN,GAGL,yBAAKb,UAAU,WAAWM,QAASP,EAAMqB,aAAzC,WACA,yBAAKpB,UAAU,cAAcM,QAASP,EAAMsB,gBAA5C,mBCjBGC,G,MAlCM,SAACvB,GAIlB,IAAMwB,EAAaxB,EAAMyB,UAAUC,MAC9BvC,KAAI,SAACsB,GACF,IAAMkB,EAAQ3B,EAAMyB,UAAUG,KAAKnB,GAAUoB,EACvCC,EAAQ9B,EAAMyB,UAAUG,KAAKnB,GAAUsB,EAAE/B,EAAM5B,QAAQqC,IAC7D,OACI,wBAAI5C,IAAK4C,GACL,yBAAKR,UAAU,mBAAmB0B,GAClC,yBAAK1B,UAAU,iBAAiB6B,OAKhD,OACI,yBAAK7B,UAAU,gBACX,wBAAIA,UAAU,iBAAd,wBACA,yBAAKA,UAAU,WACX,4BACKuB,IAGT,yBAAKvB,UAAU,mBACX,4BAAQA,UAAU,uBAAuBM,QAASP,EAAMgC,gBAAxD,YAEJ,yBAAK/B,UAAU,WAAWM,QAASP,EAAMqB,aAAzC,WACA,yBAAKpB,UAAU,cAAcM,QAASP,EAAMsB,gBAA5C,mBCsBGW,G,MAlDE,SAACjC,GACd,IAAIkC,EAAI,EACJC,EAASnC,EAAMoC,eAAejD,KAAI,SAACkD,GAC/B,IAAIC,EAAQ,GACRD,EAAQE,SACRD,EAAME,KAAK,wBAAI3E,IAAKqE,GAAIG,EAAQE,WAC9BL,GAJqC,oBAMxBG,EAAQlF,MANgB,IAM3C,2BAAiC,CAAC,IAAvBsF,EAAsB,QAC7BH,EAAME,KAAK,uBAAG3E,IAAKqE,GAAIO,MACrBP,GARqC,8BAU3C,OAAOI,KAEXI,EAAgB,KACpB,GAAI1C,EAAM2C,UAAUxE,OAAS,EAAG,CAC5B,IAAIyE,EAAI,EACJC,EAAW7C,EAAM2C,UAAUxD,KAAI,SAAC2D,GAEhC,QADEF,EACK,wBAAI/E,IAAK+E,GAAG,uBAAG1C,KAAM4C,EAAK5C,KAAMW,MAAOiC,EAAKjC,OAAQiC,EAAK3F,UAEpEuF,EACI,yBAAKzC,UAAU,aACX,yCACA,4BACK4C,IAKjB,OACI,6BACI,4BAAK7C,EAAMuC,QAEVJ,EAEAO,EAED,yBAAKzC,UAAU,mBACX,4BAAQA,UAAU,mBAAmBM,QAAS,WAAQwC,OAAOC,KAAK,iDAAkD,YAApH,mBACA,4BAAQ/C,UAAU,oBAAlB,iBACA,4BAAQA,UAAU,oBAAlB,kBAGJ,yBAAKA,UAAU,cAAcM,QAASP,EAAMsB,gBAA5C,mB,+BCgbG2B,G,kNA5cXC,MAAQ,CACJvF,WAAY,KACZwF,SAAS,EACTC,WAAW,EACXC,WAAW,EACXjF,QAAS,GACTkF,SAAS,EACTxF,KAAM,M,EAGV2D,UAAY8B,E,EACZC,SAAWC,E,EACXC,UAAYC,E,EAGZC,iBAAmB,K,EAEnBC,cAAgB,CACZC,qBAAsB,SAAC1F,GACnB,MAAqB,MAAjBA,EAAQ2F,KACD,IAEA,KAIfC,oBAAqB,SAAC5F,GAClB,MAAqB,MAAjBA,EAAQ2F,MAAiC,MAAjB3F,EAAQ2F,KACzB,IAEA,KAIfE,kBAAmB,SAAC7F,GAChB,MAAsB,MAAlBA,EAAQ8F,OAAmC,MAAlB9F,EAAQ8F,MAC1B,IAEA,KAIfC,uBAAwB,SAAC/F,GACrB,MAAsB,MAAlBA,EAAQ8F,MACD,IAEA,KAIfE,kBAAmB,SAAChG,GAChB,MAAwC,MAApCA,EAAQ,wBACD,IAEA,KAIfiG,oBAAqB,SAACjG,GAClB,MAAwC,MAApCA,EAAQ,wBACD,IAEA,KAWfkG,mBAAoB,SAAClG,GACjB,MACmC,MAA/BA,EAAQ,oBACqB,MAA7BA,EAAQ,iBAED,IAEwB,MAA/BA,EAAQ,mBACD,IAEsB,MAA7BA,EAAQ,iBACD,IAG0B,MAAjCA,EAAQ,sBACoB,MAA5BA,EAAQ,gBAED,IAGwB,MAA/BA,EAAQ,oBACyB,MAAjCA,EAAQ,sBACoB,MAA5BA,EAAQ,iBACqB,MAA7BA,EAAQ,iBAED,IAEJ,KAQXmG,iBAAkB,SAACnG,GACf,MACmC,MAA/BA,EAAQ,oBACyB,MAAjCA,EAAQ,qBAED,IAEsB,MAA7BA,EAAQ,iBACD,IAGwB,MAA/BA,EAAQ,oBACyB,MAAjCA,EAAQ,sBACqB,MAA7BA,EAAQ,iBAED,IAEJ,M,EAkBfoG,UAAY,WACR,EAAKC,SAAS,CACVtB,SAAS,EACTrF,KAAM,EACNsF,WAAW,EACXC,WAAW,EACXjF,QAAS,KACV,WAAQ1B,IAAQgI,UAAU,EAAKxB,W,EAGtCyB,YAAc,SAAC5D,GACX,IAAI6D,EAAU,eAAQ,EAAK1B,MAAM9E,SACjCwG,EAAW,EAAKnD,UAAUC,MAAM,EAAKwB,MAAMpF,OAASiD,EACpD,IAAI8D,EAAU,EAAK3B,MAAMpF,KAAO,EAC5BF,EAAW,CAAEQ,QAASwG,GACtBC,EAAU,EAAKpD,UAAUC,MAAMvD,OAC/BP,EAASE,KAAO+G,GAEhBjH,EAASE,KAAO,KAChBF,EAASwF,WAAY,GAEzB,EAAKqB,SAAS7G,GAAU,WAAQlB,IAAQgI,UAAU,EAAKxB,W,EAG3D4B,OAAS,WACL,IAAI,EAAK5B,MAAMG,UAAf,CAIA,IAAIzF,EAAW,KACf,GAAI,EAAKsF,MAAME,UACXxF,EAAW,CACPE,KAAM,EAAK2D,UAAUC,MAAMvD,OAAS,EACpCiF,WAAW,QAEZ,GAAI,EAAKF,MAAMC,QAAS,CAC3B,IAAI0B,EAAU,EAAK3B,MAAMpF,KAAO,EAE5BF,EADAiH,EAAU,EACC,CAAE/G,KAAM,KAAMqF,SAAS,GAEvB,CAAErF,KAAM+G,GAGV,OAAbjH,GAGJ,EAAK6G,SAAS7G,GAAU,WAAQlB,IAAQgI,UAAU,EAAKxB,Y,EAG3D6B,SAAW,SAACC,GACR,KAAIA,EAAU,GAAKA,GAAW,EAAKvD,UAAUC,MAAMvD,UAG/C,EAAK+E,MAAMG,UAAf,CAIA,IAAIzF,EAAW,CAAEE,KAAMkH,GACnB,EAAK9B,MAAME,UACXxF,EAASwF,WAAY,EACb,EAAKF,MAAMC,UACnBvF,EAASuF,SAAU,GAEvB,EAAKsB,SAAS7G,GAAU,WAAQlB,IAAQgI,UAAU,EAAKxB,Y,EAG3D+B,eAAiB,WACb,IAAI,EAAK/B,MAAMG,WAIV,EAAKH,MAAME,WAAc,EAAKF,MAAMC,QAAzC,CAIA,IATmB,EASb5E,EAAO,CACTZ,WAAY,EAAKuF,MAAMvF,WACvBS,QAAS,IAXM,cAaI,EAAKqD,UAAUC,OAbnB,IAanB,2BAA6C,CAAC,IAAnCjB,EAAkC,QACnCyE,EAAS,EAAKhC,MAAM9E,QAAQqC,GAC5B0B,EAAS,EAAKV,UAAUG,KAAKnB,GAAUsB,EAAEmD,GAC/C3G,EAAKH,QAAQqC,GAAY0B,EAAOgD,eAhBjB,8BAkBnB1H,QAAQC,IAAIa,GACZ,EAAKkG,SAAS,CAAEnB,SAAS,IACzB5G,IAAQ0I,eAAe7G,GAClB8G,MAAK,SAAApD,GACF,EAAKwC,SAAS,CACVnB,SAAS,EACTD,WAAW,IACZ,WAAQ3G,IAAQgI,UAAU,EAAKxB,UAClCzF,QAAQC,IAAIuE,MAEfqD,OAAM,SAAAC,GAEH,EAAKd,SAAS,CAAEnB,SAAS,IACzB7F,QAAQC,IAAI6H,Q,EAIxBC,YAAc,WACV,EAAKf,SAAS,CACVtB,SAAS,EACTrF,KAAM,KACNsF,WAAW,EACXC,WAAW,EACXjF,QAAS,KACV,WAAQ1B,IAAQgI,UAAU,EAAKxB,W,kEAxHlC,IADgB,EACZuC,EAAU,GADE,cAEO3I,KAAK2E,UAAUC,OAFtB,IAEhB,2BAA6C,CAAC,IAAnCjB,EAAkC,QACzCgF,EAAQhF,GAAYxC,OAAOC,KAAKpB,KAAK2E,UAAUG,KAAKnB,GAAUsB,IAHlD,8BAKhB,IAAInE,EAAWlB,IAAQgJ,UAAUD,GAChB,OAAb7H,IAEAA,EAAW,CAAED,WADIgI,gBAGrB7I,KAAK2H,SAAS7G,K,iCAqHd,IAHQ,IAAD,OACH+C,EAAQ,GACNiF,EAAY9I,KAAK2E,UAAUC,MAAMvD,OAFhC,WAGE+D,GACL,IAAM2D,EAAQ,EAAKpE,UAAUC,MAAMQ,GAC/BpE,EAAO,CACP+C,MAAO,EAAKY,UAAUG,KAAKiE,GAAOC,EAClCC,OAAQ7D,GAER,EAAKgB,MAAMpF,KAAOoE,EAClBpE,EAAK8C,SAAW,SACT,EAAKsC,MAAMpF,OAASoE,EAC3BpE,EAAK8C,SAAW,UAEhB9C,EAAK8C,SAAW,OAEsB,qBAA/B,EAAKsC,MAAM9E,QAAQyH,KAC1B/H,EAAK0C,QAAU,WAAQ,EAAKuE,SAAS7C,KAEzCvB,EAAM6B,KAAK1E,IAhBNoE,EAAI,EAAGA,EAAI0D,IAAa1D,EAAI,EAA5BA,GAkBT,OAAOvB,I,6CAIP,IADmB,EACf+C,EAAY,GADG,cAEG5G,KAAK0G,SAAS9B,OAFjB,IAEnB,2BAA2C,CAAC,IAAjCsE,EAAgC,QACnCC,EAAI,KACR,IACIA,EAAIC,MAAQ,KAAyBF,EAAU,SACjD,SACEC,EAAI,KAGJvC,EAAUsC,GADVC,GAGqB,IAZV,8BAenBnJ,KAAK8G,iBAAmBF,I,qCAGbsC,GACX,IADoB,EAChBG,EAAY,GADI,cAEJrJ,KAAK0G,SAAS5B,KAAKoE,GAASI,WAAWC,QAFnC,IAEpB,2BAA+D,CAAC,IAArDxE,EAAoD,QAC3DsE,EAAUtE,GAAK/E,KAAKoG,MAAM9E,QAAQyD,IAHlB,8BAKpB,cAAgB5D,OAAOC,KAAKpB,KAAK0G,SAAS5B,KAAKoE,GAASI,WAAWE,SAAnE,eAA6E,CAAxE,IAAMC,EAAC,KACJC,EAAI1J,KAAK0G,SAAS5B,KAAKoE,GAASI,WAAWE,QAAQC,GACvDJ,EAAUI,GAAKzJ,KAAK+G,cAAc2C,GAAG1J,KAAKoG,MAAM9E,SAEpD,OAAO+H,I,0CAGSM,GAChB,IAAIC,EAAe,WAUnB,MATgC,MAA5B5J,KAAKoG,MAAM9E,QAAQ2F,KACnB2C,EAAe,QACoB,MAA5B5J,KAAKoG,MAAM9E,QAAQ2F,KAC1B2C,EAAe,gBACoB,MAA5B5J,KAAKoG,MAAM9E,QAAQ2F,KAC1B2C,EAAe,iBACoB,MAA5B5J,KAAKoG,MAAM9E,QAAQ2F,OAC1B2C,EAAe,2BAEZD,EAAStH,KAAI,SAACwH,GACjB,OAAOA,EAAKC,QAAQ,yBAA0BF,Q,uCAKlD,IAAIG,EAAW,GACXlE,EAAY,GAGc,OAA1B7F,KAAK8G,kBACL9G,KAAKgK,uBANI,oBAUGhK,KAAK0G,SAAS9B,OAVjB,IAUb,2BAAqC,CAAC,IAAD,EAA1BqF,EAA0B,QAC7BN,EAAW,GAGXN,EAAYrJ,KAAKkK,eAAeD,GAJH,cAOjBjK,KAAK8G,iBAAiBmD,IAPL,IAOjC,2BAA0C,CAEtC,IAFuC,IAAhCd,EAA+B,QAClCgB,GAAQ,EACZ,MAAgBhJ,OAAOC,KAAK+H,EAAEG,YAA9B,eAA2C,CAAtC,IAAMc,EAAC,KACJf,EAAUe,KAAOjB,EAAEG,WAAWc,KAC9BD,GAAQ,GAGhB,GAAIA,EAAO,CACPR,EAAWR,EAAE9I,KACb,QAhByB,8BAqB7BsJ,EAAStI,OAAS,IAClB0I,EAASrE,KAAK,CACVD,OAAQzF,KAAK0G,SAAS5B,KAAKmF,GAAGI,KAC9BhK,KAAML,KAAKsK,oBAAoBX,KAEnC9D,EAAUH,KAAK,CACXrF,KAAML,KAAK0G,SAAS5B,KAAKmF,GAAGM,MAC5BxG,MAAO/D,KAAK0G,SAAS5B,KAAKmF,GAAGI,KAC7BjH,KAAMpD,KAAK0G,SAAS5B,KAAKmF,GAAGjE,SAvC3B,8BAgEb,OApBI+D,EAAS1I,OAAS,EAElB0I,EAASrE,KAAK,CACVD,OAAQ,GACRpF,KAAML,KAAKsK,oBAAoBtK,KAAK4G,UAAU4D,qBAIlDT,EAASU,QAAQ,CACbhF,OAAQ,GACRpF,KAAML,KAAKsK,oBAAoBtK,KAAK4G,UAAU8D,qBAKtDX,EAASrE,KAAK,CACVD,OAAQ,UACRpF,KAAML,KAAKsK,oBAAoBtK,KAAK4G,UAAU+D,sBAG3C,CACHZ,SAAUA,EACVlE,UAAWA,K,+BAIT,IAAD,OAGD+E,EAAO,kBAAC,EAAD,CAAOlH,QAAS1D,KAAK0H,YAGhC,GAAI1H,KAAKoG,MAAMG,UAAW,CACtB,IAAMsE,EAAc7K,KAAK8K,iBACzBF,EAAO,kBAAC,EAAD,CACHnF,OAAQzF,KAAKsK,oBAAoBtK,KAAK4G,UAAUmE,gBAChDzF,eAAgBuF,EAAYd,SAC5BlE,UAAWgF,EAAYhF,UACvBrB,eAAgBxE,KAAK0I,mBAGtB,GAAI1I,KAAKoG,MAAME,UAClBsE,EAAO,kBAAC,EAAD,CACHjG,UAAW3E,KAAK2E,UAChBrD,QAAStB,KAAKoG,MAAM9E,QACpBiD,YAAavE,KAAKgI,OAClB9C,eAAgBlF,KAAKmI,eACrB3D,eAAgBxE,KAAK0I,mBAGtB,GAAI1I,KAAKoG,MAAMC,QAAS,CAC3B,IAAI1C,EAAW3D,KAAK2E,UAAUC,MAAM5E,KAAKoG,MAAMpF,MAC/C,GAAuB,iBAAZ2C,EAAsB,CAC7B,IAAMqH,EAAQhL,KAAK2E,UAAUG,KAAKnB,GAC5BsH,EAAQ9J,OAAOC,KAAK4J,EAAM/F,GAC3B5C,KAAI,SAAC4B,GACF,IAAIE,GAAW,EAMf,MAL2C,oBAAhC,EAAKiC,MAAM9E,QAAQqC,IACtB,EAAKyC,MAAM9E,QAAQqC,KAAcM,IACjCE,GAAW,GAGZ,CACH+G,MAAOjH,EACP5D,KAAM2K,EAAM/F,EAAEhB,GACdE,SAAUA,EACVT,QAAS,WAAQ,EAAKmE,YAAY5D,QAGxCJ,EAAQ7D,KAAKmL,WACnBP,EACI,kBAAC,EAAD,CACIxG,aAAc4G,EAAMjG,EACpBV,SAAU2G,EAAMI,KAChB9G,aAAc0G,EAAM/H,OACpB3B,QAAS2J,EACTpH,MAAOA,EACPU,YAAavE,KAAKgI,OAClBxD,eAAgBxE,KAAK0I,eAKrC,OACI,yBAAKvF,UAAU,QACVyH,O,GAvcES,cCcJC,G,MA5BD,SAACpI,GACX,IAAIqI,EAAS,KAOb,OALIA,EADArI,EAAMsD,QACG,4BAAQgF,SAAS,WAAWrI,UAAU,WAAtC,UAEA,4BAAQ8D,KAAK,UAAb,UAIT,yBAAK9D,UAAU,cACX,yBAAKA,UAAU,YACVD,EAAMuI,WACH,yBAAKC,MAAM,SAAX,+BACF,KACF,0BAAMC,OAAO,OAAOC,SAAU1I,EAAM2I,WAChC,2CACA,2BAAO5E,KAAK,OAAO6E,KAAK,WAAWZ,MAAOhI,EAAM6I,SAAUC,SAAU9I,EAAM+I,gBAAiBC,aAAa,aACxG,2CACA,2BAAOjF,KAAK,WAAW6E,KAAK,WAAWZ,MAAOhI,EAAMiJ,SAAUH,SAAU9I,EAAMkJ,gBAAiBF,aAAa,qBAC5G,yBAAK/I,UAAU,mBACVoI,QCuDVc,G,kNApEXjG,MAAQ,CACJI,SAAS,EACTuF,SAAU,GACVI,SAAU,GACVG,UAAU,EACVb,YAAY,G,EAGhBc,eAAiB,SAAC7L,GACd,EAAKiH,SAAS,CAAEoE,SAAUrL,EAAEuI,OAAOiC,S,EAGvCsB,eAAiB,SAAC9L,GACd,EAAKiH,SAAS,CAAEwE,SAAUzL,EAAEuI,OAAOiC,S,EAGvCuB,SAAW,SAAC/L,GACRA,EAAEgM,iBACF,EAAK/E,SAAS,CACVnB,SAAS,EACTiF,YAAY,IAEhB7L,IAAQ+M,WAAW,CACfZ,SAAU,EAAK3F,MAAM2F,SACrBI,SAAU,EAAK/F,MAAM+F,WAExB5D,MAAK,SAAApD,GACF,EAAKwC,SAAS,CACVnB,SAAS,EACT8F,UAAU,IAEd3L,QAAQC,IAAIuE,MAEfqD,OAAM,SAAAC,GACH9H,QAAQC,IAAI6H,GACZ,EAAKd,SAAS,CACVnB,SAAS,EACTiF,YAAY,Q,uDAMpB,IAAIxI,EAAS,KAiBb,OAfIA,EADAjD,KAAKoG,MAAMkG,SAEP,kBAAC,EAAD,KACI,kBAAC,EAAD,OAIC,kBAAC,EAAD,CACL9F,QAASxG,KAAKoG,MAAMI,QACpBiF,WAAYzL,KAAKoG,MAAMqF,WACvBM,SAAU/L,KAAKoG,MAAM2F,SACrBI,SAAUnM,KAAKoG,MAAM+F,SACrBF,gBAAiBjM,KAAKuM,eACtBH,gBAAiBpM,KAAKwM,eACtBX,UAAW7L,KAAKyM,WAGpB,yBAAKtJ,UAAU,OACVF,O,GA/DCoI,cCEEuB,QACW,cAA7B3G,OAAO4G,SAASC,UAEe,UAA7B7G,OAAO4G,SAASC,UAEhB7G,OAAO4G,SAASC,SAAS3C,MACvB,2DCZN4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/E,MAAK,SAAAgF,GACJA,EAAaC,gBAEdhF,OAAM,SAAAC,GACL9H,QAAQ8H,MAAMA,EAAMgF,c","file":"static/js/main.25576f6a.chunk.js","sourcesContent":["import axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst VISITOR_COOKIE = 'hnct-visitor';\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/v1.0' : 'http://localhost2:3001/api/v1.0';\n\nclass Storage {\n\n    // This will be created when it's needed\n    cookies = null;\n\n    // This will be created when it's needed\n    axiosInstance = null;\n\n    loadState(allowedAnswers) {\n\n        // Grab cookie value\n        if (this.cookies === null) {\n            this.cookies = new Cookies();\n        }\n        let cookiestring = this.cookies.get(VISITOR_COOKIE);\n        if (!cookiestring) {\n            return null;\n        }\n\n        // Parse and sanity check\n        let cookiestate = {};\n        try {\n            let buff = new Buffer(cookiestring, 'base64');\n            let text = buff.toString('utf8');\n            cookiestate = JSON.parse(text);\n        } catch (e) {\n            console.log('Cookie value was not valid json; starting over');\n            return null;\n        }\n        if (!cookiestate.visitor_id) {\n            console.log('Cookie did not include a visitor ID; starting over');\n            return null;\n        }\n\n        // Clean individual values and return\n        let newstate = { visitor_id: cookiestate.visitor_id };\n        for (const key of [ 'started', 'completed', 'confirmed' ]) {\n            if (typeof(cookiestate[key]) !== 'undefined') {\n                newstate[key] = cookiestate[key] ? true : false;\n            }\n        }\n        if (typeof(cookiestate.step) !== 'undefined' &&\n            !isNaN(parseInt(cookiestate.step + '')) &&\n            cookiestate.step >= 0 &&\n            cookiestate.step < Object.keys(allowedAnswers).length) {\n            newstate.step = parseInt(cookiestate.step + '');\n        }\n        if (typeof(cookiestate.answers) === 'object') {\n            newstate.answers = {};\n            for (const key of Object.keys(allowedAnswers)) {\n                if (allowedAnswers[key].includes(cookiestate.answers[key])) {\n                    newstate.answers[key] = cookiestate.answers[key];\n                }\n            }\n        }\n\n        return newstate;\n    }\n\n    saveState(oldstate) {\n        if (this.cookies === null) {\n            this.cookies = new Cookies();\n        }\n        const data = JSON.stringify(oldstate);\n        let buff = new Buffer(data);\n        const base64data = buff.toString('base64');\n        this.cookies.set('hnct-visitor', base64data, {\n            path: '/',\n            maxAge: 60 * 60 * 24 * 365,\n            sameSite: 'strict'\n        });\n    }\n\n    getAxios() {\n        if (this.axiosInstance === null) {\n            this.axiosInstance = axios.create({\n                baseURL: BASE_URL,\n            });\n        }\n        return this.axiosInstance;\n    }\n\n    recordResponse(data) {\n        return this.getAxios().post('/record', data);\n    }\n\n    checkLogin(data) {\n        return this.getAxios().post('/login', data);\n    }\n}\n\nexport default new Storage();\n","var map = {\n\t\"./ffcra.json\": 60\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;","import React from 'react';\n\nimport './Layout.css';\n\nconst layout = (props) => {\n    return (\n        <div className=\"BenefitsTool\">\n            <div className=\"Logo\">\n                <a href=\"https://domesticemployers.org/\"><img src=\"/images/logo.png\" alt=\"Hand-In-Hand: The Domestic Employers Network\" /></a>\n            </div>\n            <div className=\"Header\">\n                <h1><a href=\"/\">NYC COVID-19 Benefits Tool</a></h1>\n            </div>\n            <div className=\"MainContent\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default layout;\n","import React from 'react';\n\nimport './Intro.css';\n\nconst intro = (props) => {\n    return (\n        <div>\n            <h2>Welcome to the COVID-19 Employer Benefits Tool</h2>\n\n            <p>Domestic workers do the work that makes all other work possible. It's crucial to recognize the work of nannies, house cleaners and home attendants who are on the frontlines of our response to COVID-19.</p>\n\n            <p>This tool makes it easier for employers to discover what benefits their employees are entitled to, and provides links to find out more or apply.</p>\n\n            <p><strong>NB:</strong> This tool is currently a DRAFT.</p>\n\n            <div className=\"ButtonContainer\">\n                <button className=\"Button StartButton\" onClick={props.clicked}>Start</button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default intro;\n","import React from 'react';\n\nimport './Question.css';\n\nconst question = (props) => {\n\n    const stepBullets = props.steps\n        .map((step) => {\n            let className = 'Bullet';\n            if (step.timeline === 'present') {\n                className += ' Current';\n            } else if (step.timeline === 'past') {\n                className += ' Visited';\n            } else if (step.timeline === 'future') {\n                className += ' Unvisited';\n            }\n            if (typeof(step.clicked) === 'function') {\n                className += ' Clickable';\n            }\n            return (\n                <li key={step.title}\n                    className={className}\n                    title={step.title}\n                    onClick={step.clicked}>&middot;</li>\n            );\n        });\n\n    const answerButtons = Object.keys(props.answers)\n        .map((aKey) => {\n            let classes = 'Button AnswerButton';\n            if (props.answers[aKey].selected) {\n                classes += ' SelectedAnswerButton';\n            }\n            return (\n                  <button key={aKey} className={classes} onClick={props.answers[aKey].clicked}>{props.answers[aKey].text}</button>\n            );\n        });\n\n    return (\n        <div>\n            <div className=\"StepCounter\">\n                <ul>\n                    {stepBullets}\n                </ul>\n            </div>\n\n            <h2 className=\"Question\">{props.questionText}</h2>\n\n            {props.helpText ? <p className=\"Help\">{props.helpText}</p> : null}\n\n            <div className={props.answerLayout === 'horiz' ? 'ButtonContainer' : 'VertButtonContainer'}>\n                {answerButtons}\n            </div>\n\n            <div className=\"BackLink\" onClick={props.backClicked}>go back</div>\n            <div className=\"RestartLink\" onClick={props.restartClicked}>restart quiz</div>\n\n        </div>\n    );\n};\n\nexport default question;\n","import React from 'react';\n\nimport './Confirmation.css';\n\nconst confirmation = (props) => {\n\n    // TODO: Add edit functionality\n    // <button class=\"EditButton\" title=\"Edit answer\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span>edit</span></button>\n    const answerList = props.questions.order\n        .map((question) => {\n            const qtext = props.questions.spec[question].q;\n            const atext = props.questions.spec[question].a[props.answers[question]];\n            return (\n                <li key={question}>\n                    <div className=\"QuestionConfirm\">{qtext}</div>\n                    <div className=\"AnswerConfirm\">{atext}</div>\n                </li>\n            );\n        });\n\n    return (\n        <div className=\"Confirmation\">\n            <h2 className=\"ConfirmHeader\">Confirm your answers</h2>\n            <div className=\"Answers\">\n                <ul>\n                    {answerList}\n                </ul>\n            </div>\n            <div className=\"ButtonContainer\">\n                <button className=\"Button ConfirmButton\" onClick={props.forwardClicked}>Confirm</button>\n            </div>\n            <div className=\"BackLink\" onClick={props.backClicked}>go back</div>\n            <div className=\"RestartLink\" onClick={props.restartClicked}>restart quiz</div>\n        </div>\n    );\n\n};\n\nexport default confirmation;\n","import React from 'react';\n\nimport './Response.css';\n\nconst response = (props) => {\n    let i = 0;\n    let answer = props.answerSections.map((section) => {\n            let items = [];\n            if (section.header) {\n                items.push(<h3 key={i}>{section.header}</h3>);\n                ++i;\n            }\n            for (const para of section.text) {\n                items.push(<p key={i}>{para}</p>);\n                ++i;\n            }\n            return items;\n        });\n    let resourceBlock = null;\n    if (props.resources.length > 0) {\n        let j = 0;\n        let linkList = props.resources.map((link) => {\n            ++j;\n            return <li key={j}><a href={link.href} title={link.title}>{link.text}</a></li>\n        });\n        resourceBlock = (\n            <div className=\"Resources\">\n                <h4>Resources</h4>\n                <ul>\n                    {linkList}\n                </ul>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <h2>{props.header}</h2>\n\n            {answer}\n\n            {resourceBlock}\n\n            <div className=\"ButtonContainer\">\n                <button className=\"Button CTAButton\" onClick={() => { window.open('https://domesticemployers.org/take-the-pledge/', '_blank'); } }>Take the Pledge</button>\n                <button className=\"Button CTAButton\">CTA Button #2</button>\n                <button className=\"Button CTAButton\">CTA Button #3</button>\n            </div>\n\n            <div className=\"RestartLink\" onClick={props.restartClicked}>restart quiz</div>\n\n        </div>\n    );\n};\n\nexport default response;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Intro from '../../components/Intro/Intro';\nimport Question from '../../components/Question/Question';\nimport Confirmation from '../../components/Confirmation/Confirmation';\nimport Response from '../../components/Response/Response';\n\nimport QuestionsData from '../../data/questions.json';\nimport BenefitsData from '../../data/benefits.json';\nimport ResponsesData from '../../data/responses.json';\n\nimport Storage from '../../utils/Storage';\n\nimport './Quiz.css';\n\n// TODO: Cookie notice\n\nclass Quiz extends Component {\n\n    state = {\n        visitor_id: null,\n        started: false,\n        completed: false,\n        confirmed: false, \n        answers: {},\n        loading: false,\n        step: null\n    };\n\n    questions = QuestionsData;\n    benefits = BenefitsData;\n    responses = ResponsesData;\n\n    // This will be loaded when it's needed\n    benefitResponses = null;\n\n    customAnswers = {\n        splitTypeByEssential: (answers) => {\n            if (answers.type === 'D') {\n                return 'E';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitTypeByHomeCare: (answers) => {\n            if (answers.type === 'C' || answers.type === 'D') {\n                return 'H';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByTaxes: (answers) => {\n            if (answers.books === 'A' || answers.books === 'B') {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByCompliance: (answers) => {\n            if (answers.books === 'A') {\n                return 'C';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitLengthByYear: (answers) => {\n            if (answers['length of employment'] === 'C') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        splitLengthByMonths: (answers) => {\n            if (answers['length of employment'] === 'A') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        // For FFCRA, reasons break down as--\n        // * self-quarantine + school closed + any [B]\n        // * self-quarantine + any (but not school closed) [Q]\n        // * school closed + any (but not self-quarantine) [S]\n        // * family quarantine and/or stay at home [F]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForFFCRA: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' &&\n                answers['school closed'] === 'A'\n            ) {\n                return 'B';\n            }\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['family quarantine'] === 'A' ||\n                answers['stay at home'] === 'A'\n            ) {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['stay at home'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n        // For NYS, reasons break down as--\n        // * self-quarantine or family quarantine + any [Q]\n        // * school closed (but not either quarantine) + any [Q]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForNYS: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' ||\n                answers['family quarantine'] === 'A'\n            ) {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n    };\n\n    componentDidMount() {\n        let allowed = {};\n        for (const question of this.questions.order) {\n            allowed[question] = Object.keys(this.questions.spec[question].a);\n        }\n        let newstate = Storage.loadState(allowed);\n        if (newstate === null) {\n            let visitor_id = uuidv4();\n            newstate = { visitor_id: visitor_id };\n        }\n        this.setState(newstate);\n    }\n\n    startQuiz = () => {\n        this.setState({ \n            started: true,\n            step: 0,\n            completed: false,\n            confirmed: false,\n            answers: {}\n        }, () => { Storage.saveState(this.state); });\n    };\n\n    clickAnswer = (aKey) => {\n        let newAnswers = { ...this.state.answers };\n        newAnswers[this.questions.order[this.state.step]] = aKey;\n        let newStep = this.state.step + 1;\n        let newstate = { answers: newAnswers };\n        if (newStep < this.questions.order.length) {\n            newstate.step = newStep;\n        } else {\n            newstate.step = null;\n            newstate.completed = true;\n        }\n        this.setState(newstate, () => { Storage.saveState(this.state); });\n    };\n\n    goBack = () => {\n        if (this.state.confirmed) {\n            // Nope! We already sent over your info\n            return;\n        }\n        let newstate = null;\n        if (this.state.completed) {\n            newstate = {\n                step: this.questions.order.length - 1,\n                completed: false\n            };\n        } else if (this.state.started) {\n            let newStep = this.state.step - 1;\n            if (newStep < 0) {\n                newstate = { step: null, started: false };\n            } else {\n                newstate = { step: newStep };\n            }\n        }\n        if (newstate === null) {\n            return;\n        }\n        this.setState(newstate, () => { Storage.saveState(this.state); });\n    };\n\n    goToStep = (stepNum) => {\n        if (stepNum < 0 || stepNum >= this.questions.order.length) {\n            return;\n        }\n        if (this.state.confirmed) {\n            // Nope! We already sent over your info\n            return;\n        }\n        let newstate = { step: stepNum };\n        if (this.state.completed) {\n            newstate.completed = false;\n        } else if (!this.state.started) {\n            newstate.started = true;\n        }\n        this.setState(newstate, () => { Storage.saveState(this.state); });\n    };\n\n    confirmAnswers = () => {\n        if (this.state.confirmed) {\n            // Nope! Already done\n            return;\n        }\n        if (!this.state.completed || !this.state.started) {\n            // That's weird, try again\n            return;\n        }\n        const data = {\n            visitor_id: this.state.visitor_id,\n            answers: {}\n        };\n        for (const question of this.questions.order) {\n            const letter = this.state.answers[question];\n            const answer = this.questions.spec[question].a[letter];\n            data.answers[question] = answer.toUpperCase();\n        }\n        console.log(data);\n        this.setState({ loading: true });\n        Storage.recordResponse(data)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    confirmed: true\n                }, () => { Storage.saveState(this.state); });\n                console.log(response);\n            })\n            .catch(error => {\n                // We probably just want to continue if this is a disaster?\n                this.setState({ loading: false });\n                console.log(error);\n            });\n    };\n\n    restartQuiz = () => {\n        this.setState({ \n            started: false,\n            step: null,\n            completed: false,\n            confirmed: false,\n            answers: {}\n        }, () => { Storage.saveState(this.state); });\n    };\n\n    getSteps() {\n        let steps = [];\n        const stepCount = this.questions.order.length;\n        for (let i = 0; i < stepCount; ++i) {\n            const qstep = this.questions.order[i];\n            let step = {\n                title: this.questions.spec[qstep].t,\n                target: i,\n            };\n            if (this.state.step < i) {\n                step.timeline = 'future';\n            } else if (this.state.step === i) {\n                step.timeline = 'present';\n            } else {\n                step.timeline = 'past';\n            }\n            if (typeof(this.state.answers[qstep]) !== 'undefined') {\n                step.clicked = () => { this.goToStep(i); };\n            }\n            steps.push(step);\n        }\n        return steps;\n    }\n\n    loadBenefitResponses() {\n        let responses = {};\n        for (const benefit of this.benefits.order) {\n            let r = null;\n            try {\n                r = require('../../data/benefits/' + benefit + '.json');\n            } catch {\n                r = null;\n            }\n            if (r) {\n                responses[benefit] = r;\n            } else {\n                responses[benefit] = [];\n            }\n        }\n        this.benefitResponses = responses;\n    }\n\n    buildAnswerKey(benefit) {\n        let answerKey = {};\n        for (const q of this.benefits.spec[benefit].conditions.simple) {\n            answerKey[q] = this.state.answers[q];\n        }\n        for (const k of Object.keys(this.benefits.spec[benefit].conditions.complex)) {\n            let m = this.benefits.spec[benefit].conditions.complex[k];\n            answerKey[k] = this.customAnswers[m](this.state.answers);\n        }\n        return answerKey;\n    }\n\n    replaceEmployeeType(template) {\n        let employeeType = 'employee';\n        if (this.state.answers.type === 'A') {\n            employeeType = 'nanny';\n        } else if (this.state.answers.type === 'B') {\n            employeeType = 'house cleaner';\n        } else if (this.state.answers.type === 'C') {\n            employeeType = 'home attendant';\n        } else if (this.state.answers.type === 'D') {\n            employeeType = 'home health care worker';\n        }\n        return template.map((item) => {\n            return item.replace(/\\{\\{employee_type\\}\\}/g, employeeType);\n        });\n    }\n\n    getFinalAnswer() {\n        let sections = [];\n        let resources = [];\n\n        // Load the benefit responses\n        if (this.benefitResponses === null) {\n            this.loadBenefitResponses();\n        }\n\n        // For each benefit, see if we have any text to add\n        for (const b of this.benefits.order) {\n            let template = [];\n\n            // Build the answer key\n            let answerKey = this.buildAnswerKey(b);\n\n            // Loop through and check for a matching response\n            for (const r of this.benefitResponses[b]) {\n                let match = true;\n                for (const c of Object.keys(r.conditions)) {\n                    if (answerKey[c] !== r.conditions[c]) {\n                        match = false;\n                    }\n                }\n                if (match) {\n                    template = r.text;\n                    break;\n                }\n            }\n\n            // If we have something to send back, replace the employee type and add a section\n            if (template.length > 0) {\n                sections.push({\n                    header: this.benefits.spec[b].long,\n                    text: this.replaceEmployeeType(template)\n                });\n                resources.push({\n                    text: this.benefits.spec[b].short,\n                    title: this.benefits.spec[b].long,\n                    href: this.benefits.spec[b].link\n                });\n            }\n        }\n\n        if (sections.length < 1) {\n            // Set the default text if we don't have anything to show\n            sections.push({\n                header: '',\n                text: this.replaceEmployeeType(this.responses.defaultNoBenefits)\n            });\n        } else {\n            // Or add the intro text if we do\n            sections.unshift({\n                header: '',\n                text: this.replaceEmployeeType(this.responses.introWithBenefits)\n            });\n        }\n\n        // Add the retaliation tag\n        sections.push({\n            header: 'Warning',\n            text: this.replaceEmployeeType(this.responses.retaliationWarning)\n        });\n\n        return {\n            sections: sections,\n            resources: resources\n        };\n    }\n\n    render() {\n\n        // Default to the intro\n        let body = <Intro clicked={this.startQuiz} />;\n\n        // If we're done, find the response\n        if (this.state.confirmed) {\n            const finalAnswer = this.getFinalAnswer();\n            body = <Response\n                header={this.replaceEmployeeType(this.responses.standardHeader)}\n                answerSections={finalAnswer.sections}\n                resources={finalAnswer.resources}\n                restartClicked={this.restartQuiz} />;\n\n        // If we're done answering questions, show a confirm\n        } else if (this.state.completed) {\n            body = <Confirmation\n                questions={this.questions}\n                answers={this.state.answers}\n                backClicked={this.goBack}\n                forwardClicked={this.confirmAnswers}\n                restartClicked={this.restartQuiz} />;\n\n        // Otherwise, show a question\n        } else if (this.state.started) {\n            let question = this.questions.order[this.state.step];\n            if (typeof question == 'string') {\n                const qspec = this.questions.spec[question];\n                const aspec = Object.keys(qspec.a)\n                    .map((aKey) => {\n                        let selected = false;\n                        if (typeof this.state.answers[question] != 'undefined') {\n                            if (this.state.answers[question] === aKey) {\n                                selected = true;\n                            }\n                        }\n                        return {\n                            value: aKey,\n                            text: qspec.a[aKey],\n                            selected: selected,\n                            clicked: () => { this.clickAnswer(aKey); }\n                        };\n                    });\n                const steps = this.getSteps();\n                body = (\n                    <Question\n                        questionText={qspec.q}\n                        helpText={qspec.help}\n                        answerLayout={qspec.layout}\n                        answers={aspec}\n                        steps={steps}\n                        backClicked={this.goBack}\n                        restartClicked={this.restartQuiz} />\n                );\n            }\n        }\n\n        return (\n            <div className=\"Quiz\">\n                {body}\n            </div>\n        );\n    }\n\n}\n\nexport default Quiz;\n","import React from 'react';\n\nimport './Login.css';\n\nconst login = (props) => {\n    let button = null;\n    if (props.loading) {\n        button = <button disabled=\"disabled\" className=\"Loading\">Submit</button>;\n    } else {\n        button = <button type=\"submit\">Submit</button>;\n    }\n\n    return (\n        <div className=\"LoginFrame\">\n            <div className=\"LoginBox\">\n                {props.loginError ?\n                    <div class=\"Error\">You could not be logged in.</div>\n                : null}\n                <form method=\"post\" onSubmit={props.submitted}>\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" value={props.username} onChange={props.usernameChanged} autoComplete=\"username\" />\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" value={props.password} onChange={props.passwordChanged} autoComplete=\"current-password\" />\n                    <div className=\"ButtonContainer\">\n                        {button}\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default login;\n","import React, { Component } from 'react';\n\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz';\nimport Login from './components/Login/Login';\n\nimport Storage from './utils/Storage';\n\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        loading: false,\n        username: '',\n        password: '',\n        loggedIn: false,\n        loginError: false\n    };\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    };\n\n    changePassword = (e) => {\n        this.setState({ password: e.target.value });\n    };\n\n    validate = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true,\n            loginError: false\n        });\n        Storage.checkLogin({\n            username: this.state.username,\n            password: this.state.password\n        })\n        .then(response => {\n            this.setState({\n                loading: false,\n                loggedIn: true\n            });\n            console.log(response);\n        })\n        .catch(error => {\n            console.log(error);\n            this.setState({ \n                loading: false,\n                loginError: true\n            });\n        });\n    }\n\n    render() {\n        let layout = null;\n        if (this.state.loggedIn) {\n            layout = (\n                <Layout>\n                    <Quiz />\n                </Layout>\n            );\n        } else {\n            layout = <Login\n                loading={this.state.loading}\n                loginError={this.state.loginError}\n                username={this.state.username}\n                password={this.state.password}\n                usernameChanged={this.changeUsername}\n                passwordChanged={this.changePassword}\n                submitted={this.validate} />;\n        }\n        return (\n            <div className=\"App\">\n                {layout}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}