{"version":3,"sources":["components/UI/Spinner/Spinner.js","hoc/Aux/Aux.js","hoc/Layout/Layout.js","components/UI/Controls/Controls.js","components/BenefitsTool/Intro/Intro.js","storage/cookies/IdentifierCookie.js","storage/Api.js","utils/Logger.js","storage/cookies/LanguageCookie.js","utils/Language.js","containers/BenefitsTool/Landing/Landing.js","components/BenefitsTool/StepCounter/StepCounter.js","components/BenefitsTool/Question/Question.js","logic/Questions.js","containers/BenefitsTool/Quiz/Quiz.js","components/BenefitsTool/AnswerList/ViewAnswer/ViewAnswer.js","components/BenefitsTool/AnswerList/EditAnswer/EditAnswer.js","components/BenefitsTool/AnswerList/AnswerList.js","containers/BenefitsTool/Confirmation/EditAnswers/EditAnswers.js","components/BenefitsTool/ContactInfo/ContactInfo.js","containers/BenefitsTool/Confirmation/Confirmation.js","components/BenefitsTool/Response/Response.js","logic/results/Screening.js","logic/results/Eligibility.js","logic/results/ProcessText.js","logic/results/Resources.js","logic/CollectResults.js","containers/BenefitsTool/Results/Results.js","storage/cookies/AnswersCookie.js","storage/cookies/VisitorCookie.js","containers/BenefitsTool/BenefitsTool.js","containers/Admin/Language/Language.js","containers/Admin/Dashboard/Dashboard.js","components/LoginBox/LoginBox.js","containers/Login/Login.js","hoc/LoginLayout/LoginLayout.js","storage/cookies/LoginCookie.js","containers/Admin/Admin.js","components/UI/Notice/Notice.js","storage/cookies/CookieNoticeCookie.js","containers/CookieNotice/CookieNotice.js","containers/Main/Main.js","storage/cookies/PreLaunchCookie.js","containers/PreLaunch/PreLaunch.js","App.js","serviceWorker.js","index.js","utils/CookieManager.js","data/lang sync /^/.//.*/.json$","storage/CookieBase.js"],"names":["spinner","props","className","aux","children","layout","href","src","alt","lang","logo_alt_text","header_title","controls","buttons","map","button","attributes","key","text","cname","classNames","join","disabled","clicked","onClick","links","link","errorMessage","length","buttonLayout","intro","header","dangerouslySetInnerHTML","__html","message","error","identifierCookie","CookieBase","path","maxAge","sameSite","axiosInstance","this","axios","create","baseURL","info","toJSON","context","request_url","config","request_data","data","response","status","code","request","visitor_id","on_success","on_error","token","IdentifierCookie","get","checkToken","then","set","catch","isAxiosError","parsed","parseAxiosError","Logger","alert","api_error","bumpSessionInit","initSession","returned","getAxios","post","LEVELS","logger_settings","level","options","cutoffLevel","cutoffLevelConsole","cutoffLevelApi","getLevelRank","clevel","console_level","alevel","api_level","levelNum","indexOf","writeToConsole","log","console","Api","trackError","languageCookie","Language","language_code","loaded","translations","allowed_languages","r","require","reportError","cookie_lang","LanguageCookie","includes","load","transform","init","translation","Keys","markdown_allowed","markdown","match","doc","md","render","Landing","state","loaded_lang","startQuiz","setState","bumpSession","goToQuiz","errorOrMoveOn","current","clearAnswers","history","push","error_msg","Intro","Component","withRouter","stepCounter","bullets","i","steps","step","currentStep","title","question","questionText","helpText","question_order","question_spec","type","answer_count","help","agency","books","localized_data","english_data","qcode","letter","ascii","charCodeAt","letters","String","fromCharCode","answerKey","answers","validAnswer","loadLocalizedData","loadEnglishData","english_answers","answer","toUpperCase","confirmation","aspec","selected","Object","keys","sort","getData","Local","English","LangObj","name","lang_key","lc","uc","which","replace","Quiz","hasError","clickAnswer","Questions","getCodeByStep","saveAnswer","count","newStep","currentUrlStep","goBack","err","goToStep","stepNum","warn","cancelQuiz","restartQuiz","error_message","back_link_text","restart_link_text","cancel_link_text","params","test","parseInt","isNaN","stepCount","getLocalSpec","target","qspec","answerButtons","aKey","viewAnswer","selectedAnswer","edit_title","clickedEdit","aria-hidden","edit_alt","editAnswer","abuttons","btn","cancel_title","clickedCancel","cancel_alt","answerList","questions","answerBlock","isEditing","EditAnswer","ViewAnswer","EditAnswers","editingAnswer","edited","getLocalConfirmation","saveEdit","cancelEdit","startEdit","contactInfo","invitation","method","onSubmit","e","preventDefault","email_label","emailError","email_error","value","email","onChange","emailChanged","autoComplete","zip_label","zipError","zip_error","zip","zipChanged","Confirmation","loading","saveError","contactValidOrEmpty","hasRecordingError","regexValidZip","changeEmail","val","newstate","EmailValidator","okToSubmitContact","changeZip","confirmAnswers","getEnglishAnswers","trim","contact","recordResponse","remove","edit_answers","confirm_button","restart_link","recording_error","validOrEmpty","goto","needsRedirect","to","q","a","answerSections","section","items","resourceBlock","resources","linkList","subList","rel","resources_header","resources_intro","conditions","ffcra","simple","complex","reason","nys","pssl","dwbor","cares","customAnswers","splitTypeByEssential","splitTypeByHomeCare","splitBooksByTaxes","splitBooksByCompliance","splitLengthByYear","splitLengthByMonths","findReasonForFFCRA","findReasonForNYS","byBenefit","benefit","scenario","k","m","scenarios","eligibility","found","bdata","EligibilityData","c","lang_lookup_key","type_answer","type_replacement","typeAnswer","getAnswerLetters","toLowerCase","f","findTypeReplacement","result_key","t","replaceEmployeeType","ResourceData","benefits","b_resources","o_resources","other","benefits_order","Screening","getScenarios","Eligibility","screen","ProcessText","setEmployeeType","process","sections","getAllSections","getAllResources","benefitSections","getBenefitSections","getBooksSection","Resources","getBenefitResources","getOtherResources","all","Results","clickCTAButton","window","open","results","CollectResults","compile","ctas","CtaData","Math","floor","random","cta","answersCookie","cookieobj","filterAnswers","visitorCookie","BenefitsTool","AnswersCookie","completed","newAnswers","ready","started","debug","q_code","VisitorCookie","uuidv4","doQuiz","AdminLanguage","AdminDashboard","loginBox","button_text","loginError","login_error","submitted","username_label","username","usernameChanged","password_label","password","passwordChanged","Login","changeUsername","changePassword","validate","login_type","checkPrelaunchLogin","checkAdminLogin","updateLoginState","loginLayout","loginCookie","Admin","loggedIn","updateLogin","LoginCookie","checkAdminToken","Dashboard","notice","show","closed","accepted","accept_button_text","cookieNoticeCookie","CookieNotice","showNotice","noticeAccepted","hideNotice","acceptNotice","CookieNoticeCookie","Date","close_alt","Main","component","Aux","preLaunchCookie","PreLaunch","PreLaunchCookie","checkPrelaunchToken","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","cm","Cookies","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","resolve","module","exports","specs","compressed","filter","manager","CookieManager","expandData","cookiestring","contractData","Buffer","toString","JSON","parse","stringify"],"mappings":"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","file":"static/js/main.80902f02.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Spinner.css';\n\n// NB: We can't use language here because this is what we show when language data isn't loaded!\n\nconst spinner = (props) => {\n    return (\n        <div className=\"Spinner\">Loading...</div>\n    );\n};\n\nexport default spinner;\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport './Layout.css';\n\nconst layout = (props) => {\n    return (\n        <div className=\"BenefitsTool\">\n            <div className=\"Logo\">\n                <a href=\"https://domesticemployers.org/\"><img src=\"/images/logo.png\" alt={props.lang.logo_alt_text} /></a>\n            </div>\n            <div className=\"Header\">\n                <h1><a href=\"/\">{props.lang.header_title}</a></h1>\n            </div>\n            <div className=\"MainContent\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default layout;\n","import React from 'react';\n\nimport './Controls.css';\n\nconst controls = (props) => {\n\n    let buttons = {};\n    if (typeof props.buttons !== 'undefined') {\n        buttons = props.buttons\n            .map((button) => {\n                let attributes = {\n                    key: button.key ? button.key : button.text,\n                };\n                let cname = 'ControlButton';\n                if (button.classNames) {\n                    cname += ' ' + button.classNames.join(' ');\n                }\n                if (button.disabled) {\n                    attributes.disabled = true;\n                    cname += ' DisabledButton';\n                }\n                if (typeof button.clicked === 'function') {\n                    attributes.onClick = button.clicked;\n                }\n                attributes.className = cname;\n                return <button {...attributes}>{button.text}</button>;\n            });\n    }\n\n    let links = {};\n    if (typeof props.links !== 'undefined') {\n        links = props.links\n            .map((link) => {\n                let cname = 'ControlLink';\n                if (link.classNames) {\n                    cname += ' ' + link.classNames.join(' ');\n                }\n                return <div key={link.key ? link.key : link.text} className={cname} onClick={link.clicked}>{link.text}</div>;\n            });\n    }\n\n    return (\n        <div className=\"Controls\">\n        {props.errorMessage ?\n            <div className=\"ControlsError\">\n                <p>{props.errorMessage}</p>\n            </div>\n        : null}\n        {buttons.length > 0 ?\n            <div className={props.buttonLayout === 'vert' ? 'VertButtonContainer' : 'ButtonContainer'}>\n                {buttons}\n            </div>\n        : null}\n        {links.length > 0 ?\n            <div className=\"LinkContainer\">\n                {links}\n            </div>\n        : null}\n        </div>\n    );\n\n};\n\nexport default controls;\n","import React from 'react';\n\nimport Controls from '../../UI/Controls/Controls';\n\nconst intro = (props) => {\n\n    const buttons = [\n        {\n            classNames: [ 'StartButton' ],\n            clicked: props.clicked,\n            text: 'Start'\n        }\n    ];\n\n    return (\n        <div>\n            <h2>{props.lang.header}</h2>\n\n            <div className=\"IntroMessage\" dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n\n            <Controls buttons={buttons} errorMessage={props.error} />\n        </div>\n    );\n};\n\nexport default intro;\n","import CookieBase from '../CookieBase';\n\nconst identifierCookie = new CookieBase(\n    'hnct-sessionid', // name\n    {\n        path: '/',\n        maxAge: 60 * 10,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default identifierCookie;\n","import axios from 'axios';\n\nimport IdentifierCookie from './cookies/IdentifierCookie';\nimport Logger from '../utils/Logger';\n\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/v1.0' : 'http://localhost2:3001/api/v1.0';\n\nclass Api {\n\n    // This will be created when it's needed\n    axiosInstance = null;\n\n    getAxios() {\n        if (this.axiosInstance === null) {\n            this.axiosInstance = axios.create({\n                baseURL: BASE_URL,\n            });\n        }\n        return this.axiosInstance;\n    }\n\n    parseAxiosError(error) {\n        const info = error.toJSON();\n        let context = {\n            message: info.message,\n            request_url: info.config.baseURL,\n            request_data: info.config.data\n        };\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            context.status = error.response.status;\n            return {\n                code: error.response.data.code,\n                message: error.response.data.message,\n                context: context\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            return {\n                code: 'NETWORK_FAILURE',\n                message: context.message,\n                context: context\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            return {\n                code: 'UNKNOWN',\n                message: error.message,\n                context: context\n            };\n        }\n    }\n\n    bumpSession(visitor_id, on_success, on_error) {\n        let token = IdentifierCookie.get();\n        if (token) {\n            this.checkToken({ visitor_id: visitor_id, token: token })\n                .then(response => {\n                    IdentifierCookie.set(token); // re-up on the expiration\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = this.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Session check failed', { api_error: parsed });\n                        if (typeof on_error === 'function') {\n                            on_error();\n                        }\n                    }\n                    this.bumpSessionInit(visitor_id, on_success, on_error);\n                });\n        } else {\n            this.bumpSessionInit(visitor_id, on_success, on_error);\n        }\n    }\n\n    bumpSessionInit(visitor_id, on_success, on_error) {\n        this.initSession({ visitor_id: visitor_id })\n            .then(response => {\n                if (response.data.token) {\n                    IdentifierCookie.set(response.data.token);\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                } else {\n                    Logger.alert('Session init succeeded without returning a token', { returned: response.data });\n                    if (typeof on_error === 'function') {\n                        on_error();\n                    }\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = this.parseAxiosError(error);\n                Logger.alert('Session init failed', { api_error: parsed });\n                if (typeof on_error === 'function') {\n                    on_error();\n                }\n            });\n    }\n\n    initSession(data) {\n        return this.getAxios().post('/session/init', data);\n    }\n\n    checkToken(data) {\n        return this.getAxios().post('/session/check', data);\n    }\n\n    recordResponse(data) {\n        return this.getAxios().post('/response', data);\n    }\n\n    checkAdminLogin(data) {\n        return this.getAxios().post('/admin/session/login', data);\n    }\n\n    checkAdminToken(data) {\n        return this.getAxios().post('/admin/session/check', data);\n    }\n\n    checkPrelaunchLogin(data) {\n        return this.getAxios().post('/prelaunch/login', data);\n    }\n\n    checkPrelaunchToken(data) {\n        return this.getAxios().post('/prelaunch/check', data);\n    }\n}\n\nexport default new Api();\n","import Api from '../storage/Api';\n\nconst LEVELS = [\n    'EMERG',   // Emergency: system is unusable\n    'ALERT',   // Alert: action must be taken immediately\n    'CRIT',    // Critical: critical conditions\n    'ERR',     // Error: error conditions\n    'WARN',    // Warning: warning conditions\n    'NOTICE',  // Notice: normal but significant condition\n    'INFO',    // Informational: informational messages\n    'DEBUG'    // Debug: debug messages\n];\n\nclass Logger {\n\n    cutoffLevel = 0;\n    cutoffLevelConsole = 0;\n    cutoffLevelApi = 0;\n\n    constructor(level, options) {\n        this.cutoffLevel = this.getLevelRank(level ? level : 'WARN');\n        let clevel = 'DEBUG';\n        if (options && 'console_level' in options) {\n            clevel = options.console_level;\n        }\n        this.cutoffLevelConsole = this.getLevelRank(clevel);\n        let alevel = 'ALERT';\n        if (options && 'api_level' in options) {\n            alevel = options.api_level;\n        }\n        this.cutoffLevelApi = this.getLevelRank(alevel);\n    }\n\n    getLevelRank(level) {\n        const levelNum = LEVELS.indexOf[level];\n        if (levelNum < 0) {\n            this.writeToConsole('WARN', 'Log level ' + level + ' unknown');\n        }\n        return levelNum;\n    }\n\n    emerg(message, context) { this.log('EMERG', message, context); }\n    alert(message, context) { this.log('ALERT', message, context); }\n    crit(message, context) { this.log('CRIT', message, context); }\n    err(message, context) { this.log('ERR', message, context); }\n    warn(message, context) { this.log('WARN', message, context); }\n    notice(message, context) { this.log('NOTICE', message, context); }\n    info(message, context) { this.log('INFO', message, context); }\n    debug(message, context) { this.log('DEBUG', message, context); }\n\n    log(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevel) {\n            return;\n        }\n        this.writeToConsole(level, message, context);\n    }\n\n    writeToConsole(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelConsole) {\n            return;\n        }\n        console.log('[' + level + '] ' + message);\n        if (context) {\n            console.log(context);\n        }\n    }\n\n    writeToApi(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelApi) {\n            return;\n        }\n        const data = {\n            level: level,\n            message: message,\n            context: context\n        };\n        Api.trackError(data)\n            .then(response => {\n                // Log the response, but ignore it otherwise\n                console.log(response);\n            })\n            .catch(error => {\n                // Log the error, but ignore it otherwise\n                console.log(error);\n            });\n    }\n\n}\n\nlet logger_settings = {};\nif (process.env.NODE_ENV === 'production') {\n    logger_settings = {\n        level: 'NOTICE',\n        options: null\n    };\n} else {\n    logger_settings = {\n        level: 'DEBUG',\n        options: {\n            console_level: 'DEBUG'\n        }\n    };\n}\n\nexport default new Logger(logger_settings.level, logger_settings.options);\n","import CookieBase from '../CookieBase';\n\nconst languageCookie = new CookieBase(\n    'hnct-language', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default languageCookie;\n","import Logger from './Logger';\nimport LanguageCookie from '../storage/cookies/LanguageCookie';\n\nimport Keys from '../data/lang/keys.json';\n\nclass Language {\n\n    language_code = null;\n    loaded = false;\n    translations = null;\n    allowed_languages = [ 'en' ];\n\n    load(code) {\n        let r = null;\n        try {\n            r = require('../data/lang/' + code + '.json');\n        } catch {\n            r = null;\n        }\n        if (r === null) {\n            this.reportError();\n            return false;\n        }\n        this.translations = r;\n        this.language_code = code;\n        this.loaded = true;\n    }\n\n    init() {\n        let cookie_lang = LanguageCookie.get();\n        if (cookie_lang && this.allowed_languages.includes(cookie_lang)) {\n            this.load(cookie_lang);\n        } else {\n            this.load('en');\n        }\n    }\n\n    get(key, transform) {\n        if (!this.loaded) {\n            this.init();\n            if (!this.loaded) {\n                Logger.alert('Translation was requested, but the current language could not be loaded ', { key: key });\n                return key;\n            }\n        }\n        if (key in this.translations) {\n            let translation = this.translations[key];\n            if (typeof transform === 'function') {\n                translation = transform(translation);\n            }\n            if (key in Keys) {\n                if (Keys[key].markdown_allowed) {\n                    translation = this.markdown(translation);\n                    if (!translation.match(/^</)) {\n                        translation = '<p>' + translation + '</p>';\n                    }\n                }\n            }\n            return translation;\n        } else {\n            if (key in Keys) {\n                Logger.alert('Missing translation', { lang: this.language_code, key: key, doc: Keys[key] });\n            } else {\n                Logger.alert('Translation requested for undocumented key', { key: key });\n            }\n        }\n        return key;\n    }\n\n    markdown(translation) {\n        if (!this.md) {\n            this.md = require('markdown-it')();\n        }\n        return this.md.render(translation);\n    }\n\n}\n\nexport { Language };\nexport default new Language('en');\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Intro from '../../../components/BenefitsTool/Intro/Intro';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\n\nclass Landing extends Component {\n\n    state = {\n        loaded_lang: false,\n        error: false\n    };\n\n    lang = null;\n\n    startQuiz = () => {\n        this.setState({ error: false });\n        Api.bumpSession(this.props.visitor_id, () => {\n                this.goToQuiz();\n            },\n            () => {\n                this.errorOrMoveOn();\n            });\n    };\n\n    errorOrMoveOn() {\n        // These are alert-level errors for me the programmer, but not\n        // for the user -- if the API is malfunctioning, let's give it\n        // one chance to get over a hiccup, then send them on to the\n        // quiz page without getting a token to record their answers\n        this.setState((current) => {\n            if (current.error) {\n                this.goToQuiz();\n                return { error: false };\n            } else {\n                return { error: true };\n            }\n        });\n    }\n\n    goToQuiz() {\n        this.setState({ error: false }, () => {\n            this.props.clearAnswers();\n            this.props.history.push('/quiz');\n        });\n    }\n\n    componentDidMount() {\n        this.lang = {\n            header: Language.get('landing_header'),\n            message: Language.get('landing_message'),\n            error_msg: Language.get('landing_error')\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return <Intro\n            error={this.state.error ? this.lang.error_msg : null}\n            clicked={this.startQuiz}\n            lang={this.lang} />;\n    }\n}\n\nexport default withRouter(Landing);\n","import React from 'react';\n\nimport './StepCounter.css';\n\nconst stepCounter = (props) => {\n\n    let bullets = [];\n    for (let i = 0; i < props.steps.length; ++i) {\n        let step = props.steps[i];\n        let className = 'Bullet';\n        if (props.currentStep < i) {\n            className += ' Unvisited';\n        } else if (props.currentStep === i) {\n            className += ' Current';\n        } else {\n            className += ' Visited';\n        }\n        if (typeof(step.clicked) === 'function') {\n            className += ' Clickable';\n        }\n        bullets.push(<li key={step.title}\n            className={className}\n            title={step.title}\n            onClick={step.clicked}>&middot;</li>);\n    }\n\n    return (\n        <div className=\"StepCounter\">\n            <ul>\n                {bullets}\n            </ul>\n        </div>\n    );\n};\n\nexport default stepCounter;\n","import React from 'react';\n\nimport './Question.css';\n\nconst question = (props) => {\n    return (\n        <div className=\"Question\">\n            <h2 className=\"QuestionHeader\">{props.questionText}</h2>\n\n            {props.helpText ? <p className=\"Help\" dangerouslySetInnerHTML={{__html: props.helpText}}></p> : null}\n        </div>\n    );\n};\n\nexport default question;\n","\nimport Local, { Language } from '../utils/Language';\n\nconst ASCII_CODE_FOR_CAPITAL_A = 65;\n\nclass Questions {\n    question_order = [\n        'type', 'agency', 'books', 'hours per week',\n        'length of employment', 'hours per year', 'self-quarantine',\n        'family quarantine', 'stay at home', 'school closed'\n    ];\n\n    question_spec = {\n        type: {\n            answer_count: 4,\n            layout: 'vert',\n            help: true\n        },\n        agency: {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        books: {\n            answer_count: 3,\n            layout: 'horiz',\n            help: true\n        },\n        'hours per week': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'length of employment': {\n            answer_count: 3,\n            layout: 'horiz',\n            help: false\n        },\n        'hours per year': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'self-quarantine': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'family quarantine': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: true\n        },\n        'stay at home': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'school closed': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        }\n    };\n\n    localized_data = null;\n    english_data = null;\n\n    validAnswer(qcode, letter) {\n        if (!letter || letter.length > 1) {\n            return false;\n        }\n        if (qcode in this.question_spec) {\n            const ascii = letter.charCodeAt(0);\n            if (ascii < ASCII_CODE_FOR_CAPITAL_A) {\n                return false;\n            }\n            if (ascii > ASCII_CODE_FOR_CAPITAL_A + this.question_spec[qcode].answer_count - 1) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    getAnswerLetters(qcode) {\n        if (qcode in this.question_spec) {\n            let letters = [];\n            for (let i = 0; i < this.question_spec[qcode].answer_count; ++i) {\n                letters.push(String.fromCharCode(ASCII_CODE_FOR_CAPITAL_A + i));\n            }\n            return letters;\n        }\n        return [];\n    }\n\n    filterAnswers(answerKey) {\n        let answers = {};\n        for (const qcode of this.question_order) {\n            if (this.validAnswer(qcode, answerKey[qcode])) {\n                answers[qcode] = answerKey[qcode];\n            }\n        }\n        return answers;\n    }\n\n    count() {\n        return this.question_order.length;\n    }\n\n    getCodeByStep(step) {\n        if (typeof this.question_order[step] === 'undefined') {\n            return null;\n        }\n        return this.question_order[step];\n    }\n\n    // spec looks like this:\n    // {\n    //   q: the full question,\n    //   t: the short title,\n    //   a: the answers, as: {\n    //     'A': the first answer,\n    //     'B': the second answer, ... etc\n    //   },\n    //   layout: 'vert' or 'horiz',\n    //   help: any help text (optional),\n    // }\n    getLocalSpec(qcode) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        if (typeof this.localized_data[qcode] === 'undefined') {\n            return null;\n        }\n        return this.localized_data[qcode];\n    }\n\n    getEnglishAnswers(answerKey) {\n        if (this.english_data === null) {\n            this.loadEnglishData();\n        }\n        let english_answers = {};\n        for (const qcode of this.question_order) {\n            const letter = answerKey[qcode];\n            const answer = this.english_data[qcode].answers[letter];\n            english_answers[qcode] = answer.toUpperCase();\n        }\n        return english_answers;\n    }\n\n    getLocalConfirmation(answerKey) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        let confirmation = [];\n        for (const qcode of this.question_order) {\n            const aspec = this.localized_data[qcode].answers;\n            let answers = [];\n            let selected = null;\n            for (const letter of Object.keys(aspec).sort()) {\n                let answer = {\n                    letter: letter,\n                    text: aspec[letter]\n                };\n                if (letter === answerKey[qcode]) {\n                    selected = { ...answer };\n                }\n                answers.push(answer);\n            }\n            confirmation.push({\n                code: qcode,\n                text: this.localized_data[qcode].question,\n                help: this.localized_data[qcode].help,\n                layout: this.localized_data[qcode].layout,\n                answers: answers,\n                selected: selected\n            });\n        }\n        return confirmation;\n    }\n\n    loadLocalizedData() {\n        this.localized_data = this.getData(Local);\n    }\n\n    loadEnglishData() {\n        if (Local.language_code === 'en') {\n            if (this.localized_data === null) {\n                this.loadLocalizedData();\n            }\n            this.english_data = this.localized_data;\n        } else {\n            const English = new Language('en');\n            this.english_data = this.getData(English);\n        }\n    }\n\n    getData(LangObj) {\n        let data = {};\n        for (let name of this.question_order) {\n            data[name] = {\n                question: LangObj.get(this.lang_key(name, 'question')),\n                title: LangObj.get(this.lang_key(name, 'short')),\n                layout: this.question_spec[name].layout,\n                answers: {}\n            }\n            for (let i = 0; i < this.question_spec[name].answer_count; ++i) {\n                const lc = String.fromCharCode(97 + i);\n                const uc = String.fromCharCode(65 + i);\n                data[name].answers[uc] = LangObj.get(this.lang_key(name, 'answer_' + lc));\n            }\n            if (this.question_spec[name].help) {\n                data[name].help = LangObj.get(this.lang_key(name, 'help'));\n            }\n        }\n        return data;\n    }\n\n    lang_key(name, which) {\n        return 'quiz_' + name.replace(/[^a-z]/g, '_') + '_' + which;\n    }\n\n}\n\nexport default new Questions();\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport StepCounter from '../../../components/BenefitsTool/StepCounter/StepCounter';\nimport Question from '../../../components/BenefitsTool/Question/Question';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\n\nimport Questions from '../../../logic/Questions';\n\n// TODO: Add links in the controls to Language\n// TODO: Replace console logging with use of the logger\n\nclass Quiz extends Component {\n\n    state = {\n        loaded_lang: false,\n        hasError: false\n    };\n\n    clickAnswer = (letter) => {\n        const qcode = Questions.getCodeByStep(this.currentStep());\n        const ok = this.props.saveAnswer(qcode, letter);\n        if (ok) {\n            if (this.currentStep() + 1 >= Questions.count()) {\n                this.props.history.push('/confirm');\n            } else {\n                const newStep = this.currentUrlStep() + 1;\n                this.props.history.push('/quiz/' + newStep);\n            }\n        } else {\n            Logger.alert('Could not save answer', { qcode: qcode, letter: letter });\n            this.setState({ hasError: true });\n        }\n    };\n\n    goBack = () => {\n        // NB: the urls are 1-indexed, so the current step in 0-index form is\n        // actually back by one\n        let newStep = this.currentUrlStep() - 1;\n        if (newStep < 1) {\n            newStep = 0;\n            Logger.err('Request to go back before step 1');\n        }\n        this.props.history.push('/quiz/' + newStep);\n    };\n\n    goToStep = (stepNum) => {\n        if (stepNum < 1 || stepNum > Questions.count()) {\n            Logger.warn('Event request to go to an out-of-bounds step', { step: stepNum });\n            return;\n        }\n        this.props.history.push('/quiz/' + stepNum);\n    };\n\n    cancelQuiz = () => {\n        this.props.history.push('/');\n    };\n\n    restartQuiz = () => {\n        this.props.history.push('/quiz/1');\n    };\n\n    componentDidMount() {\n        this.lang = {\n            error_message: Language.get('quiz_save_failed_error'),\n            back_link_text: Language.get('quiz_back_link_text'),\n            restart_link_text: Language.get('util_restart_link_text'),\n            cancel_link_text: Language.get('quiz_cancel_link_text'),\n        };\n        this.setState({ loaded_lang: true });\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    currentStep() {\n        let current = 0;\n        if (this.props.match.params.step) {\n            let test = parseInt(this.props.match.params.step);\n            if (!isNaN(test) && test > 0 && test <= Questions.count()) {\n                current = test - 1;\n            } else {\n                Logger.warn('URL request to go to an out-of-bounds step', { step: this.props.match.params.step });\n            }\n        }\n        return current;\n    }\n\n    currentUrlStep() {\n        return this.currentStep() + 1;\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        // Steps\n        let steps = [];\n        const stepCount = Questions.count();\n        for (let i = 0; i < stepCount; ++i) {\n            const qcode = Questions.getCodeByStep(i);\n            const qspec = Questions.getLocalSpec(qcode);\n            let step = {\n                title: qspec.title,\n                target: i,\n            };\n            if (typeof(this.props.answers[qcode]) !== 'undefined') {\n                step.clicked = () => { this.goToStep(i + 1); };\n            }\n            steps.push(step);\n        }\n\n        // Question\n        let qcode = Questions.getCodeByStep(this.currentStep());\n        if (typeof qcode !== 'string') {\n            qcode = Questions.getCodeByStep(0);\n        }\n        const qspec = Questions.getLocalSpec(qcode);\n\n        // Answers\n        const answerButtons = Object.keys(qspec.answers).sort()\n            .map((aKey) => {\n                let classNames = [ 'AnswerButton' ];\n                if (typeof this.props.answers[qcode] != 'undefined') {\n                    if (this.props.answers[qcode] === aKey) {\n                        classNames.push('Selected');\n                    }\n                }\n                return {\n                    key: aKey,\n                    classNames: classNames,\n                    clicked: () => { this.clickAnswer(aKey); },\n                    text: qspec.answers[aKey]\n                };\n            });\n\n        // Links\n        let links = [];\n        if (this.currentStep() > 0) {\n            links.push({\n                classNames: [ 'BackLink' ],\n                clicked: this.goBack,\n                text: this.lang.back_link_text\n            });\n            links.push({\n                classNames: [ 'RestartLink' ],\n                clicked: this.restartQuiz,\n                text: this.lang.restart_link_text\n            });\n        } else {\n            links.push({\n                classNames: [ 'CancelLink' ],\n                clicked: this.cancelQuiz,\n                text: this.lang.cancel_link_text\n            });\n        }\n\n        let message = null;\n        if (this.state.hasError) {\n            message = this.lang.error_message;\n        }\n\n        return (\n            <div className=\"Quiz\">\n                <StepCounter\n                    steps={steps}\n                    currentStep={this.currentStep()} />\n                <Question\n                    questionText={qspec.question}\n                    helpText={qspec.help} />\n                <Controls\n                    errorMessage={message}\n                    buttonLayout={qspec.layout}\n                    buttons={answerButtons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Quiz);\n","import React from 'react';\n\nconst viewAnswer = (props) => {\n    return (\n        <div className=\"AnswerConfirm\">\n            <span className=\"SelectedAnswer\">{props.selectedAnswer.text}</span>\n            <button\n                className=\"EditButton\"\n                title={props.lang.edit_title}\n                onClick={props.clickedEdit}>\n                <i className=\"fas fa-pencil-alt\" aria-hidden=\"true\" title={props.lang.edit_alt}></i>\n            </button>\n        </div>\n    );\n}\n\nexport default viewAnswer;\n","import React from 'react';\n\nimport Controls from '../../../UI/Controls/Controls';\n\nconst editAnswer = (props) => {\n    const abuttons = props.answers\n        .map((answer) => {\n            let btn = {\n                key: answer.letter,\n                classNames: [ 'AnswerButton' ],\n                text: answer.text,\n                clicked: answer.clicked\n            };\n            if (answer.letter === props.selectedAnswer.letter) {\n                btn.classNames.push('Selected');\n            }\n            return btn;\n        });\n\n    return (\n        <div className=\"AnswerEdit\">\n            <button className=\"CancelButton\"\n                title={props.lang.cancel_title}\n                onClick={props.clickedCancel}>\n                <i className=\"fas fa-times\" aria-hidden=\"true\" title={props.lang.cancel_alt}></i>\n            </button>\n            <Controls\n                buttons={abuttons}\n                buttonLayout={props.layout} />\n        </div>\n    );\n}\n\nexport default editAnswer;\n","import React from 'react';\n\nimport ViewAnswer from './ViewAnswer/ViewAnswer';\nimport EditAnswer from './EditAnswer/EditAnswer';\n\nimport './AnswerList.css';\n\nconst answerList = (props) => {\n\n    const answerList = props.questions\n        .map((question) => {\n            let answerBlock = null;\n            if (question.isEditing) {\n                answerBlock = <EditAnswer\n                    lang={props.lang}\n                    answers={question.answers}\n                    selectedAnswer={question.selected}\n                    clickedCancel={question.clickedCancel}\n                    layout={question.layout} />;\n            } else {\n                answerBlock = <ViewAnswer\n                    lang={props.lang}\n                    selectedAnswer={question.selected}\n                    clickedEdit={question.clickedEdit} />\n            }\n            return (\n                <li key={question.code}>\n                    <div className=\"QuestionConfirm\">{question.text}</div>\n                    {answerBlock}\n                </li>\n            );\n        });\n\n    return (\n        <div className=\"Answers\">\n            <h3 className=\"AnswersHeader\">{props.lang.header}</h3>\n            <ul>\n                {answerList}\n            </ul>\n        </div>\n    );\n\n}\n\nexport default answerList;\n","import React, { Component } from 'react';\n\nimport AnswerList from '../../../../components/BenefitsTool/AnswerList/AnswerList';\n\nimport Questions from '../../../../logic/Questions';\n\nclass EditAnswers extends Component {\n\n    state = {\n        editingAnswer: null\n    };\n\n    startEdit(question) {\n        this.setState({ editingAnswer: question });\n    }\n\n    cancelEdit(question) {\n        this.setState({ editingAnswer: null });\n    }\n\n    saveEdit(question, letter) {\n        this.props.edited(question, letter);\n        this.setState({ editingAnswer: null });\n    }\n\n    render() {\n        let questions = Questions.getLocalConfirmation(this.props.answers)\n            .map(question => {\n                let answers = question.answers.map(answer => {\n                    return { ...answer, \n                        clicked: () => this.saveEdit(question.code, answer.letter)\n                    };\n                });\n                return { ...question,\n                    answers: answers,\n                    isEditing: this.state.editingAnswer === question.code,\n                    clickedCancel: () => this.cancelEdit(question.code),\n                    clickedEdit: () => this.startEdit(question.code),\n                };\n            });\n        return <AnswerList questions={questions} lang={this.props.lang} />;\n    };\n}\n\nexport default EditAnswers;\n","import React from 'react';\n\nimport './ContactInfo.css';\n\nconst contactInfo = (props) => {\n    return (\n        <div className=\"ContactInfo\">\n            <h3>{props.lang.header}</h3>\n            <div className=\"invitation\" dangerouslySetInnerHTML={{__html: props.lang.invitation}}></div>\n            <form method=\"post\" onSubmit={(e) => e.preventDefault()}>\n                <label>{props.lang.email_label}</label>\n                {props.emailError ?\n                    <div className=\"Error\">{props.lang.email_error}</div>\n                : null}\n                <input type=\"text\" name=\"email\" value={props.email} onChange={props.emailChanged} autoComplete=\"email\" />\n                <label>{props.lang.zip_label}</label>\n                {props.zipError ?\n                   <div className=\"Error\">{props.lang.zip_error}</div>\n                : null}\n                <input type=\"zip\" name=\"zip\" value={props.zip} onChange={props.zipChanged} autoComplete=\"current-zip\" />\n            </form>\n        </div>\n    );\n}\n\nexport default contactInfo;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport * as EmailValidator from 'email-validator';\n\nimport EditAnswers from './EditAnswers/EditAnswers';\nimport ContactInfo from '../../../components/BenefitsTool/ContactInfo/ContactInfo';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport IdentifierCookie from '../../../storage/cookies/IdentifierCookie';\n\nimport Questions from '../../../logic/Questions';\n\nclass Confirmation extends Component {\n\n    state = {\n        loaded_lang: false,\n        loading: false,\n        email: '',\n        zip: '',\n        emailError: false,\n        zipError: false,\n        saveError: false,\n        contactValidOrEmpty: true,\n        hasRecordingError: false\n    };\n\n    lang = null;\n\n    regexValidZip = /^[0-9]{5}(?:-[0-9]{4})?$/;\n\n    changeEmail = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { email: val };\n            if (val !== '' && !EmailValidator.validate(val)) {\n                newstate.emailError = true;\n            } else {\n                newstate.emailError = false;\n            }\n            if (val !== '') {\n                if (this.state.zip === '') {\n                    newstate.zipError = true;\n                }\n            } else {\n                if (this.state.zip === '') {\n                    newstate.zipError = false;\n                }\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    changeZip = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { zip: val };\n            if (val === '' && this.state.email !== '') {\n                newstate.zipError = true;\n            } else if (val !== '' && !this.regexValidZip.test(val)) {\n                newstate.zipError = true;\n            } else {\n                newstate.zipError = false;\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    confirmAnswers = () => {\n        const data = {\n            token: IdentifierCookie.get(),\n            visitor_id: this.props.visitor_id,\n            answers: Questions.getEnglishAnswers(this.props.answers)\n        };\n        if (this.state.email.trim() !== '') {\n            data.contact = {\n                email: this.state.email.trim()\n            };\n            if (this.state.zip.trim() !== '') {\n                data.contact.zip = this.state.zip.trim();\n            }\n        }\n        this.setState({ loading: true });\n        Api.recordResponse(data)\n            .then(response => {\n                IdentifierCookie.remove();\n                this.setState({ loading: false });\n                this.props.history.push('/results');\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                // This is an alert-level error for me the programmer, but not\n                // for the user -- if the API is malfunctioning, let's give it\n                // one chance to get over a hiccup, then send them on to the\n                // results page without recording anything\n                Logger.alert('Could not record response', { api_error: Api.parseAxiosError(error) });\n                this.setState((current) => {\n                    if (this.state.hasRecordingError) {\n                        IdentifierCookie.remove();\n                        this.props.history.push('/results');\n                        return { loading: false, hasRecordingError: false };\n                    } else {\n                        return { loading: false, hasRecordingError: true };\n                    }\n                });\n            });\n    };\n\n    componentDidMount() {\n        this.lang = {\n            edit_answers: {\n                header: Language.get('confirm_answerlist_header'),\n                cancel_title: Language.get('confirm_answerlist_cancel_edit_link_title'),\n                cancel_alt: Language.get('util_cancel_alt_text'),\n                edit_title: Language.get('confirm_answerlist_edit_link_title'),\n                edit_alt: Language.get('confirm_answerlist_edit_link_title'),\n            },\n            contact: {\n                header: Language.get('confirm_contact_header'),\n                invitation: Language.get('confirm_contact_invitation'),\n                email_label: Language.get('confirm_contact_email_label'),\n                email_error: Language.get('confirm_contact_email_error'),\n                zip_label: Language.get('confirm_contact_zip_label'),\n                zip_error: Language.get('confirm_contact_zip_error')\n            },\n            controls: {\n                confirm_button: Language.get('confirm_button_text'),\n                restart_link: Language.get('confirm_restart_link_text'),\n                recording_error: Language.get('confirm_recording_error')\n            }\n        };\n        this.setState({ loaded_lang: true });\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    okToSubmitContact() {\n        let validOrEmpty = null;\n        if (this.state.email === '' && this.state.zip === '') {\n            validOrEmpty = true;\n        } else if (this.state.email === '' || this.state.zip === '') {\n            validOrEmpty = false;\n        } else {\n            if (this.state.emailError || this.state.zipError) {\n                validOrEmpty = false;\n            } else {\n                validOrEmpty = true;\n            }\n        }\n        this.setState({ contactValidOrEmpty: validOrEmpty });\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        const goto = this.props.needsRedirect();\n        if (goto) {\n            return <Redirect to={goto} />;\n        }\n\n        const buttons = [\n            {\n                classNames: [ 'ConfirmButton' ],\n                clicked: this.confirmAnswers,\n                text: this.lang.controls.confirm_button\n            }\n        ];\n        if (this.state.loading || !this.state.contactValidOrEmpty) {\n            buttons[0].disabled = true;\n        }\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: this.lang.controls.restart_link\n            }\n        ];\n\n        return (\n            <div className=\"Confirmation\">\n                <EditAnswers\n                    answers={this.props.answers}\n                    edited={(q, a) => this.props.saveAnswer(q, a)}\n                    lang={this.lang.edit_answers} />\n                <ContactInfo\n                    emailError={this.state.emailError}\n                    zipError={this.state.zipError}\n                    email={this.state.email}\n                    zip={this.state.zip}\n                    emailChanged={this.changeEmail}\n                    zipChanged={this.changeZip}\n                    lang={this.lang.contact} />\n                <Controls\n                    errorMessage={this.state.hasRecordingError ? this.lang.controls.recording_error : null}\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Confirmation);\n","import React from 'react';\n\nimport './Response.css';\n\nconst response = (props) => {\n    let i = 0;\n    let answer = props.answerSections.map((section) => {\n            let items = [];\n            if (section.header) {\n                items.push(<h3 key={i}>{section.header}</h3>);\n                ++i;\n            }\n            if (section.text) {\n                items.push(<div key={i} className=\"ResponseSection\" dangerouslySetInnerHTML={{__html: section.text}}></div>);\n                ++i;\n            }\n            return items;\n        });\n    let resourceBlock = null;\n    if (props.resources.length > 0) {\n        let linkList = props.resources.map((section) => {\n            let items = [];\n            if (section.header) {\n                items.push(<h5 key={i}>{section.header}</h5>);\n            }\n            let subList = section.links.map((link) => {\n                ++i;\n                return <li key={i}><a href={link.link} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n            });\n            items.push(<ul key={i}>{subList}</ul>);\n            ++i;\n            return items;\n        });\n        resourceBlock = (\n            <div className=\"Resources\">\n                <h3>{props.resources_header}</h3>\n                {props.resources_intro ? (\n                <div className=\"ResourcesIntro\" dangerouslySetInnerHTML={{__html: props.resources_intro}}></div>\n                ) : null}\n                {linkList}\n            </div>\n        );\n    }\n    return (\n        <div className=\"Response\">\n            <h2>{props.header}</h2>\n            {answer}\n            {resourceBlock}\n        </div>\n    );\n};\n\nexport default response;\n","\nclass Screening {\n\n    conditions = {\n        ffcra: {\n            simple: [ 'agency' ],\n            complex: {\n                type: 'splitTypeByEssential',\n                books: 'splitBooksByTaxes',\n                reason: 'findReasonForFFCRA'\n            }\n        },\n        nys: {\n            simple: [ 'agency', 'hours per week' ],\n            complex: {\n                books: 'splitBooksByCompliance',\n                reason: 'findReasonForNYS'\n            }\n        },\n        pssl: {\n            simple: [ 'hours per year' ],\n            complex: {\n                type : 'splitTypeByHomeCare',\n                'length of employment' : 'splitLengthByYear'\n            }\n        },\n        dwbor: {\n            simple: [],\n            complex: {\n                'length of employment' : 'splitLengthByYear'\n            }\n        },\n        cares: {\n            simple: [],\n            complex: {\n                books: 'splitBooksByCompliance',\n                'length of employment': 'splitLengthByMonths'\n            }\n        }\n    };\n\n    customAnswers = {\n        splitTypeByEssential: (answers) => {\n            if (answers.type === 'D') {\n                return 'E';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitTypeByHomeCare: (answers) => {\n            if (answers.type === 'C' || answers.type === 'D') {\n                return 'H';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByTaxes: (answers) => {\n            if (answers.books === 'A' || answers.books === 'B') {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByCompliance: (answers) => {\n            if (answers.books === 'A') {\n                return 'C';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitLengthByYear: (answers) => {\n            if (answers['length of employment'] === 'C') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        splitLengthByMonths: (answers) => {\n            if (answers['length of employment'] === 'A') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        // For FFCRA, reasons break down as--\n        // * self-quarantine + school closed + any [B]\n        // * self-quarantine + any (but not school closed) [Q]\n        // * school closed + any (but not self-quarantine) [S]\n        // * family quarantine and/or stay at home [F]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForFFCRA: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' &&\n                answers['school closed'] === 'A'\n            ) {\n                return 'B';\n            }\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['family quarantine'] === 'A' ||\n                answers['stay at home'] === 'A'\n            ) {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['stay at home'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n        // For NYS, reasons break down as--\n        // * self-quarantine or family quarantine + any [Q]\n        // * school closed (but not either quarantine) + any [Q]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForNYS: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' ||\n                answers['family quarantine'] === 'A'\n            ) {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        }\n\n    };\n\n    getScenarios(answerKey) {\n        let byBenefit = {};\n        for (let benefit in this.conditions) {\n            let scenario = {};\n            for (const q of this.conditions[benefit].simple) {\n                scenario[q] = answerKey[q];\n            }\n            for (let k in this.conditions[benefit].complex) {\n                let m = this.conditions[benefit].complex[k];\n                scenario[k] = this.customAnswers[m](answerKey);\n            }\n            byBenefit[benefit] = scenario;\n        }\n        return byBenefit;\n    }\n\n}\n\nexport default new Screening();\n","\nimport EligibilityData from '../../data/eligibility.json';\n\nclass Eligibility {\n\n    screen(scenarios) {\n        let eligibility = {};\n        for (let benefit in scenarios) {\n            let found = null;\n            const bdata = benefit in EligibilityData ? EligibilityData[benefit] : [];\n            for (let r of bdata) {\n                let match = true;\n                for (const c of Object.keys(r.conditions)) {\n                    if (scenarios[benefit][c] !== r.conditions[c]) {\n                        match = false;\n                    }\n                }\n                if (match) {\n                    found = r.lang_lookup_key;\n                    break;\n                }\n            }\n            if (found !== null) {\n                eligibility[benefit] = found;\n            }\n        }\n        return eligibility;\n    }\n\n}\n\nexport default new Eligibility();\n","\nimport Questions from '../Questions';\nimport Language from '../../utils/Language';\n\nclass ProcessText {\n\n    type_answer = null;\n    type_replacement = null;\n\n    setEmployeeType(typeAnswer) {\n        this.type_answer = typeAnswer;\n    }\n\n    findTypeReplacement() {\n        let r = Language.get('results_employee_type_unknown');\n        const letters = Questions.getAnswerLetters('type');\n        if (letters.includes(this.type_answer)) {\n            let k = 'results_employee_type_' + this.type_answer.toLowerCase();\n            let f = Language.get(k);\n            if (f) {\n                r = f;\n            }\n        }\n        this.type_replacement = r;\n    }\n\n    replaceEmployeeType(text) {\n        if (this.type_replacement === null) {\n            this.findTypeReplacement();\n        }\n        return text.replace(/\\{\\{employee_type\\}\\}/g, this.type_replacement);\n    }\n\n    process(result_key) {\n        return Language.get(result_key, t => {\n            return this.replaceEmployeeType(t);\n        });\n    }\n\n}\n\nexport default new ProcessText();\n","import Language from '../../utils/Language';\n\nimport ResourceData from '../../data/resources.json';\n\nclass Resources {\n\n    getBenefitResources(eligibility) {\n        let resources = {};\n        const lang = Language.language_code;\n        for (let benefit in eligibility) {\n            if (benefit in ResourceData.benefits) {\n                let b_resources = [];\n                for (let r of ResourceData.benefits[benefit]) {\n                    if (lang in r.link) {\n                        b_resources.push({\n                            text: r.text,\n                            link: r.link[lang]\n                        });\n                    }\n                }\n                resources[benefit] = b_resources;\n            }\n        }\n        return resources;\n    }\n\n    getOtherResources() {\n        let o_resources = [];\n        const lang = Language.language_code;\n        for (let r of ResourceData.other) {\n            if (lang in r.link) {\n                o_resources.push({\n                    text: r.text,\n                    link: r.link[lang]\n                });\n            }\n        }\n        return o_resources;\n    }\n\n}\n\nexport default new Resources();\n","\nimport Screening from './results/Screening';\nimport Eligibility from './results/Eligibility';\nimport ProcessText from './results/ProcessText';\nimport Resources from './results/Resources';\nimport Language from '../utils/Language';\n\nclass CollectResults {\n\n    benefits_order = [ 'ffcra', 'nys', 'pssl', 'dwbor', 'cares' ];\n\n    compile(answerKey) {\n\n        // Calculate benefits\n        const scenarios = Screening.getScenarios(answerKey);\n        const eligibility = Eligibility.screen(scenarios);\n\n        // Switch on employee type replacement\n        ProcessText.setEmployeeType(answerKey.type);\n\n        // Build text sections and resource links\n        let results = {\n            header: ProcessText.process('results_main_header'),\n            sections: this.getAllSections(eligibility, answerKey),\n            resources_header: ProcessText.process('results_resources_header'),\n            resources_intro: ProcessText.process('results_resources_intro'),\n            resources: this.getAllResources(eligibility)\n        };\n\n        return results;\n    }\n\n    getAllSections(eligibility, answerKey) {\n        let sections = [];\n        \n        // Push all benfit responses into sections\n        const benefitSections = this.getBenefitSections(eligibility);\n\n        // If we found nothing, add the no-results text\n        if (benefitSections.length < 1) {\n            sections.push({\n                header: null,\n                text: ProcessText.process('results_no_benefits')\n            });\n        }\n\n        // Otherwise, add an intro and the benefits\n        else {\n            sections.push({\n                header: null,\n                text: ProcessText.process('results_intro')\n            });\n            for (let section of benefitSections) {\n                sections.push(section);\n            }\n        }\n\n        // Do we need an on-the-books section?\n        let books = this.getBooksSection(answerKey);\n        if (books !== null) {\n            sections.push(books);\n        }\n\n        // Always add the retaliation warning section\n        sections.push({\n            header: ProcessText.process('results_retaliation_warning_header'),\n            text: ProcessText.process('results_retaliation_warning_text')\n        });\n\n        return sections;\n    }\n\n    getBenefitSections(eligibility) {\n        const benefitSections = [];\n        for (let benefit of this.benefits_order) {\n            let header = Language.get('results_section_header_' + benefit);\n            if (benefit in eligibility) {\n                let text = ProcessText.process(eligibility[benefit]);\n                benefitSections.push({\n                    header: header,\n                    text: text\n                });\n            }\n        }\n        return benefitSections;\n    }\n\n    getBooksSection(answerKey) {\n        // totally in compliance; skip\n        if (answerKey.books === 'A') {\n            return null;\n        }\n\n        // partial compliance: message about insurance\n        if (answerKey.books === 'B') {\n            return {\n                header: ProcessText.process('results_off_the_books_partial_header'),\n                text: ProcessText.process('results_off_the_books_partial_text')\n            };\n        }\n\n        // no to on the books: message about getting on\n        return {\n            header: ProcessText.process('results_off_the_books_header'),\n            text: ProcessText.process('results_off_the_books_text')\n        };\n    }\n\n    getAllResources(eligibility) {\n        const b_resources = Resources.getBenefitResources(eligibility);\n        const o_resources = Resources.getOtherResources();\n\n        let all = [];\n\n        // Add the benefit resources\n        for (let benefit of this.benefits_order) {\n            if (benefit in b_resources) {\n                let section = {\n                    header: Language.get('results_resources_' + benefit + '_header'),\n                    links: []\n                };\n                for (let r of b_resources[benefit]) {\n                    section.links.push({\n                        text: ProcessText.process(r.text),\n                        link: r.link\n                    });\n                }\n                all.push(section);\n            }\n        }\n\n        // Add the always-include resources\n        if (o_resources.length > 0) {\n            let section = {\n                links: []\n            };\n            if (all.length > 0) {\n                section.header = Language.get('results_resources_other_header');\n            }\n            for (let r of o_resources) {\n                section.links.push({\n                    text: ProcessText.process(r.text),\n                    link: r.link\n                });\n            }\n            all.push(section);\n        }\n\n        return all;\n    }\n\n}\n\nexport default new CollectResults();\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Response from '../../../components/BenefitsTool/Response/Response';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Language from '../../../utils/Language';\nimport CollectResults from '../../../logic/CollectResults';\n\nimport CtaData from '../../../data/cta.json';\n\n// TODO: Language keys for CTA buttons and links\n\nconst CTA_TRACKING_CODE = '?utm_source=hih-covid-quiz';\n\nclass Results extends Component {\n\n    state = {\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    clickCTAButton = (link) => {\n        window.open(link + CTA_TRACKING_CODE, '_blank');\n    };\n\n    componentDidMount() {\n        this.lang = {\n            restart_link_text: Language.get('util_restart_link_text')\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        const goto = this.props.needsRedirect();\n        if (goto) {\n            return <Redirect to={goto} />;\n        }\n\n        const results = CollectResults.compile(this.props.answers);\n\n        let ctas = [];\n        if (CtaData.length > 3) {\n            for (let i = 0; i < 3; i++) {\n                const r = CtaData[Math.floor(Math.random() * CtaData.length)];\n                ctas.push(r);\n            }\n        } else {\n            ctas = CtaData;\n        }\n        const buttons = ctas.map((cta) => {\n            return {\n                classNames: [ 'CTAButton' ],\n                clicked: () => { this.clickCTAButton(cta.link); },\n                text: Language.get(cta.text),\n                title: Language.get(cta.title)\n            };\n        });\n\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: this.lang.restart_link_text\n            }\n        ];\n\n        return (\n            <div className=\"Results\">\n                <Response\n                    header={results.header}\n                    answerSections={results.sections}\n                    resources_header={results.resources_header}\n                    resources_intro={results.resources_intro}\n                    resources={results.resources}\n                    lang={this.lang} />\n                <Controls\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Results);\n","import CookieBase from '../CookieBase';\n\nimport Questions from '../../logic/Questions';\n\nlet answersCookieFilter = (cookieobj) => {\n    return Questions.filterAnswers(cookieobj);\n};\n\nconst answersCookie = new CookieBase(\n    'hnct-answers', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    }, // spec\n    true, // compressed\n    answersCookieFilter // filter function\n);\n\nexport default answersCookie;\n","import CookieBase from '../CookieBase';\n\nconst visitorCookie = new CookieBase(\n    'hnct-visitor', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 365,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default visitorCookie;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Landing from './Landing/Landing';\nimport Quiz from './Quiz/Quiz';\nimport Confirmation from './Confirmation/Confirmation';\nimport Results from './Results/Results';\nimport AnswersCookie from '../../storage/cookies/AnswersCookie';\nimport VisitorCookie from '../../storage/cookies/VisitorCookie';\nimport Logger from '../../utils/Logger';\nimport Questions from '../../logic/Questions';\n\n// TODO: Session tokens for securing the confirmation\n// TODO: Social icons in the footer\n\nclass BenefitsTool extends Component {\n\n    state = {\n        visitor_id: null,\n        answers: {},\n        loaded: false\n    };\n\n    componentDidMount() {\n        let newstate = {};\n        // Fetch visitor ID from the cookie\n        let visitor_id = VisitorCookie.get();\n        if (!visitor_id) {\n            visitor_id = uuidv4();\n            VisitorCookie.set(visitor_id);\n        }\n        newstate.visitor_id = visitor_id;\n        // Fetch answers from the cookie\n        newstate.answers = AnswersCookie.get() || {};\n        // Mark this component loaded\n        newstate.loaded = true;\n        this.setState(newstate);\n    }\n\n    clearAnswers = () => {\n        AnswersCookie.set({});\n        this.setState({ answers: {} });\n    }\n\n    saveAnswer = (qcode, letter, completed) => {\n        if (!Questions.validAnswer(qcode, letter)) {\n            Logger.warn('Request to save unknown question/answer pair ' + qcode + '/' + letter);\n            return false;\n        }\n        let newAnswers = { ...this.state.answers };\n        newAnswers[qcode] = letter;\n        AnswersCookie.set(newAnswers);\n        this.setState({ answers: newAnswers });\n        return true;\n    };\n\n    needsRedirect = () => {\n        let ready = true;\n        let started = false;\n        let step = 0;\n        for (const qcode of Questions.question_order) {\n            if (typeof this.state.answers[qcode] === 'undefined') {\n                Logger.debug('Needs redirect because of undefined question code ' + qcode, { answers: this.state.answers });\n                ready = false;\n                break;\n            } else {\n                started = true;\n            }\n            const letter = this.state.answers[qcode];\n            if (!Questions.validAnswer(qcode, letter)) {\n                Logger.warn('Needs redirect because of undefined answer letter ' + letter, { q_code: qcode, answers: this.state.answers });\n                ready = false;\n                break;\n            }\n            ++step;\n        }\n        if (!ready) {\n            if (started) {\n                return '/quiz/' + step;\n            } else {\n                return '/';\n            }\n        }\n        return false;\n    };\n\n    render() {\n\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        const doQuiz = () => <Quiz\n            visitor_id={this.state.visitor_id}\n            answers={this.state.answers}\n            saveAnswer={this.saveAnswer} />;\n\n        const doConfirmation = () => <Confirmation\n            visitor_id={this.state.visitor_id}\n            answers={this.state.answers}\n            needsRedirect={this.needsRedirect}\n            saveAnswer={this.saveAnswer} />;\n\n        const doResults = () => <Results\n            answers={this.state.answers}\n            needsRedirect={this.needsRedirect} />;\n\n        const doLanding = () => <Landing\n            visitor_id={this.state.visitor_id}\n            clearAnswers={this.clearAnswers} />;\n\n        return (\n            <div className=\"BenefitsTool\">\n                <Switch>\n                    <Route path=\"/quiz/:step\" render={doQuiz} />\n                    <Route path=\"/quiz\" render={doQuiz} />\n                    <Route path=\"/confirm\" render={doConfirmation} />\n                    <Route path=\"/results\" render={doResults} />\n                    <Route path=\"/\" render={doLanding} />\n                </Switch>\n            </div>\n        );\n    }\n\n}\n\nexport default BenefitsTool;\n","import React, { Component } from 'react';\n\nclass AdminLanguage extends Component {\n    render() {\n        return (\n            <p>This is the language admin</p>\n        );\n    }\n}\n\nexport default AdminLanguage;\n","import React, { Component } from 'react';\n\nclass AdminDashboard extends Component {\n    render() {\n        return (\n            <p>This is the dashboard</p>\n        );\n    }\n}\n\nexport default AdminDashboard;\n","import React from 'react';\n\nimport './LoginBox.css';\n\nconst loginBox = (props) => {\n    let button = null;\n    if (props.loading) {\n        button = <button disabled=\"disabled\" className=\"Loading\">{props.lang.button_text}</button>;\n    } else {\n        button = <button type=\"submit\">{props.lang.button_text}</button>;\n    }\n\n    return (\n        <div className=\"LoginBox\">\n            {props.header ? (\n                <h3>{props.header}</h3>\n            ) : null}\n            {props.loginError ?\n                <div className=\"Error\">{props.lang.login_error}</div>\n            : null}\n            <form method=\"post\" onSubmit={props.submitted}>\n                <label>{props.lang.username_label}</label>\n                <input type=\"text\" name=\"username\" value={props.username} onChange={props.usernameChanged} autoComplete=\"username\" />\n                <label>{props.lang.password_label}</label>\n                <input type=\"password\" name=\"password\" value={props.password} onChange={props.passwordChanged} autoComplete=\"current-password\" />\n                <div className=\"ButtonContainer\">\n                    {button}\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default loginBox;\n","import React, { Component } from 'react';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport LoginBox from '../../components/LoginBox/LoginBox';\nimport Api from '../../storage/Api';\nimport Language from '../../utils/Language';\nimport Logger from '../../utils/Logger';\n\nclass Login extends Component {\n\n    state = {\n        loading: false,\n        username: '',\n        password: '',\n        loginError: false,\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    };\n\n    changePassword = (e) => {\n        this.setState({ password: e.target.value });\n    };\n\n    validate = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true,\n            loginError: false\n        });\n        const data = {\n            username: this.state.username,\n            password: this.state.password\n        };\n        let call = null;\n        if (this.props.login_type === 'prelaunch') {\n            call = Api.checkPrelaunchLogin(data);\n        } else {\n            call = Api.checkAdminLogin(data);\n        }\n        call.then(response => {\n            if (response.data.token) {\n                this.setState({\n                    loading: false,\n                });\n                this.props.updateLoginState(response.data.token);\n            } else {\n                Logger.alert('Log in succeeded without returning a token', { returned: response.data, login_type: this.props.login_type });\n                this.setState({\n                    loading: false,\n                    loginError: true\n                });\n            }\n        })\n        .catch(error => {\n            const parsed = Api.parseAxiosError(error);\n            if (parsed.code !== 'LOGIN_INCORRECT' &&\n                parsed.code !== 'USERNAME_REQUIRED' &&\n                parsed.code !== 'PASSWORD_REQUIRED') {\n                Logger.alert('Log in failed', { api_error: parsed, login_type: this.props.login_type });\n            }\n            this.setState({\n                loading: false,\n                loginError: true\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.lang = {\n            button_text: Language.get('prelaunch_login_button_text'),\n            login_error: Language.get('prelaunch_login_error'),\n            username_label: Language.get('prelaunch_login_username_label'),\n            password_label: Language.get('prelaunch_login_password_label'),\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return <LoginBox\n            header={this.props.header}\n            loading={this.state.loading}\n            loginError={this.state.loginError}\n            username={this.state.username}\n            password={this.state.password}\n            usernameChanged={this.changeUsername}\n            passwordChanged={this.changePassword}\n            submitted={this.validate}\n            lang={this.lang} />;\n    }\n\n}\n\nexport default Login;\n","import React from 'react';\n\nimport './LoginLayout.css';\n\nconst loginLayout = (props) => {\n    return (\n        <div className=\"LoginFrame\">\n            <div className=\"LoginMain\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default loginLayout;\n","import CookieBase from '../CookieBase';\n\nconst loginCookie = new CookieBase(\n    'hnct-login', // name\n    {\n        path: '/',\n        maxAge: 60 * 60,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default loginCookie;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Language from './Language/Language';\nimport Dashboard from './Dashboard/Dashboard';\nimport Login from '../Login/Login';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport LoginLayout from '../../hoc/LoginLayout/LoginLayout';\nimport LoginCookie from '../../storage/cookies/LoginCookie';\nimport Api from '../../storage/Api';\nimport Logger from '../../utils/Logger';\n\nclass Admin extends Component {\n\n    state = {\n        loggedIn: false,\n        loaded: false\n    };\n\n    updateLogin = (token) => {\n        this.setState({ loggedIn: true, loaded: true });\n        LoginCookie.set(token);\n    };\n\n    componentDidMount() {\n        let token = LoginCookie.get();\n        if (token) {\n            Api.checkAdminToken({ token: token })\n                .then(response => {\n                    this.setState({ loggedIn: true, loaded: true });\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Admin session check failed', { api_error: parsed });\n                    }\n                    this.setState({ loaded: true });\n                });\n        } else {\n            this.setState({ loaded: true });\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        if (this.state.loggedIn) {\n            return (\n                <div className=\"Admin\">\n                    <Switch>\n                        <Route path=\"/admin/language\" render={() => <Language />} />\n                        <Route path=\"/admin\" render={() => <Dashboard />} />\n                    </Switch>\n                </div>\n            );\n\n        } else {\n            const header = 'Admin Login';\n            return (\n                <LoginLayout>\n                    <Login header={header} updateLoginState={this.updateLogin} />\n                </LoginLayout>\n            );\n        }\n    }\n\n}\n\nexport default Admin;\n","import React from 'react';\n\nimport './Notice.css';\n\nconst notice = (props) => {\n    if (!props.show) {\n        return null;\n    }\n    return (\n        <div className=\"Notice\">\n            <button className=\"CloseNotice\" onClick={props.closed}><i className=\"fas fa-times\" aria-hidden=\"true\" title=\"{props.lang.close_alt}\"></i></button>\n            <div className=\"NoticeContent\">\n                <div className=\"NoticeMessage\">\n                    <h6>{props.lang.title}</h6>\n                    <div dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n                </div>\n                <button className=\"AcceptButton\" onClick={props.accepted}>{props.lang.accept_button_text}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default notice;\n","import CookieBase from '../CookieBase';\n\nconst cookieNoticeCookie = new CookieBase(\n    'hnct-cookienotice', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 14,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default cookieNoticeCookie;\n","import React, { Component } from 'react';\n\nimport Notice from '../../components/UI/Notice/Notice';\nimport CookieNoticeCookie from '../../storage/cookies/CookieNoticeCookie';\nimport Language from '../../utils/Language';\n\nclass CookieNotice extends Component {\n\n    state = {\n        showNotice: true,\n        noticeAccepted: true,\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    hideNotice = () => {\n        this.setState({ showNotice: false });\n    };\n\n    acceptNotice = () => {\n        CookieNoticeCookie.set(new Date());\n        this.setState({ noticeAccepted: true, showNotice: false });\n    };\n\n    componentDidMount() {\n        this.lang = {\n            close_alt: Language.get('util_cancel_alt_text'),\n            title: Language.get('cookie_notice_title'),\n            message: Language.get('cookie_notice_message'),\n            accept_button_text: Language.get('cookie_notice_accept_button_text'),\n        };\n        let newstate = { loaded_lang: true };\n        let date = CookieNoticeCookie.get();\n        if (date) {\n            newstate.noticeAccepted = true;\n            newstate.showNotice = false;\n        }\n        this.setState(newstate);\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return null;\n        }\n        return (\n            <Notice\n                show={this.state.showNotice}\n                closed={this.hideNotice}\n                accepted={this.acceptNotice}\n                lang={this.lang} />\n        );\n    }\n}\n\nexport default CookieNotice;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux/Aux';\nimport Layout from '../../hoc/Layout/Layout';\nimport BenefitsTool from '../../containers/BenefitsTool/BenefitsTool';\nimport Admin from '../../containers/Admin/Admin';\nimport CookieNotice from '../CookieNotice/CookieNotice';\nimport Language from '../../utils/Language';\n\nclass Main extends Component {\n\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        this.lang = {\n            layout: {\n                logo_alt_text: Language.get('layout_logo_alt_text'),\n                header_title: Language.get('layout_header_title')\n            }\n        };\n        this.setState({ loaded: true });\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        return (\n            <Layout lang={this.lang.layout}>\n                <Switch>\n                    <Route path=\"/admin\" component={Admin} />\n                    <Route path=\"/\" render={() => (\n                        <Aux>\n                            <BenefitsTool />\n                            <CookieNotice />\n                        </Aux>\n                    )} />\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nexport default Main;\n","import CookieBase from '../CookieBase';\n\nconst preLaunchCookie = new CookieBase(\n    'hnct-prelaunch', // name\n    {\n        path: '/',\n        maxAge: 60 * 60,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default preLaunchCookie;\n","import React, { Component } from 'react';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Main from '../Main/Main';\nimport Login from '../Login/Login';\nimport LoginLayout from '../../hoc/LoginLayout/LoginLayout';\nimport PreLaunchCookie from '../../storage/cookies/PreLaunchCookie';\nimport Api from '../../storage/Api';\nimport Logger from '../../utils/Logger';\n\nclass PreLaunch extends Component {\n\n    state = {\n        loggedIn: false,\n        loaded: false\n    };\n\n    updateLogin = (token) => {\n        this.setState({ loggedIn: true, loaded: true });\n        PreLaunchCookie.set(token);\n    };\n\n    componentDidMount() {\n        let token = PreLaunchCookie.get();\n        if (token) {\n            Api.checkPrelaunchToken({ token: token })\n                .then(response => {\n                    this.setState({ loggedIn: true, loaded: true });\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Prelaunch session check failed', { api_error: parsed });\n                    }\n                    this.setState({ loaded: true });\n                });\n        } else {\n            this.setState({ loaded: true });\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        if (this.state.loggedIn) {\n            return <Main />;\n        } else {\n            return (\n                <LoginLayout>\n                    <Login\n                        login_type=\"prelaunch\"\n                        updateLoginState={this.updateLogin} />\n                </LoginLayout>\n            );\n        }\n    }\n}\n\nexport default PreLaunch;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// After launch, load Main directly instead\nimport PreLaunch from './containers/PreLaunch/PreLaunch';\n\nimport './App.css';\n\n// TODO: Tests\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <PreLaunch />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Cookies from 'universal-cookie';\n\nconst cm = new Cookies();\n\nexport default cm;\n","var map = {\n\t\"./en.json\": 85,\n\t\"./keys.json\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 84;","import CookieManager from '../utils/CookieManager';\n\nclass CookieBase {\n\n    manager = CookieManager;\n    name = null;\n    specs = {};\n    compressed = false;\n    filter = null;\n\n    constructor(name, specs, compressed, filter) {\n        this.name = name;\n        this.specs = typeof(specs) === 'object' ? specs : {};\n        this.compressed = compressed ? true : false;\n        this.filter = typeof(filter) === 'function' ? filter : null;\n    }\n\n    get() {\n        let val = this.manager.get(this.name);\n        if (this.compressed) {\n            let cookieobj = this.expandData(val);\n            if (cookieobj === null) {\n                return {};\n            }\n            val = cookieobj;\n        }\n        if (this.filter) {\n            return this.filter(val);\n        }\n        return val;\n    }\n\n    set(val) {\n        if (this.filter) {\n            val = this.filter(val);\n        }\n        if (this.compressed) {\n            let cookiestring = this.contractData(val);\n            if (cookiestring) {\n                val = cookiestring;\n            }\n        }\n        return this.manager.set(this.name, val, this.specs);\n    }\n\n    remove() {\n        this.manager.remove(this.name);\n    }\n\n    expandData(cookiestring) {\n        let cookieobj = {};\n        try {\n            let buff = new Buffer(cookiestring, 'base64');\n            let text = buff.toString('utf8');\n            cookieobj = JSON.parse(text);\n        } catch (e) {\n            console.log('Cookie value was not valid json; starting over');\n            return null;\n        }\n        return cookieobj;\n    }\n\n    contractData(cookieobj) {\n        const text = JSON.stringify(cookieobj);\n        let buff = new Buffer(text);\n        return buff.toString('base64');\n    }\n\n};\n\nexport default CookieBase;\n\n"],"sourceRoot":""}