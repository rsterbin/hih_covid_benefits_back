{"version":3,"sources":["storage/CookieBase.js","utils/CookieManager.js","data/lang sync /^/.//.*/.json$","components/UI/Spinner/Spinner.js","hoc/Aux/Aux.js","hoc/Layout/Layout.js","components/UI/IconButton/IconButton.js","components/UI/Message/Message.js","components/UI/Controls/Controls.js","components/BenefitsTool/Intro/Intro.js","storage/cookies/IdentifierCookie.js","storage/Api.js","utils/Logger.js","storage/cookies/LanguageCookie.js","utils/Language.js","containers/BenefitsTool/Landing/Landing.js","components/BenefitsTool/StepCounter/StepCounter.js","components/BenefitsTool/Question/Question.js","logic/Questions.js","containers/BenefitsTool/Quiz/Quiz.js","components/BenefitsTool/AnswerList/ViewAnswer/ViewAnswer.js","components/BenefitsTool/AnswerList/EditAnswer/EditAnswer.js","components/BenefitsTool/AnswerList/AnswerList.js","containers/BenefitsTool/Confirmation/EditAnswers/EditAnswers.js","components/BenefitsTool/ContactInfo/ContactInfo.js","containers/BenefitsTool/Confirmation/Confirmation.js","components/BenefitsTool/Response/Response.js","logic/results/Screening.js","logic/results/Eligibility.js","logic/results/ProcessText.js","logic/results/Resources.js","logic/CollectResults.js","containers/BenefitsTool/Results/Results.js","storage/cookies/AnswersCookie.js","storage/cookies/VisitorCookie.js","containers/BenefitsTool/BenefitsTool.js","hoc/AdminPage/AdminPage.js","components/UI/ProcessingButton/ProcessingButton.js","components/UI/RawTextBox/RawTextBox.js","components/Admin/FunctionBox/FunctionBox.js","components/Admin/DeployMessage/DeployMessage.js","containers/Admin/Advanced/Init/Init.js","containers/Admin/Advanced/Save/Save.js","components/UI/Table/Table.js","containers/Admin/Advanced/List/List.js","containers/Admin/Advanced/Advanced.js","containers/Admin/Language/List/List.js","components/Admin/EditMarkdown/EditMarkdown.js","containers/Admin/Language/Edit/Edit.js","containers/Admin/Language/Language.js","components/Admin/DashboardBlock/DashboardBlock.js","containers/Admin/Dashboard/Dashboard.js","hoc/AdminLayout/AdminLayout.js","components/LoginBox/LoginBox.js","containers/Login/Login.js","storage/cookies/LoginCookie.js","containers/Admin/Admin.js","components/UI/Notice/Notice.js","storage/cookies/CookieNoticeCookie.js","containers/CookieNotice/CookieNotice.js","containers/Main/Main.js","hoc/LoginLayout/LoginLayout.js","storage/cookies/PreLaunchCookie.js","containers/PreLaunch/PreLaunch.js","App.js","serviceWorker.js","index.js"],"names":["CookieBase","name","specs","compressed","filter","manager","CookieManager","this","val","get","cookieobj","expandData","cookiestring","contractData","set","remove","text","Buffer","toString","JSON","parse","e","console","log","stringify","cm","Cookies","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","spinner","props","classes","color","push","className","join","aux","children","layout","copyrightDate","Date","getFullYear","href","src","alt","lang","logo_alt_text","header_title","title","facebook_title","twitter_title","iconButton","icon","icon_type","onClick","clicked","append_text","message","type","tryagain_text","tryagain","custom_button","controls","buttons","button","attributes","key","cname","classNames","disabled","links","link","errorMessage","length","buttonLayout","intro","header","dangerouslySetInnerHTML","__html","error","identifierCookie","path","maxAge","sameSite","axiosInstance","axios","create","baseURL","info","toJSON","context","request_url","config","request_data","data","response","status","msg","request","visitor_id","on_success","on_error","token","IdentifierCookie","checkToken","then","catch","isAxiosError","parsed","parseAxiosError","Logger","alert","api_error","bumpSessionInit","initSession","returned","getAxios","post","version","hash","LEVELS","logger_settings","level","options","cutoffLevel","cutoffLevelConsole","cutoffLevelApi","getLevelRank","clevel","console_level","alevel","api_level","levelNum","indexOf","writeToConsole","Api","trackError","languageCookie","Language","language_code","loaded","translations","allowed_languages","r","require","reportError","cookie_lang","LanguageCookie","includes","load","transform","init","translation","Keys","markdown_allowed","markdown","match","doc","md","render","Landing","state","loaded_lang","startQuiz","setState","bumpSession","goToQuiz","errorOrMoveOn","current","clearAnswers","history","error_msg","Intro","Component","withRouter","stepCounter","bullets","i","steps","step","currentStep","question","questionText","helpText","question_order","question_spec","answer_count","help","agency","books","localized_data","english_data","qcode","letter","ascii","charCodeAt","letters","String","fromCharCode","answerKey","answers","validAnswer","loadLocalizedData","loadEnglishData","english_answers","answer","toUpperCase","confirmation","aspec","selected","sort","getData","Local","English","LangObj","lang_key","lc","uc","which","replace","Quiz","hasError","clickAnswer","Questions","getCodeByStep","saveAnswer","count","newStep","currentUrlStep","goBack","err","goToStep","stepNum","warn","cancelQuiz","restartQuiz","error_message","back_link_text","restart_link_text","cancel_link_text","params","test","parseInt","isNaN","stepCount","getLocalSpec","target","qspec","answerButtons","aKey","viewAnswer","selectedAnswer","edit_title","clickedEdit","edit_alt","editAnswer","abuttons","btn","cancel_title","clickedCancel","cancel_alt","answerList","questions","answerBlock","isEditing","EditAnswer","ViewAnswer","EditAnswers","editingAnswer","edited","getLocalConfirmation","saveEdit","cancelEdit","startEdit","contactInfo","invitation","method","onSubmit","preventDefault","email_label","emailError","email_error","value","email","onChange","emailChanged","autoComplete","zip_label","zipError","zip_error","zip","zipChanged","Confirmation","loading","saveError","contactValidOrEmpty","hasRecordingError","regexValidZip","changeEmail","newstate","EmailValidator","okToSubmitContact","changeZip","confirmAnswers","getEnglishAnswers","trim","contact","recordResponse","edit_answers","confirm_button","restart_link","recording_error","validOrEmpty","goto","needsRedirect","to","q","a","answerSections","section","items","resourceBlock","resources","linkList","subList","rel","resources_header","resources_intro","conditions","ffcra","simple","complex","reason","nys","pssl","employed","dwbor","cares","customAnswers","splitTypeByEssential","splitTypeByHomeCare","splitBooksByTaxes","splitBooksByCompliance","splitLengthByYear","splitLengthByMonths","employedByYearAndHours","findReasonForFFCRA","findReasonForNYS","byBenefit","benefit","scenario","k","m","scenarios","eligibility","found","bdata","EligibilityData","c","lang_lookup_key","type_answer","type_replacement","typeAnswer","getAnswerLetters","toLowerCase","f","findTypeReplacement","result_key","t","replaceEmployeeType","ResourceData","benefits","b_resources","o_resources","other","benefits_order","Screening","getScenarios","Eligibility","screen","ProcessText","setEmployeeType","process","sections","getAllSections","getAllResources","benefitSections","getBenefitSections","getBooksSection","Resources","getBenefitResources","getOtherResources","all","Results","clickCTAButton","window","open","results","CollectResults","compile","ctas","CtaData","Math","floor","random","cta","answersCookie","filterAnswers","visitorCookie","BenefitsTool","AnswersCookie","completed","newAnswers","ready","started","debug","q_code","VisitorCookie","uuidv4","doQuiz","adminPage","advanced","breadcrumbs","processingButton","content","doWork","working","size","rawTextBox","rawtext","contents","emptytext","functionBox","emptyText","boxContents","explainer","buttonText","successBox","deployMessage","deployTime","DateTime","fromISO","DeployData","date_deployed","toLocaleString","DATETIME_FULL","version_num","AdminAdvancedInit","processing","process_data","initDeploys","en","EnglishData","KeysData","initializeAdmin","DeployMessage","AdminAdvancedSave","download_info","deploy","deployAdmin","vnum","url","getDownloadUrl","fname","downloadLink","download","table","header_cells","cols","h","body_rows","rows","cells","clickable","snip","full","short","substring","AdminAdvancedList","deploys","refresh","fetchDeploys","getAllDeploys","body","item","formatted","DATETIME_SHORT","deploy_date","Aux","AdminAdvanced","goToInit","goToSave","goToList","Init","AdminLanguageList","english","row","editRow","fetchLanguage","getAllLanguage","editMarkdown","previewing","preview","minrows","minRows","defaultValue","changed","clickedPreview","AdminLanguageEdit","language_info","original_english","processing_error","saved","fetchInfo","changeEnglish","doPreview","doEdit","submitEdit","getKey","language","saveTranslation","getLanguageInfo","AdminLanguage","dashboardBlock","AdminDashboard","responses_loaded","responses_error","responses","contacts_loaded","contacts_error","contacts","responses_headers","contacts_headers","refreshResponses","fetchRecentResponses","refreshContacts","fetchRecentContacts","getRecentResponses","recent","submitted","toFormat","date","getRecentContacts","AdminLayout","exact","loginBox","button_text","loginError","login_error","username_label","username","usernameChanged","password_label","password","passwordChanged","Login","changeUsername","changePassword","validate","login_type","checkPrelaunchLogin","checkAdminLogin","updateLoginState","loginCookie","Admin","loggedIn","updateLogin","LoginCookie","checkAdminToken","Dashboard","notice","show","closed","accepted","accept_button_text","cookieNoticeCookie","CookieNotice","showNotice","noticeAccepted","hideNotice","acceptNotice","CookieNoticeCookie","close_alt","Main","component","loginLayout","preLaunchCookie","PreLaunch","PreLaunchCookie","checkPrelaunchToken","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e46d92d1.chunk.js","sourcesContent":["import CookieManager from '../utils/CookieManager';\n\nclass CookieBase {\n\n    manager = CookieManager;\n    name = null;\n    specs = {};\n    compressed = false;\n    filter = null;\n\n    constructor(name, specs, compressed, filter) {\n        this.name = name;\n        this.specs = typeof(specs) === 'object' ? specs : {};\n        this.compressed = compressed ? true : false;\n        this.filter = typeof(filter) === 'function' ? filter : null;\n    }\n\n    get() {\n        let val = this.manager.get(this.name);\n        if (this.compressed) {\n            let cookieobj = this.expandData(val);\n            if (cookieobj === null) {\n                return {};\n            }\n            val = cookieobj;\n        }\n        if (this.filter) {\n            return this.filter(val);\n        }\n        return val;\n    }\n\n    set(val) {\n        if (this.filter) {\n            val = this.filter(val);\n        }\n        if (this.compressed) {\n            let cookiestring = this.contractData(val);\n            if (cookiestring) {\n                val = cookiestring;\n            }\n        }\n        return this.manager.set(this.name, val, this.specs);\n    }\n\n    remove() {\n        this.manager.remove(this.name);\n    }\n\n    expandData(cookiestring) {\n        let cookieobj = {};\n        try {\n            let buff = new Buffer(cookiestring, 'base64');\n            let text = buff.toString('utf8');\n            cookieobj = JSON.parse(text);\n        } catch (e) {\n            console.log('Cookie value was not valid json; starting over');\n            return null;\n        }\n        return cookieobj;\n    }\n\n    contractData(cookieobj) {\n        const text = JSON.stringify(cookieobj);\n        let buff = new Buffer(text);\n        return buff.toString('base64');\n    }\n\n};\n\nexport default CookieBase;\n\n","import Cookies from 'universal-cookie';\n\nconst cm = new Cookies();\n\nexport default cm;\n","var map = {\n\t\"./en.json\": 30,\n\t\"./keys.json\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 91;","import React from 'react';\n\nimport './Spinner.css';\n\n// NB: We can't use language here because this is what we show when language data isn't loaded!\n\nconst spinner = (props) => {\n    let classes = [ 'Spinner' ];\n    if (props.color === 'gray-flipped') {\n        classes.push('GrayFlipped');\n    }\n    return (\n        <div className={classes.join(' ')}><span>Loading...</span></div>\n    );\n};\n\nexport default spinner;\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport './Layout.css';\n\nconst layout = (props) => {\n\n    const copyrightDate = (new Date()).getFullYear();\n\n    return (\n        <div className=\"BenefitsTool\">\n            <div className=\"Logo\">\n                <a href=\"https://domesticemployers.org/\"><img src=\"/images/logo.png\" alt={props.lang.logo_alt_text} /></a>\n            </div>\n            <div className=\"Header\">\n                <h1><a href=\"/\">{props.lang.header_title}</a></h1>\n            </div>\n            <div className=\"MainContent\">\n                {props.children}\n            </div>\n            <div className=\"Footer\">\n                <ul className=\"SocialIcons\">\n                    <li><a href=\"https://www.facebook.com/domesticemployers/\"><i className=\"fab fa-facebook-f\" title={props.lang.facebook_title}></i></a></li>\n                    <li><a href=\"https://twitter.com/HiHemployers\"><i className=\"fab fa-twitter\" title={props.lang.twitter_title}></i></a></li>\n                </ul>\n                <ul className=\"Links\">\n                    <li><a href=\"https://domesticemployers.org/\">&copy; {copyrightDate} Hand In Hand</a></li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default layout;\n","import React from 'react';\n\nimport './IconButton.css';\n\nconst iconButton = (props) => {\n    let title = null;\n    let icon = 'fas fa-question';\n    if (props.icon_type === 'refresh') {\n        title = 'refresh';\n        icon = 'fas fa-sync-alt';\n    } else if (props.icon_type === 'edit') {\n        title = 'edit';\n        icon = 'fas fa-pencil-alt';\n    } else if (props.icon_type === 'preview') {\n        title = 'preview';\n        icon = 'far fa-eye';\n    }\n    if (props.title) {\n        title = props.title;\n    }\n    if (props.icon) {\n        icon = props.icon;\n    }\n    return (\n        <button className=\"IconButton\" onClick={props.clicked}>\n            <i className={icon} title={title}></i>\n            {props.append_text ?\n                <span>{props.append_text}</span>\n            : null}\n        </button>\n    );\n};\n\nexport default iconButton;\n","import React from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './Message.css';\n\nconst message = (props) => {\n    let classes = [ 'Message' ];\n    if (props.type === 'error') {\n        classes.push('ErrorMessage');\n    } else if (props.type === 'success') {\n        classes.push('SuccessMessage');\n    }\n    let tryagain_text = props.tryagain_text ? props.tryagain_text : 'Try Again?';\n    return (\n        <div className={classes.join(' ')}>\n            <p>{props.text}</p>\n            {props.tryagain ?\n                <IconButton icon_type=\"refresh\"\n                    clicked={props.tryagain}\n                    title={tryagain_text} />\n            : null}\n            {props.custom_button}\n        </div>\n    );\n\n};\n\nexport default message;\n\n","import React from 'react';\n\nimport Message from '../Message/Message';\n\nimport './Controls.css';\n\nconst controls = (props) => {\n\n    let buttons = {};\n    if (typeof props.buttons !== 'undefined') {\n        buttons = props.buttons\n            .map((button) => {\n                let attributes = {\n                    key: button.key ? button.key : button.text,\n                };\n                let cname = 'ControlButton';\n                if (button.classNames) {\n                    cname += ' ' + button.classNames.join(' ');\n                }\n                if (button.disabled) {\n                    attributes.disabled = true;\n                    cname += ' DisabledButton';\n                }\n                if (typeof button.clicked === 'function') {\n                    attributes.onClick = button.clicked;\n                }\n                attributes.className = cname;\n                return <button {...attributes}>{button.text}</button>;\n            });\n    }\n\n    let links = {};\n    if (typeof props.links !== 'undefined') {\n        links = props.links\n            .map((link) => {\n                let cname = 'ControlLink';\n                if (link.classNames) {\n                    cname += ' ' + link.classNames.join(' ');\n                }\n                return <div key={link.key ? link.key : link.text} className={cname} onClick={link.clicked}>{link.text}</div>;\n            });\n    }\n\n    return (\n        <div className=\"Controls\">\n        {props.errorMessage ?\n            <Message type=\"error\" text={props.errorMessage} />\n        : null}\n        {buttons.length > 0 ?\n            <div className={props.buttonLayout === 'vert' ? 'VertButtonContainer' : 'ButtonContainer'}>\n                {buttons}\n            </div>\n        : null}\n        {links.length > 0 ?\n            <div className=\"LinkContainer\">\n                {links}\n            </div>\n        : null}\n        </div>\n    );\n\n};\n\nexport default controls;\n","import React from 'react';\n\nimport Controls from '../../UI/Controls/Controls';\n\nconst intro = (props) => {\n\n    const buttons = [\n        {\n            classNames: [ 'StartButton' ],\n            clicked: props.clicked,\n            text: 'Start'\n        }\n    ];\n\n    return (\n        <div>\n            <h2>{props.lang.header}</h2>\n\n            <div className=\"IntroMessage\" dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n\n            <Controls buttons={buttons} errorMessage={props.error} />\n        </div>\n    );\n};\n\nexport default intro;\n","import CookieBase from '../CookieBase';\n\nconst identifierCookie = new CookieBase(\n    'hnct-sessionid', // name\n    {\n        path: '/',\n        maxAge: 60 * 10,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default identifierCookie;\n","import axios from 'axios';\n\nimport IdentifierCookie from './cookies/IdentifierCookie';\nimport Logger from '../utils/Logger';\n\nconst BASE_BACKEND = process.env.NODE_ENV === 'production' ? '' : 'http://localhost2:3001';\nconst BASE_URL = BASE_BACKEND + '/api/v1.0';\n\nclass Api {\n\n    // This will be created when it's needed\n    axiosInstance = null;\n\n    getAxios() {\n        if (this.axiosInstance === null) {\n            this.axiosInstance = axios.create({\n                baseURL: BASE_URL,\n            });\n        }\n        return this.axiosInstance;\n    }\n\n    parseAxiosError(error) {\n        const info = error.toJSON();\n        let context = {\n            message: info.message,\n            request_url: info.config.baseURL,\n            request_data: info.config.data\n        };\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            context.status = error.response.status;\n            return {\n                code: error.response.data.code,\n                message: error.response.data.msg,\n                context: context\n            };\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            return {\n                code: 'NETWORK_FAILURE',\n                message: context.message,\n                context: context\n            };\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            return {\n                code: 'UNKNOWN',\n                message: error.message,\n                context: context\n            };\n        }\n    }\n\n    // Front end\n\n    bumpSession(visitor_id, on_success, on_error) {\n        let token = IdentifierCookie.get();\n        if (token) {\n            this.checkToken({ visitor_id: visitor_id, token: token })\n                .then(response => {\n                    IdentifierCookie.set(token); // re-up on the expiration\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = this.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Session check failed', { api_error: parsed });\n                        if (typeof on_error === 'function') {\n                            on_error();\n                        }\n                    }\n                    this.bumpSessionInit(visitor_id, on_success, on_error);\n                });\n        } else {\n            this.bumpSessionInit(visitor_id, on_success, on_error);\n        }\n    }\n\n    bumpSessionInit(visitor_id, on_success, on_error) {\n        this.initSession({ visitor_id: visitor_id })\n            .then(response => {\n                if (response.data.token) {\n                    IdentifierCookie.set(response.data.token);\n                    if (typeof on_success === 'function') {\n                        on_success();\n                    }\n                } else {\n                    Logger.alert('Session init succeeded without returning a token', { returned: response.data });\n                    if (typeof on_error === 'function') {\n                        on_error();\n                    }\n                }\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = this.parseAxiosError(error);\n                Logger.alert('Session init failed', { api_error: parsed });\n                if (typeof on_error === 'function') {\n                    on_error();\n                }\n            });\n    }\n\n    initSession(data) {\n        return this.getAxios().post('/session/init', data);\n    }\n\n    checkToken(data) {\n        return this.getAxios().post('/session/check', data);\n    }\n\n    recordResponse(data) {\n        return this.getAxios().post('/response', data);\n    }\n\n    // Admin\n\n    checkAdminLogin(data) {\n        return this.getAxios().post('/admin/session/login', data);\n    }\n\n    checkAdminToken(data) {\n        return this.getAxios().post('/admin/session/check', data);\n    }\n\n    getRecentResponses(data) {\n        return this.getAxios().post('/admin/responses/recent', data);\n    }\n\n    getRecentContacts(data) {\n        return this.getAxios().post('/admin/contacts/recent', data);\n    }\n\n    getAllLanguage(data) {\n        return this.getAxios().post('/admin/language', data);\n    }\n\n    getLanguageInfo(data) {\n        return this.getAxios().post('/admin/language/info', data);\n    }\n\n    saveTranslation(data) {\n        return this.getAxios().post('/admin/language/save', data);\n    }\n\n    getAllDeploys(data) {\n        return this.getAxios().post('/admin/deploy', data);\n    }\n\n    initializeAdmin(data) {\n        return this.getAxios().post('/admin/deploy/init', data);\n    }\n\n    deployAdmin(data) {\n        return this.getAxios().post('/admin/deploy/save', data);\n    }\n\n    getDownloadUrl(version, hash, token) {\n        return BASE_BACKEND + '/download/' + version + '/' + hash + '/' + token;\n    }\n\n    // Prelaunch\n\n    checkPrelaunchLogin(data) {\n        return this.getAxios().post('/prelaunch/login', data);\n    }\n\n    checkPrelaunchToken(data) {\n        return this.getAxios().post('/prelaunch/check', data);\n    }\n}\n\nexport default new Api();\n","import Api from '../storage/Api';\n\nconst LEVELS = [\n    'EMERG',   // Emergency: system is unusable\n    'ALERT',   // Alert: action must be taken immediately\n    'CRIT',    // Critical: critical conditions\n    'ERR',     // Error: error conditions\n    'WARN',    // Warning: warning conditions\n    'NOTICE',  // Notice: normal but significant condition\n    'INFO',    // Informational: informational messages\n    'DEBUG'    // Debug: debug messages\n];\n\nclass Logger {\n\n    cutoffLevel = 0;\n    cutoffLevelConsole = 0;\n    cutoffLevelApi = 0;\n\n    constructor(level, options) {\n        this.cutoffLevel = this.getLevelRank(level ? level : 'WARN');\n        let clevel = 'DEBUG';\n        if (options && 'console_level' in options) {\n            clevel = options.console_level;\n        }\n        this.cutoffLevelConsole = this.getLevelRank(clevel);\n        let alevel = 'ALERT';\n        if (options && 'api_level' in options) {\n            alevel = options.api_level;\n        }\n        this.cutoffLevelApi = this.getLevelRank(alevel);\n    }\n\n    getLevelRank(level) {\n        const levelNum = LEVELS.indexOf[level];\n        if (levelNum < 0) {\n            this.writeToConsole('WARN', 'Log level ' + level + ' unknown');\n        }\n        return levelNum;\n    }\n\n    emerg(message, context) { this.log('EMERG', message, context); }\n    alert(message, context) { this.log('ALERT', message, context); }\n    crit(message, context) { this.log('CRIT', message, context); }\n    err(message, context) { this.log('ERR', message, context); }\n    warn(message, context) { this.log('WARN', message, context); }\n    notice(message, context) { this.log('NOTICE', message, context); }\n    info(message, context) { this.log('INFO', message, context); }\n    debug(message, context) { this.log('DEBUG', message, context); }\n\n    log(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevel) {\n            return;\n        }\n        this.writeToConsole(level, message, context);\n    }\n\n    writeToConsole(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelConsole) {\n            return;\n        }\n        console.log('[' + level + '] ' + message);\n        if (context) {\n            console.log(context);\n        }\n    }\n\n    writeToApi(level, message, context) {\n        if (this.getLevelRank(level) > this.cutoffLevelApi) {\n            return;\n        }\n        const data = {\n            level: level,\n            message: message,\n            context: context\n        };\n        Api.trackError(data)\n            .then(response => {\n                // Log the response, but ignore it otherwise\n                console.log(response);\n            })\n            .catch(error => {\n                // Log the error, but ignore it otherwise\n                console.log(error);\n            });\n    }\n\n}\n\nlet logger_settings = {};\nif (process.env.NODE_ENV === 'production') {\n    logger_settings = {\n        level: 'NOTICE',\n        options: null\n    };\n} else {\n    logger_settings = {\n        level: 'DEBUG',\n        options: {\n            console_level: 'DEBUG'\n        }\n    };\n}\n\nexport default new Logger(logger_settings.level, logger_settings.options);\n","import CookieBase from '../CookieBase';\n\nconst languageCookie = new CookieBase(\n    'hnct-language', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default languageCookie;\n","import Logger from './Logger';\nimport LanguageCookie from '../storage/cookies/LanguageCookie';\n\nimport Keys from '../data/lang/keys.json';\n\nclass Language {\n\n    language_code = null;\n    loaded = false;\n    translations = null;\n    allowed_languages = [ 'en' ];\n\n    load(code) {\n        let r = null;\n        try {\n            r = require('../data/lang/' + code + '.json');\n        } catch {\n            r = null;\n        }\n        if (r === null) {\n            this.reportError();\n            return false;\n        }\n        this.translations = r;\n        this.language_code = code;\n        this.loaded = true;\n    }\n\n    init() {\n        let cookie_lang = LanguageCookie.get();\n        if (cookie_lang && this.allowed_languages.includes(cookie_lang)) {\n            this.load(cookie_lang);\n        } else {\n            this.load('en');\n        }\n    }\n\n    get(key, transform) {\n        if (!this.loaded) {\n            this.init();\n            if (!this.loaded) {\n                Logger.alert('Translation was requested, but the current language could not be loaded ', { key: key });\n                return key;\n            }\n        }\n        if (key in this.translations) {\n            let translation = this.translations[key];\n            if (typeof transform === 'function') {\n                translation = transform(translation);\n            }\n            if (key in Keys) {\n                if (Keys[key].markdown_allowed) {\n                    translation = this.markdown(translation);\n                    if (!translation.match(/^</)) {\n                        translation = '<p>' + translation + '</p>';\n                    }\n                }\n            }\n            return translation;\n        } else {\n            if (key in Keys) {\n                Logger.alert('Missing translation', { lang: this.language_code, key: key, doc: Keys[key] });\n            } else {\n                Logger.alert('Translation requested for undocumented key', { key: key });\n            }\n        }\n        return key;\n    }\n\n    markdown(translation) {\n        if (!this.md) {\n            this.md = require('markdown-it')();\n        }\n        return this.md.render(translation);\n    }\n\n}\n\nexport { Language };\nexport default new Language('en');\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Intro from '../../../components/BenefitsTool/Intro/Intro';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\n\nclass Landing extends Component {\n\n    state = {\n        loaded_lang: false,\n        error: false\n    };\n\n    lang = null;\n\n    startQuiz = () => {\n        this.setState({ error: false });\n        Api.bumpSession(this.props.visitor_id, () => {\n                this.goToQuiz();\n            },\n            () => {\n                this.errorOrMoveOn();\n            });\n    };\n\n    errorOrMoveOn() {\n        // These are alert-level errors for me the programmer, but not\n        // for the user -- if the API is malfunctioning, let's give it\n        // one chance to get over a hiccup, then send them on to the\n        // quiz page without getting a token to record their answers\n        this.setState((current) => {\n            if (current.error) {\n                this.goToQuiz();\n                return { error: false };\n            } else {\n                return { error: true };\n            }\n        });\n    }\n\n    goToQuiz() {\n        this.setState({ error: false }, () => {\n            this.props.clearAnswers();\n            this.props.history.push('/quiz');\n        });\n    }\n\n    componentDidMount() {\n        this.lang = {\n            header: Language.get('landing_header'),\n            message: Language.get('landing_message'),\n            error_msg: Language.get('landing_error')\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return <Intro\n            error={this.state.error ? this.lang.error_msg : null}\n            clicked={this.startQuiz}\n            lang={this.lang} />;\n    }\n}\n\nexport default withRouter(Landing);\n","import React from 'react';\n\nimport './StepCounter.css';\n\nconst stepCounter = (props) => {\n\n    let bullets = [];\n    for (let i = 0; i < props.steps.length; ++i) {\n        let step = props.steps[i];\n        let className = 'Bullet';\n        if (props.currentStep < i) {\n            className += ' Unvisited';\n        } else if (props.currentStep === i) {\n            className += ' Current';\n        } else {\n            className += ' Visited';\n        }\n        if (typeof(step.clicked) === 'function') {\n            className += ' Clickable';\n        }\n        bullets.push(<li key={step.title}\n            className={className}\n            title={step.title}\n            onClick={step.clicked}>&middot;</li>);\n    }\n\n    return (\n        <div className=\"StepCounter\">\n            <ul>\n                {bullets}\n            </ul>\n        </div>\n    );\n};\n\nexport default stepCounter;\n","import React from 'react';\n\nimport './Question.css';\n\nconst question = (props) => {\n    return (\n        <div className=\"Question\">\n            <h2 className=\"QuestionHeader\">{props.questionText}</h2>\n\n            {props.helpText ? <p className=\"Help\" dangerouslySetInnerHTML={{__html: props.helpText}}></p> : null}\n        </div>\n    );\n};\n\nexport default question;\n","\nimport Local, { Language } from '../utils/Language';\n\nconst ASCII_CODE_FOR_CAPITAL_A = 65;\n\nclass Questions {\n    question_order = [\n        'type', 'agency', 'books', 'hours per week',\n        'length of employment', 'hours per year', 'self-quarantine',\n        'family quarantine', 'stay at home', 'school closed'\n    ];\n\n    question_spec = {\n        type: {\n            answer_count: 4,\n            layout: 'vert',\n            help: true\n        },\n        agency: {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        books: {\n            answer_count: 3,\n            layout: 'horiz',\n            help: true\n        },\n        'hours per week': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'length of employment': {\n            answer_count: 3,\n            layout: 'horiz',\n            help: false\n        },\n        'hours per year': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'self-quarantine': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'family quarantine': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: true\n        },\n        'stay at home': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        },\n        'school closed': {\n            answer_count: 2,\n            layout: 'horiz',\n            help: false\n        }\n    };\n\n    localized_data = null;\n    english_data = null;\n\n    validAnswer(qcode, letter) {\n        if (!letter || letter.length > 1) {\n            return false;\n        }\n        if (qcode in this.question_spec) {\n            const ascii = letter.charCodeAt(0);\n            if (ascii < ASCII_CODE_FOR_CAPITAL_A) {\n                return false;\n            }\n            if (ascii > ASCII_CODE_FOR_CAPITAL_A + this.question_spec[qcode].answer_count - 1) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    getAnswerLetters(qcode) {\n        if (qcode in this.question_spec) {\n            let letters = [];\n            for (let i = 0; i < this.question_spec[qcode].answer_count; ++i) {\n                letters.push(String.fromCharCode(ASCII_CODE_FOR_CAPITAL_A + i));\n            }\n            return letters;\n        }\n        return [];\n    }\n\n    filterAnswers(answerKey) {\n        let answers = {};\n        for (const qcode of this.question_order) {\n            if (this.validAnswer(qcode, answerKey[qcode])) {\n                answers[qcode] = answerKey[qcode];\n            }\n        }\n        return answers;\n    }\n\n    count() {\n        return this.question_order.length;\n    }\n\n    getCodeByStep(step) {\n        if (typeof this.question_order[step] === 'undefined') {\n            return null;\n        }\n        return this.question_order[step];\n    }\n\n    // spec looks like this:\n    // {\n    //   q: the full question,\n    //   t: the short title,\n    //   a: the answers, as: {\n    //     'A': the first answer,\n    //     'B': the second answer, ... etc\n    //   },\n    //   layout: 'vert' or 'horiz',\n    //   help: any help text (optional),\n    // }\n    getLocalSpec(qcode) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        if (typeof this.localized_data[qcode] === 'undefined') {\n            return null;\n        }\n        return this.localized_data[qcode];\n    }\n\n    getEnglishAnswers(answerKey) {\n        if (this.english_data === null) {\n            this.loadEnglishData();\n        }\n        let english_answers = {};\n        for (const qcode of this.question_order) {\n            const letter = answerKey[qcode];\n            const answer = this.english_data[qcode].answers[letter];\n            english_answers[qcode] = answer.toUpperCase();\n        }\n        return english_answers;\n    }\n\n    getLocalConfirmation(answerKey) {\n        if (this.localized_data === null) {\n            this.loadLocalizedData();\n        }\n        let confirmation = [];\n        for (const qcode of this.question_order) {\n            const aspec = this.localized_data[qcode].answers;\n            let answers = [];\n            let selected = null;\n            for (const letter of Object.keys(aspec).sort()) {\n                let answer = {\n                    letter: letter,\n                    text: aspec[letter]\n                };\n                if (letter === answerKey[qcode]) {\n                    selected = { ...answer };\n                }\n                answers.push(answer);\n            }\n            confirmation.push({\n                code: qcode,\n                text: this.localized_data[qcode].question,\n                help: this.localized_data[qcode].help,\n                layout: this.localized_data[qcode].layout,\n                answers: answers,\n                selected: selected\n            });\n        }\n        return confirmation;\n    }\n\n    loadLocalizedData() {\n        this.localized_data = this.getData(Local);\n    }\n\n    loadEnglishData() {\n        if (Local.language_code === 'en') {\n            if (this.localized_data === null) {\n                this.loadLocalizedData();\n            }\n            this.english_data = this.localized_data;\n        } else {\n            const English = new Language('en');\n            this.english_data = this.getData(English);\n        }\n    }\n\n    getData(LangObj) {\n        let data = {};\n        for (let name of this.question_order) {\n            data[name] = {\n                question: LangObj.get(this.lang_key(name, 'question')),\n                title: LangObj.get(this.lang_key(name, 'short')),\n                layout: this.question_spec[name].layout,\n                answers: {}\n            }\n            for (let i = 0; i < this.question_spec[name].answer_count; ++i) {\n                const lc = String.fromCharCode(97 + i);\n                const uc = String.fromCharCode(65 + i);\n                data[name].answers[uc] = LangObj.get(this.lang_key(name, 'answer_' + lc));\n            }\n            if (this.question_spec[name].help) {\n                data[name].help = LangObj.get(this.lang_key(name, 'help'));\n            }\n        }\n        return data;\n    }\n\n    lang_key(name, which) {\n        return 'quiz_' + name.replace(/[^a-z]/g, '_') + '_' + which;\n    }\n\n}\n\nexport default new Questions();\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport StepCounter from '../../../components/BenefitsTool/StepCounter/StepCounter';\nimport Question from '../../../components/BenefitsTool/Question/Question';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport Api from '../../../storage/Api';\n\nimport Questions from '../../../logic/Questions';\n\nclass Quiz extends Component {\n\n    state = {\n        loaded_lang: false,\n        hasError: false\n    };\n\n    clickAnswer = (letter) => {\n        const qcode = Questions.getCodeByStep(this.currentStep());\n        const ok = this.props.saveAnswer(qcode, letter);\n        if (ok) {\n            if (this.currentStep() + 1 >= Questions.count()) {\n                this.props.history.push('/confirm');\n            } else {\n                const newStep = this.currentUrlStep() + 1;\n                this.props.history.push('/quiz/' + newStep);\n            }\n        } else {\n            Logger.alert('Could not save answer', { qcode: qcode, letter: letter });\n            this.setState({ hasError: true });\n        }\n    };\n\n    goBack = () => {\n        // NB: the urls are 1-indexed, so the current step in 0-index form is\n        // actually back by one\n        let newStep = this.currentUrlStep() - 1;\n        if (newStep < 1) {\n            newStep = 0;\n            Logger.err('Request to go back before step 1');\n        }\n        this.props.history.push('/quiz/' + newStep);\n    };\n\n    goToStep = (stepNum) => {\n        if (stepNum < 1 || stepNum > Questions.count()) {\n            Logger.warn('Event request to go to an out-of-bounds step', { step: stepNum });\n            return;\n        }\n        this.props.history.push('/quiz/' + stepNum);\n    };\n\n    cancelQuiz = () => {\n        this.props.history.push('/');\n    };\n\n    restartQuiz = () => {\n        this.props.history.push('/quiz/1');\n    };\n\n    componentDidMount() {\n        this.lang = {\n            error_message: Language.get('quiz_save_failed_error'),\n            back_link_text: Language.get('quiz_back_link_text'),\n            restart_link_text: Language.get('util_restart_link_text'),\n            cancel_link_text: Language.get('quiz_cancel_link_text'),\n        };\n        this.setState({ loaded_lang: true });\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    currentStep() {\n        let current = 0;\n        if (this.props.match.params.step) {\n            let test = parseInt(this.props.match.params.step);\n            if (!isNaN(test) && test > 0 && test <= Questions.count()) {\n                current = test - 1;\n            } else {\n                Logger.warn('URL request to go to an out-of-bounds step', { step: this.props.match.params.step });\n            }\n        }\n        return current;\n    }\n\n    currentUrlStep() {\n        return this.currentStep() + 1;\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        // Steps\n        let steps = [];\n        const stepCount = Questions.count();\n        for (let i = 0; i < stepCount; ++i) {\n            const qcode = Questions.getCodeByStep(i);\n            const qspec = Questions.getLocalSpec(qcode);\n            let step = {\n                title: qspec.title,\n                target: i,\n            };\n            if (typeof(this.props.answers[qcode]) !== 'undefined') {\n                step.clicked = () => { this.goToStep(i + 1); };\n            }\n            steps.push(step);\n        }\n\n        // Question\n        let qcode = Questions.getCodeByStep(this.currentStep());\n        if (typeof qcode !== 'string') {\n            qcode = Questions.getCodeByStep(0);\n        }\n        const qspec = Questions.getLocalSpec(qcode);\n\n        // Answers\n        const answerButtons = Object.keys(qspec.answers).sort()\n            .map((aKey) => {\n                let classNames = [ 'AnswerButton' ];\n                if (typeof this.props.answers[qcode] != 'undefined') {\n                    if (this.props.answers[qcode] === aKey) {\n                        classNames.push('Selected');\n                    }\n                }\n                return {\n                    key: aKey,\n                    classNames: classNames,\n                    clicked: () => { this.clickAnswer(aKey); },\n                    text: qspec.answers[aKey]\n                };\n            });\n\n        // Links\n        let links = [];\n        if (this.currentStep() > 0) {\n            links.push({\n                classNames: [ 'BackLink' ],\n                clicked: this.goBack,\n                text: this.lang.back_link_text\n            });\n            links.push({\n                classNames: [ 'RestartLink' ],\n                clicked: this.restartQuiz,\n                text: this.lang.restart_link_text\n            });\n        } else {\n            links.push({\n                classNames: [ 'CancelLink' ],\n                clicked: this.cancelQuiz,\n                text: this.lang.cancel_link_text\n            });\n        }\n\n        let message = null;\n        if (this.state.hasError) {\n            message = this.lang.error_message;\n        }\n\n        return (\n            <div className=\"Quiz\">\n                <StepCounter\n                    steps={steps}\n                    currentStep={this.currentStep()} />\n                <Question\n                    questionText={qspec.question}\n                    helpText={qspec.help} />\n                <Controls\n                    errorMessage={message}\n                    buttonLayout={qspec.layout}\n                    buttons={answerButtons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Quiz);\n","import React from 'react';\n\nconst viewAnswer = (props) => {\n    return (\n        <div className=\"AnswerConfirm\">\n            <span className=\"SelectedAnswer\">{props.selectedAnswer.text}</span>\n            <button\n                className=\"EditButton\"\n                title={props.lang.edit_title}\n                onClick={props.clickedEdit}>\n                <i className=\"fas fa-pencil-alt\" title={props.lang.edit_alt}></i>\n            </button>\n        </div>\n    );\n}\n\nexport default viewAnswer;\n","import React from 'react';\n\nimport Controls from '../../../UI/Controls/Controls';\n\nconst editAnswer = (props) => {\n    const abuttons = props.answers\n        .map((answer) => {\n            let btn = {\n                key: answer.letter,\n                classNames: [ 'AnswerButton' ],\n                text: answer.text,\n                clicked: answer.clicked\n            };\n            if (answer.letter === props.selectedAnswer.letter) {\n                btn.classNames.push('Selected');\n            }\n            return btn;\n        });\n\n    return (\n        <div className=\"AnswerEdit\">\n            <button className=\"CancelButton\"\n                title={props.lang.cancel_title}\n                onClick={props.clickedCancel}>\n                <i className=\"fas fa-times\" title={props.lang.cancel_alt}></i>\n            </button>\n            <Controls\n                buttons={abuttons}\n                buttonLayout={props.layout} />\n        </div>\n    );\n}\n\nexport default editAnswer;\n","import React from 'react';\n\nimport ViewAnswer from './ViewAnswer/ViewAnswer';\nimport EditAnswer from './EditAnswer/EditAnswer';\n\nimport './AnswerList.css';\n\nconst answerList = (props) => {\n\n    const answerList = props.questions\n        .map((question) => {\n            let answerBlock = null;\n            if (question.isEditing) {\n                answerBlock = <EditAnswer\n                    lang={props.lang}\n                    answers={question.answers}\n                    selectedAnswer={question.selected}\n                    clickedCancel={question.clickedCancel}\n                    layout={question.layout} />;\n            } else {\n                answerBlock = <ViewAnswer\n                    lang={props.lang}\n                    selectedAnswer={question.selected}\n                    clickedEdit={question.clickedEdit} />\n            }\n            return (\n                <li key={question.code}>\n                    <div className=\"QuestionConfirm\">{question.text}</div>\n                    {answerBlock}\n                </li>\n            );\n        });\n\n    return (\n        <div className=\"Answers\">\n            <h3 className=\"AnswersHeader\">{props.lang.header}</h3>\n            <ul>\n                {answerList}\n            </ul>\n        </div>\n    );\n\n}\n\nexport default answerList;\n","import React, { Component } from 'react';\n\nimport AnswerList from '../../../../components/BenefitsTool/AnswerList/AnswerList';\n\nimport Questions from '../../../../logic/Questions';\n\nclass EditAnswers extends Component {\n\n    state = {\n        editingAnswer: null\n    };\n\n    startEdit(question) {\n        this.setState({ editingAnswer: question });\n    }\n\n    cancelEdit(question) {\n        this.setState({ editingAnswer: null });\n    }\n\n    saveEdit(question, letter) {\n        this.props.edited(question, letter);\n        this.setState({ editingAnswer: null });\n    }\n\n    render() {\n        let questions = Questions.getLocalConfirmation(this.props.answers)\n            .map(question => {\n                let answers = question.answers.map(answer => {\n                    return { ...answer, \n                        clicked: () => this.saveEdit(question.code, answer.letter)\n                    };\n                });\n                return { ...question,\n                    answers: answers,\n                    isEditing: this.state.editingAnswer === question.code,\n                    clickedCancel: () => this.cancelEdit(question.code),\n                    clickedEdit: () => this.startEdit(question.code),\n                };\n            });\n        return <AnswerList questions={questions} lang={this.props.lang} />;\n    };\n}\n\nexport default EditAnswers;\n","import React from 'react';\n\nimport './ContactInfo.css';\n\nconst contactInfo = (props) => {\n    return (\n        <div className=\"ContactInfo\">\n            <h3>{props.lang.header}</h3>\n            <div className=\"invitation\" dangerouslySetInnerHTML={{__html: props.lang.invitation}}></div>\n            <form method=\"post\" onSubmit={(e) => e.preventDefault()}>\n                <label>{props.lang.email_label}</label>\n                {props.emailError ?\n                    <div className=\"Error\">{props.lang.email_error}</div>\n                : null}\n                <input type=\"text\" name=\"email\" value={props.email} onChange={props.emailChanged} autoComplete=\"email\" />\n                <label>{props.lang.zip_label}</label>\n                {props.zipError ?\n                   <div className=\"Error\">{props.lang.zip_error}</div>\n                : null}\n                <input type=\"zip\" name=\"zip\" value={props.zip} onChange={props.zipChanged} autoComplete=\"current-zip\" />\n            </form>\n        </div>\n    );\n}\n\nexport default contactInfo;\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport * as EmailValidator from 'email-validator';\n\nimport EditAnswers from './EditAnswers/EditAnswers';\nimport ContactInfo from '../../../components/BenefitsTool/ContactInfo/ContactInfo';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\nimport Language from '../../../utils/Language';\nimport IdentifierCookie from '../../../storage/cookies/IdentifierCookie';\n\nimport Questions from '../../../logic/Questions';\n\nclass Confirmation extends Component {\n\n    state = {\n        loaded_lang: false,\n        loading: false,\n        email: '',\n        zip: '',\n        emailError: false,\n        zipError: false,\n        saveError: false,\n        contactValidOrEmpty: true,\n        hasRecordingError: false\n    };\n\n    lang = null;\n\n    regexValidZip = /^[0-9]{5}(?:-[0-9]{4})?$/;\n\n    changeEmail = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { email: val };\n            if (val !== '' && !EmailValidator.validate(val)) {\n                newstate.emailError = true;\n            } else {\n                newstate.emailError = false;\n            }\n            if (val !== '') {\n                if (this.state.zip === '') {\n                    newstate.zipError = true;\n                }\n            } else {\n                if (this.state.zip === '') {\n                    newstate.zipError = false;\n                }\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    changeZip = (e) => {\n        let val = e.target.value;\n        this.setState(() => {\n            let newstate = { zip: val };\n            if (val === '' && this.state.email !== '') {\n                newstate.zipError = true;\n            } else if (val !== '' && !this.regexValidZip.test(val)) {\n                newstate.zipError = true;\n            } else {\n                newstate.zipError = false;\n            }\n            return newstate;\n        }, () => this.okToSubmitContact());\n    };\n\n    confirmAnswers = () => {\n        const data = {\n            token: IdentifierCookie.get(),\n            visitor_id: this.props.visitor_id,\n            answers: Questions.getEnglishAnswers(this.props.answers)\n        };\n        if (this.state.email.trim() !== '') {\n            data.contact = {\n                email: this.state.email.trim()\n            };\n            if (this.state.zip.trim() !== '') {\n                data.contact.zip = this.state.zip.trim();\n            }\n        }\n        this.setState({ loading: true });\n        Api.recordResponse(data)\n            .then(response => {\n                IdentifierCookie.remove();\n                this.setState({ loading: false });\n                this.props.history.push('/results');\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                // This is an alert-level error for me the programmer, but not\n                // for the user -- if the API is malfunctioning, let's give it\n                // one chance to get over a hiccup, then send them on to the\n                // results page without recording anything\n                Logger.alert('Could not record response', { api_error: Api.parseAxiosError(error) });\n                this.setState((current) => {\n                    if (this.state.hasRecordingError) {\n                        IdentifierCookie.remove();\n                        this.props.history.push('/results');\n                        return { loading: false, hasRecordingError: false };\n                    } else {\n                        return { loading: false, hasRecordingError: true };\n                    }\n                });\n            });\n    };\n\n    componentDidMount() {\n        this.lang = {\n            edit_answers: {\n                header: Language.get('confirm_answerlist_header'),\n                cancel_title: Language.get('confirm_answerlist_cancel_edit_link_title'),\n                cancel_alt: Language.get('util_cancel_alt_text'),\n                edit_title: Language.get('confirm_answerlist_edit_link_title'),\n                edit_alt: Language.get('confirm_answerlist_edit_link_title'),\n            },\n            contact: {\n                header: Language.get('confirm_contact_header'),\n                invitation: Language.get('confirm_contact_invitation'),\n                email_label: Language.get('confirm_contact_email_label'),\n                email_error: Language.get('confirm_contact_email_error'),\n                zip_label: Language.get('confirm_contact_zip_label'),\n                zip_error: Language.get('confirm_contact_zip_error')\n            },\n            controls: {\n                confirm_button: Language.get('confirm_button_text'),\n                restart_link: Language.get('confirm_restart_link_text'),\n                recording_error: Language.get('confirm_recording_error')\n            }\n        };\n        this.setState({ loaded_lang: true });\n        Api.bumpSession(this.props.visitor_id);\n    }\n\n    okToSubmitContact() {\n        let validOrEmpty = null;\n        if (this.state.email === '' && this.state.zip === '') {\n            validOrEmpty = true;\n        } else if (this.state.email === '' || this.state.zip === '') {\n            validOrEmpty = false;\n        } else {\n            if (this.state.emailError || this.state.zipError) {\n                validOrEmpty = false;\n            } else {\n                validOrEmpty = true;\n            }\n        }\n        this.setState({ contactValidOrEmpty: validOrEmpty });\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        const goto = this.props.needsRedirect();\n        if (goto) {\n            return <Redirect to={goto} />;\n        }\n\n        const buttons = [\n            {\n                classNames: [ 'ConfirmButton' ],\n                clicked: this.confirmAnswers,\n                text: this.lang.controls.confirm_button\n            }\n        ];\n        if (this.state.loading || !this.state.contactValidOrEmpty) {\n            buttons[0].disabled = true;\n        }\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: this.lang.controls.restart_link\n            }\n        ];\n\n        return (\n            <div className=\"Confirmation\">\n                <EditAnswers\n                    answers={this.props.answers}\n                    edited={(q, a) => this.props.saveAnswer(q, a)}\n                    lang={this.lang.edit_answers} />\n                <ContactInfo\n                    emailError={this.state.emailError}\n                    zipError={this.state.zipError}\n                    email={this.state.email}\n                    zip={this.state.zip}\n                    emailChanged={this.changeEmail}\n                    zipChanged={this.changeZip}\n                    lang={this.lang.contact} />\n                <Controls\n                    errorMessage={this.state.hasRecordingError ? this.lang.controls.recording_error : null}\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Confirmation);\n","import React from 'react';\n\nimport './Response.css';\n\nconst response = (props) => {\n    let i = 0;\n    let answer = props.answerSections.map((section) => {\n            let items = [];\n            if (section.header) {\n                items.push(<h3 key={i}>{section.header}</h3>);\n                ++i;\n            }\n            if (section.text) {\n                items.push(<div key={i} className=\"ResponseSection\" dangerouslySetInnerHTML={{__html: section.text}}></div>);\n                ++i;\n            }\n            return items;\n        });\n    let resourceBlock = null;\n    if (props.resources.length > 0) {\n        let linkList = props.resources.map((section) => {\n            let items = [];\n            if (section.header) {\n                items.push(<h5 key={i}>{section.header}</h5>);\n            }\n            let subList = section.links.map((link) => {\n                ++i;\n                return <li key={i}><a href={link.link} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n            });\n            items.push(<ul key={i}>{subList}</ul>);\n            ++i;\n            return items;\n        });\n        resourceBlock = (\n            <div className=\"Resources\">\n                <h3>{props.resources_header}</h3>\n                {props.resources_intro ? (\n                <div className=\"ResourcesIntro\" dangerouslySetInnerHTML={{__html: props.resources_intro}}></div>\n                ) : null}\n                {linkList}\n            </div>\n        );\n    }\n    return (\n        <div className=\"Response\">\n            <h2>{props.header}</h2>\n            {answer}\n            {resourceBlock}\n        </div>\n    );\n};\n\nexport default response;\n","\nclass Screening {\n\n    conditions = {\n        ffcra: {\n            simple: [ 'agency' ],\n            complex: {\n                type: 'splitTypeByEssential',\n                books: 'splitBooksByTaxes',\n                reason: 'findReasonForFFCRA'\n            }\n        },\n        nys: {\n            simple: [ 'agency', 'hours per week' ],\n            complex: {\n                books: 'splitBooksByCompliance',\n                reason: 'findReasonForNYS'\n            }\n        },\n        pssl: {\n            simple: [ 'agency' ],\n            complex: {\n                type : 'splitTypeByHomeCare',\n                employed: 'employedByYearAndHours'\n            }\n        },\n        dwbor: {\n            simple: [],\n            complex: {\n                'length of employment' : 'splitLengthByYear'\n            }\n        },\n        cares: {\n            simple: [],\n            complex: {\n                books: 'splitBooksByCompliance',\n                'length of employment': 'splitLengthByMonths'\n            }\n        }\n    };\n\n    customAnswers = {\n        splitTypeByEssential: (answers) => {\n            if (answers.type === 'D') {\n                return 'E';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitTypeByHomeCare: (answers) => {\n            if (answers.type === 'C' || answers.type === 'D') {\n                return 'H';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByTaxes: (answers) => {\n            if (answers.books === 'A' || answers.books === 'B') {\n                return 'Y';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitBooksByCompliance: (answers) => {\n            if (answers.books === 'A') {\n                return 'C';\n            } else {\n                return 'N';\n            }\n        },\n\n        splitLengthByYear: (answers) => {\n            if (answers['length of employment'] === 'C') {\n                return 'O';\n            } else {\n                return 'U';\n            }\n        },\n\n        splitLengthByMonths: (answers) => {\n            if (answers['length of employment'] === 'A') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        employedByYearAndHours: (answers) => {\n            if (answers['length of employment'] === 'C'\n                && answers['hours per year'] === 'B') {\n                return 'U';\n            } else {\n                return 'O';\n            }\n        },\n\n        // For FFCRA, reasons break down as--\n        // * self-quarantine + school closed + any [B]\n        // * self-quarantine + any (but not school closed) [Q]\n        // * school closed + any (but not self-quarantine) [S]\n        // * family quarantine and/or stay at home [F]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForFFCRA: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' &&\n                answers['school closed'] === 'A'\n            ) {\n                return 'B';\n            }\n            if (answers['self-quarantine'] === 'A') {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['family quarantine'] === 'A' ||\n                answers['stay at home'] === 'A'\n            ) {\n                return 'F';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['stay at home'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        },\n\n        // For NYS, reasons break down as--\n        // * self-quarantine or family quarantine + any [Q]\n        // * school closed (but not either quarantine) + any [Q]\n        // * none [N]\n        // * unhandled case [U] (shouldn't happen)\n        findReasonForNYS: (answers) => {\n            if (\n                answers['self-quarantine'] === 'A' ||\n                answers['family quarantine'] === 'A'\n            ) {\n                return 'Q';\n            }\n            if (answers['school closed'] === 'A') {\n                return 'S';\n            }\n            if (\n                answers['self-quarantine'] === 'B' &&\n                answers['family quarantine'] === 'B' &&\n                answers['school closed'] === 'B'\n            ) {\n                return 'N';\n            }\n            return 'U';\n        }\n\n    };\n\n    getScenarios(answerKey) {\n        let byBenefit = {};\n        for (let benefit in this.conditions) {\n            let scenario = {};\n            for (const q of this.conditions[benefit].simple) {\n                scenario[q] = answerKey[q];\n            }\n            for (let k in this.conditions[benefit].complex) {\n                let m = this.conditions[benefit].complex[k];\n                scenario[k] = this.customAnswers[m](answerKey);\n            }\n            byBenefit[benefit] = scenario;\n        }\n        return byBenefit;\n    }\n\n}\n\nexport default new Screening();\n","\nimport EligibilityData from '../../data/eligibility.json';\n\nclass Eligibility {\n\n    screen(scenarios) {\n        let eligibility = {};\n        for (let benefit in scenarios) {\n            let found = null;\n            const bdata = benefit in EligibilityData ? EligibilityData[benefit] : [];\n            for (let r of bdata) {\n                let match = true;\n                for (const c of Object.keys(r.conditions)) {\n                    if (scenarios[benefit][c] !== r.conditions[c]) {\n                        match = false;\n                    }\n                }\n                if (match) {\n                    found = r.lang_lookup_key;\n                    break;\n                }\n            }\n            if (found !== null) {\n                eligibility[benefit] = found;\n            }\n        }\n        return eligibility;\n    }\n\n}\n\nexport default new Eligibility();\n","\nimport Questions from '../Questions';\nimport Language from '../../utils/Language';\n\nclass ProcessText {\n\n    type_answer = null;\n    type_replacement = null;\n\n    setEmployeeType(typeAnswer) {\n        this.type_answer = typeAnswer;\n    }\n\n    findTypeReplacement() {\n        let r = Language.get('results_employee_type_unknown');\n        const letters = Questions.getAnswerLetters('type');\n        if (letters.includes(this.type_answer)) {\n            let k = 'results_employee_type_' + this.type_answer.toLowerCase();\n            let f = Language.get(k);\n            if (f) {\n                r = f;\n            }\n        }\n        this.type_replacement = r;\n    }\n\n    replaceEmployeeType(text) {\n        if (this.type_replacement === null) {\n            this.findTypeReplacement();\n        }\n        return text.replace(/\\{\\{employee_type\\}\\}/g, this.type_replacement);\n    }\n\n    process(result_key) {\n        return Language.get(result_key, t => {\n            return this.replaceEmployeeType(t);\n        });\n    }\n\n}\n\nexport default new ProcessText();\n","import Language from '../../utils/Language';\n\nimport ResourceData from '../../data/resources.json';\n\nclass Resources {\n\n    getBenefitResources(eligibility) {\n        let resources = {};\n        const lang = Language.language_code;\n        for (let benefit in eligibility) {\n            if (benefit in ResourceData.benefits) {\n                let b_resources = [];\n                for (let r of ResourceData.benefits[benefit]) {\n                    if (lang in r.link) {\n                        b_resources.push({\n                            text: r.text,\n                            link: r.link[lang]\n                        });\n                    }\n                }\n                resources[benefit] = b_resources;\n            }\n        }\n        return resources;\n    }\n\n    getOtherResources() {\n        let o_resources = [];\n        const lang = Language.language_code;\n        for (let r of ResourceData.other) {\n            if (lang in r.link) {\n                o_resources.push({\n                    text: r.text,\n                    link: r.link[lang]\n                });\n            }\n        }\n        return o_resources;\n    }\n\n}\n\nexport default new Resources();\n","\nimport Screening from './results/Screening';\nimport Eligibility from './results/Eligibility';\nimport ProcessText from './results/ProcessText';\nimport Resources from './results/Resources';\nimport Language from '../utils/Language';\n\nclass CollectResults {\n\n    benefits_order = [ 'ffcra', 'nys', 'pssl', 'dwbor', 'cares' ];\n\n    compile(answerKey) {\n\n        // Calculate benefits\n        const scenarios = Screening.getScenarios(answerKey);\n        const eligibility = Eligibility.screen(scenarios);\n\n        // Switch on employee type replacement\n        ProcessText.setEmployeeType(answerKey.type);\n\n        // Build text sections and resource links\n        let results = {\n            header: ProcessText.process('results_main_header'),\n            sections: this.getAllSections(eligibility, answerKey),\n            resources_header: ProcessText.process('results_resources_header'),\n            resources_intro: ProcessText.process('results_resources_intro'),\n            resources: this.getAllResources(eligibility)\n        };\n\n        return results;\n    }\n\n    getAllSections(eligibility, answerKey) {\n        let sections = [];\n        \n        // Push all benfit responses into sections\n        const benefitSections = this.getBenefitSections(eligibility);\n\n        // If we found nothing, add the no-results text\n        if (benefitSections.length < 1) {\n            sections.push({\n                header: null,\n                text: ProcessText.process('results_no_benefits')\n            });\n        }\n\n        // Otherwise, add an intro and the benefits\n        else {\n            sections.push({\n                header: null,\n                text: ProcessText.process('results_intro')\n            });\n            for (let section of benefitSections) {\n                sections.push(section);\n            }\n        }\n\n        // Do we need an on-the-books section?\n        let books = this.getBooksSection(answerKey);\n        if (books !== null) {\n            sections.push(books);\n        }\n\n        // Always add the retaliation warning section\n        sections.push({\n            header: ProcessText.process('results_retaliation_warning_header'),\n            text: ProcessText.process('results_retaliation_warning_text')\n        });\n\n        return sections;\n    }\n\n    getBenefitSections(eligibility) {\n        const benefitSections = [];\n        for (let benefit of this.benefits_order) {\n            let header = Language.get('results_section_header_' + benefit);\n            if (benefit in eligibility) {\n                let text = ProcessText.process(eligibility[benefit]);\n                benefitSections.push({\n                    header: header,\n                    text: text\n                });\n            }\n        }\n        return benefitSections;\n    }\n\n    getBooksSection(answerKey) {\n        // totally in compliance; skip\n        if (answerKey.books === 'A') {\n            return null;\n        }\n\n        // partial compliance: message about insurance\n        if (answerKey.books === 'B') {\n            return {\n                header: ProcessText.process('results_off_the_books_partial_header'),\n                text: ProcessText.process('results_off_the_books_partial_text')\n            };\n        }\n\n        // no to on the books: message about getting on\n        return {\n            header: ProcessText.process('results_off_the_books_header'),\n            text: ProcessText.process('results_off_the_books_text')\n        };\n    }\n\n    getAllResources(eligibility) {\n        const b_resources = Resources.getBenefitResources(eligibility);\n        const o_resources = Resources.getOtherResources();\n\n        let all = [];\n\n        // Add the benefit resources\n        for (let benefit of this.benefits_order) {\n            if (benefit in b_resources) {\n                let section = {\n                    header: Language.get('results_resources_' + benefit + '_header'),\n                    links: []\n                };\n                for (let r of b_resources[benefit]) {\n                    section.links.push({\n                        text: ProcessText.process(r.text),\n                        link: r.link\n                    });\n                }\n                all.push(section);\n            }\n        }\n\n        // Add the always-include resources\n        if (o_resources.length > 0) {\n            let section = {\n                links: []\n            };\n            if (all.length > 0) {\n                section.header = Language.get('results_resources_other_header');\n            }\n            for (let r of o_resources) {\n                section.links.push({\n                    text: ProcessText.process(r.text),\n                    link: r.link\n                });\n            }\n            all.push(section);\n        }\n\n        return all;\n    }\n\n}\n\nexport default new CollectResults();\n","import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Response from '../../../components/BenefitsTool/Response/Response';\nimport Controls from '../../../components/UI/Controls/Controls';\nimport Language from '../../../utils/Language';\nimport CollectResults from '../../../logic/CollectResults';\n\nimport CtaData from '../../../data/cta.json';\n\nconst CTA_TRACKING_CODE = '?utm_source=hih-covid-quiz';\n\nclass Results extends Component {\n\n    state = {\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    clickCTAButton = (link) => {\n        window.open(link + CTA_TRACKING_CODE, '_blank');\n    };\n\n    componentDidMount() {\n        this.lang = {\n            restart_link_text: Language.get('util_restart_link_text')\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n\n        const goto = this.props.needsRedirect();\n        if (goto) {\n            return <Redirect to={goto} />;\n        }\n\n        const results = CollectResults.compile(this.props.answers);\n\n        let ctas = [];\n        if (CtaData.length > 3) {\n            for (let i = 0; i < 3; i++) {\n                const r = CtaData[Math.floor(Math.random() * CtaData.length)];\n                ctas.push(r);\n            }\n        } else {\n            ctas = CtaData;\n        }\n        const buttons = ctas.map((cta) => {\n            return {\n                classNames: [ 'CTAButton' ],\n                clicked: () => { this.clickCTAButton(cta.link); },\n                text: Language.get(cta.text),\n                title: Language.get(cta.title)\n            };\n        });\n\n        const links = [\n            {\n                classNames: [ 'RestartLink' ],\n                clicked: () => { this.props.history.push('/') },\n                text: this.lang.restart_link_text\n            }\n        ];\n\n        return (\n            <div className=\"Results\">\n                <Response\n                    header={results.header}\n                    answerSections={results.sections}\n                    resources_header={results.resources_header}\n                    resources_intro={results.resources_intro}\n                    resources={results.resources}\n                    lang={this.lang} />\n                <Controls\n                    buttons={buttons}\n                    links={links} />\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(Results);\n","import CookieBase from '../CookieBase';\n\nimport Questions from '../../logic/Questions';\n\nlet answersCookieFilter = (cookieobj) => {\n    return Questions.filterAnswers(cookieobj);\n};\n\nconst answersCookie = new CookieBase(\n    'hnct-answers', // name\n    {\n        path: '/',\n        sameSite: 'Strict'\n    }, // spec\n    true, // compressed\n    answersCookieFilter // filter function\n);\n\nexport default answersCookie;\n","import CookieBase from '../CookieBase';\n\nconst visitorCookie = new CookieBase(\n    'hnct-visitor', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 365,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default visitorCookie;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Landing from './Landing/Landing';\nimport Quiz from './Quiz/Quiz';\nimport Confirmation from './Confirmation/Confirmation';\nimport Results from './Results/Results';\nimport AnswersCookie from '../../storage/cookies/AnswersCookie';\nimport VisitorCookie from '../../storage/cookies/VisitorCookie';\nimport Logger from '../../utils/Logger';\nimport Questions from '../../logic/Questions';\n\nclass BenefitsTool extends Component {\n\n    state = {\n        visitor_id: null,\n        answers: {},\n        loaded: false\n    };\n\n    componentDidMount() {\n        let newstate = {};\n        // Fetch visitor ID from the cookie\n        let visitor_id = VisitorCookie.get();\n        if (!visitor_id) {\n            visitor_id = uuidv4();\n            VisitorCookie.set(visitor_id);\n        }\n        newstate.visitor_id = visitor_id;\n        // Fetch answers from the cookie\n        newstate.answers = AnswersCookie.get() || {};\n        // Mark this component loaded\n        newstate.loaded = true;\n        this.setState(newstate);\n    }\n\n    clearAnswers = () => {\n        AnswersCookie.set({});\n        this.setState({ answers: {} });\n    }\n\n    saveAnswer = (qcode, letter, completed) => {\n        if (!Questions.validAnswer(qcode, letter)) {\n            Logger.warn('Request to save unknown question/answer pair ' + qcode + '/' + letter);\n            return false;\n        }\n        let newAnswers = { ...this.state.answers };\n        newAnswers[qcode] = letter;\n        AnswersCookie.set(newAnswers);\n        this.setState({ answers: newAnswers });\n        return true;\n    };\n\n    needsRedirect = () => {\n        let ready = true;\n        let started = false;\n        let step = 0;\n        for (const qcode of Questions.question_order) {\n            if (typeof this.state.answers[qcode] === 'undefined') {\n                Logger.debug('Needs redirect because of undefined question code ' + qcode, { answers: this.state.answers });\n                ready = false;\n                break;\n            } else {\n                started = true;\n            }\n            const letter = this.state.answers[qcode];\n            if (!Questions.validAnswer(qcode, letter)) {\n                Logger.warn('Needs redirect because of undefined answer letter ' + letter, { q_code: qcode, answers: this.state.answers });\n                ready = false;\n                break;\n            }\n            ++step;\n        }\n        if (!ready) {\n            if (started) {\n                return '/quiz/' + step;\n            } else {\n                return '/';\n            }\n        }\n        return false;\n    };\n\n    render() {\n\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        const doQuiz = () => <Quiz\n            visitor_id={this.state.visitor_id}\n            answers={this.state.answers}\n            saveAnswer={this.saveAnswer} />;\n\n        const doConfirmation = () => <Confirmation\n            visitor_id={this.state.visitor_id}\n            answers={this.state.answers}\n            needsRedirect={this.needsRedirect}\n            saveAnswer={this.saveAnswer} />;\n\n        const doResults = () => <Results\n            answers={this.state.answers}\n            needsRedirect={this.needsRedirect} />;\n\n        const doLanding = () => <Landing\n            visitor_id={this.state.visitor_id}\n            clearAnswers={this.clearAnswers} />;\n\n        return (\n            <div className=\"BenefitsTool\">\n                <Switch>\n                    <Route path=\"/quiz/:step\" render={doQuiz} />\n                    <Route path=\"/quiz\" render={doQuiz} />\n                    <Route path=\"/confirm\" render={doConfirmation} />\n                    <Route path=\"/results\" render={doResults} />\n                    <Route path=\"/\" render={doLanding} />\n                </Switch>\n            </div>\n        );\n    }\n\n}\n\nexport default BenefitsTool;\n","import React from 'react';\n\nimport './AdminPage.css';\n\nconst adminPage = (props) => {\n    return (\n        <div className=\"AdminSection\">\n            {props.advanced ?\n                <p className=\"Warning\"><i>Should you be here?</i></p>\n            : null}\n            <h2>{props.title}</h2>\n            <p className=\"AdminBreadcrumbs\">{props.breadcrumbs.join(' > ')}</p>\n            <div className=\"AdminBody\">\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default adminPage;\n","import React from 'react';\n\nimport Spinner from '../Spinner/Spinner';\n\nimport './ProcessingButton.css';\n\nconst processingButton = (props) => {\n    let classes = [ 'ProcessingButton' ];\n    let content = null;\n    let doWork = props.clicked;\n    if (props.working) {\n        classes.push('Working');\n        content = <Spinner color=\"gray-flipped\" />;\n        doWork = null;\n    } else {\n        content = props.text;\n    }\n    if (props.size === 'large') {\n        classes.push('LargeSize');\n    }\n    return (\n        <div className={classes.join(' ')} onClick={doWork}>{content}</div>\n    );\n};\n\nexport default processingButton;\n","import React from 'react';\n\nimport './RawTextBox.css';\n\nconst rawTextBox = (props) => {\n    let classes = [ 'RawTextBox' ];\n    let rawtext = null;\n    if (!props.contents) {\n        classes.push('Empty');\n        rawtext = props.emptytext || 'empty';\n    } else {\n        rawtext = props.contents;\n    }\n    return (\n        <div className={classes.join(' ')}>\n            {props.title ?\n                <h6 className=\"RawTextBoxTitle\">{props.title}</h6>\n            : null}\n            <code>\n            {rawtext}\n            </code>\n        </div>\n    );\n};\n\nexport default rawTextBox;\n","import React from 'react';\n\nimport ProcessingButton from '../../UI/ProcessingButton/ProcessingButton';\nimport RawTextBox from '../../UI/RawTextBox/RawTextBox';\nimport Message from '../../UI/Message/Message';\n\nimport './FunctionBox.css';\n\nconst functionBox = (props) => {\n    let emptytext = null;\n    if (props.working) {\n        emptytext = 'processing...';\n    } else if (props.emptyText) {\n        emptytext = props.emptyText;\n    }\n    let boxContents = null;\n    if (props.results) {\n        boxContents = props.results;\n    }\n    return (\n        <div className=\"FunctionBox\">\n            <h3>{props.title}</h3>\n            <p className=\"Explainer\">{props.explainer}</p>\n            <ProcessingButton\n                size=\"large\"\n                working={props.working}\n                clicked={props.clicked}\n                text={props.buttonText} />\n            {props.error ?\n                <Message type=\"error\" text={props.error} />\n            : props.successBox}\n            <RawTextBox contents={boxContents} emptytext={emptytext} />\n        </div>\n    );\n};\n\nexport default functionBox;\n","import React from 'react';\nimport { DateTime } from 'luxon';\n\nimport Message from '../../UI/Message/Message';\nimport DeployData from '../../../data/deployment.json';\n\nconst deployMessage = (props) => {\n    const dt = DateTime.fromISO(DeployData.date_deployed);\n    const deployTime = dt.toLocaleString(DateTime.DATETIME_FULL);\n    return (\n        <Message type=\"info\"\n            text={'The current deployment is v' + DeployData.version_num + ', deployed ' + deployTime} />\n    );\n};\n\nexport default deployMessage;\n","import React, { Component } from 'react';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport EnglishData from '../../../../data/lang/en.json';\nimport KeysData from '../../../../data/lang/keys.json';\n\nclass AdminAdvancedInit extends Component {\n\n    state = {\n        processing: false,\n        process_data: null,\n        error: null,\n    };\n\n    initDeploys = () => {\n        this.setState({\n            processing: true,\n            process_data: null,\n            error: null\n        });\n        const data = {\n            token: this.props.token,\n            en: EnglishData,\n            keys: KeysData\n        };\n        Api.initializeAdmin(data)\n            .then(response => {\n                this.setState({\n                    processing: false,\n                    process_data: JSON.stringify(response.data),\n                    error: null\n                });\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = Api.parseAxiosError(error);\n                Logger.alert('Could not initialize the language deploy', { api_error: parsed });\n                this.setState({\n                    processing: false,\n                    error: '[' + parsed.code + '] ' + parsed.message\n                });\n            });\n    }\n\n    render() {\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Initialize Deploy\"\n                breadcrumbs={['Admin', 'Advanced', 'Init Deploy']}\n                advanced={true}>\n                <DeployMessage />\n                <FunctionBox\n                    working={this.state.processing}\n                    emptyText=\"Click Go to re-intitalize the translations...\"\n                    results={this.state.process_data}\n                    title=\"Replace the admin database with the currently deployed version\"\n                    explainer=\"This will destroy any changes that have been made in the admin since the last deploy\"\n                    clicked={this.initDeploys}\n                    buttonText=\"Go\"\n                    error={this.state.error}\n                    />\n            </AdminPage>\n        );\n    }\n}\n\nexport default AdminAdvancedInit;\n","import React, { Component } from 'react';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport FunctionBox from '../../../../components/Admin/FunctionBox/FunctionBox';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport './Save.css';\n\nclass AdminAdvancedSave extends Component {\n\n    state = {\n        processing: false,\n        process_data: null,\n        error: null,\n        download_info: null\n    };\n\n    deploy = () => {\n        this.setState({\n            processing: true,\n            process_data: null,\n            error: null\n        });\n        const data = {\n            token: this.props.token\n        };\n        Api.deployAdmin(data)\n            .then(response => {\n                this.setState({\n                    processing: false,\n                    process_data: JSON.stringify(response.data),\n                    download_info: response.data,\n                    error: null\n                });\n            })\n            .catch(error => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                const parsed = Api.parseAxiosError(error);\n                Logger.alert('Could not deploy recent changes', { api_error: parsed });\n                this.setState({\n                    processing: false,\n                    error: '[' + parsed.code + '] ' + parsed.message\n                });\n            });\n    }\n\n    render() {\n        let successBox = null;\n        if (this.state.download_info) {\n            const vnum = this.state.download_info.version;\n            const hash = this.state.download_info.hash;\n            const url = Api.getDownloadUrl(vnum, hash, this.props.token);\n            const fname = 'hnct-' + vnum + '.zip';\n            const downloadLink = (\n                <a className=\"DownloadDeploy\" download={fname} href={url}>\n                    <i className=\"fas fa-download\" title=\"download\"></i>\n                </a>\n            );\n            successBox = <Message type=\"success\"\n                text=\"Download the deploy here:\"\n                custom_button={downloadLink} />;\n        }\n\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Save Deploy\"\n                breadcrumbs={['Admin', 'Advanced', 'Save Deploy']}\n                advanced={true}>\n                <DeployMessage />\n                <FunctionBox\n                    working={this.state.processing}\n                    emptyText=\"Click Go to deploy all changes...\"\n                    results={this.state.process_data}\n                    title=\"Wrap all changes from the admin into a new deployment\"\n                    explainer=\"This will create a zip file you can download containing the new versions of the data files to be commited and deployed\"\n                    clicked={this.deploy}\n                    buttonText=\"Go\"\n                    error={this.state.error}\n                    successBox={successBox}\n                    />\n            </AdminPage>\n        );\n    }\n}\n\nexport default AdminAdvancedSave;\n","import React from 'react';\n\nimport './Table.css';\n\nconst table = (props) => {\n    let header_cells = props.cols.map((h) => {\n        return <th key={h.key}>{h.title}</th>\n    });\n    let i = 0;\n    let body_rows = props.rows.map((r) => {\n        ++i;\n        let cells = [];\n        let clickable = props.clickable || {};\n        let snip = props.snip || {};\n        for (const h of props.cols) {\n            let classes = [];\n            let clicked = null;\n            let value = r[h.key];\n            let title = null;\n            if (h.key in clickable) {\n                clicked = () => { clickable[h.key](r, h.key); };\n                classes.push('Clickable');\n            }\n            if (h.key in snip) {\n                let full = value;\n                if (full.length > snip[h.key]) {\n                    let short = value.substring(0, snip[h.key]) + '...';\n                    value = short;\n                    title = full;\n                    classes.push('Snipped');\n                }\n            }\n            cells.push(<td key={i}\n                className={classes.join(' ')}\n                onClick={clicked}\n                title={title}>{value}</td>);\n            ++i;\n        }\n        return <tr key={i}>{cells}</tr>;\n    });\n    let classes = [ 'AdminTable' ];\n    if (props.size === 'tiny') {\n        classes.push('TinyTable');\n    }\n    return (\n        <div className={classes.join(' ')}>\n            <table>\n                <thead>\n                    <tr>\n                        {header_cells}\n                    </tr>\n                </thead>\n                <tbody>\n                    {body_rows}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default table;\n","import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport DeployMessage from '../../../../components/Admin/DeployMessage/DeployMessage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Table from '../../../../components/UI/Table/Table';\nimport Message from '../../../../components/UI/Message/Message';\nimport IconButton from '../../../../components/UI/IconButton/IconButton';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport './List.css';\n\nclass AdminAdvancedList extends Component {\n\n    state = {\n        loaded: false,\n        deploys: null,\n        error: null\n    };\n\n    cols = [\n        { key: 'version_num', title: 'Version Number' },\n        { key: 'deploy_date', title: 'Created At' },\n        { key: 'download', title: 'Download' },\n    ];\n\n    refresh = () => {\n        this.fetchDeploys();\n    };\n\n    componentDidMount() {\n        this.fetchDeploys();\n    }\n\n    fetchDeploys() {\n        this.setState({ loaded: false, deploys: null, error: null });\n        const data = { token: this.props.token };\n        Api.getAllDeploys(data)\n            .then((response) => {\n                const all = response.data.all ? response.data.all : [];\n                this.setState({ loaded: true, deploys: all });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch deployments', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch deployments' });\n            });\n    }\n\n    render() {\n        let body = null;\n        if (this.state.loaded) {\n            const rows = this.state.deploys.map(item => {\n                const dt = DateTime.fromISO(item.date_deployed);\n                const formatted = dt.toLocaleString(DateTime.DATETIME_SHORT);\n                const url = Api.getDownloadUrl(\n                    item.version_num,\n                    item.hash,\n                    this.props.token);\n                const fname = 'hnct-' + item.version_num + '.zip';\n                const download = (\n                    <a className=\"DownloadDeploy\" download={fname} href={url}>\n                        <i className=\"fas fa-download\" title=\"download\"></i>\n                    </a>\n                );\n                return {\n                    version_num: item.version_num,\n                    hash: item.hash,\n                    deploy_date: formatted,\n                    download: download\n                };\n            });\n            body = (\n                <div className=\"DeployList\">\n                    <div className=\"RefreshWrapper\">\n                    <IconButton icon_type=\"refresh\"\n                        clicked={this.refresh} />\n                    </div>\n                    <Table rows={rows} cols={this.cols} />\n                </div>\n            );\n        } else {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Advanced Functions: Deployments\"\n                breadcrumbs={['Admin', 'Advanced', 'Deployments']}\n                advanced={true}>\n                <DeployMessage />\n                {body}\n            </AdminPage>\n        );\n    }\n\n}\n\nexport default AdminAdvancedList;\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport Init from './Init/Init';\nimport Save from './Save/Save';\nimport List from './List/List';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport './Advanced.css';\n\nclass AdminAdvanced extends Component {\n\n    goToInit = () => {\n        this.props.history.push('/admin/advanced/init');\n    }\n\n    goToSave = () => {\n        this.props.history.push('/admin/advanced/save');\n    }\n\n    goToList = () => {\n        this.props.history.push('/admin/advanced');\n    }\n\n    render() {\n        const doSave = () => {\n            return <Save token={this.props.token} />;\n        };\n        const doInit = () => {\n            return <Init token={this.props.token} />;\n        };\n        const doList = () => {\n            return <List token={this.props.token} />;\n        };\n        return (\n            <Aux>\n                <Switch>\n                    <Route path=\"/admin/advanced/init\" render={doInit} />\n                    <Route path=\"/admin/advanced/save\" render={doSave} />\n                    <Route path=\"/\" render={doList} />\n                </Switch>\n                <div className=\"OtherFunctions\">\n                    <h4>Advanced Functions</h4>\n                    <ul>\n                        <li><button onClick={this.goToInit}>Init Deploy</button></li>\n                        <li><button onClick={this.goToSave}>Save Deploy</button></li>\n                        <li><button onClick={this.goToList}>List Deployments</button></li>\n                    </ul>\n                </div>\n            </Aux>\n        );\n    }\n\n}\n\nexport default withRouter(AdminAdvanced);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Table from '../../../../components/UI/Table/Table';\nimport Message from '../../../../components/UI/Message/Message';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nconst MAX_KEY_LENGTH = 50;\nconst MAX_ENGLISH_LENGTH = 100;\n\nclass AdminLanguageList extends Component {\n    \n    state = {\n        loaded: false,\n        sections: null,\n        error: null\n    };\n\n    cols = [\n        { key: 'key', title: 'Key' },\n        { key: 'english', title: 'English' },\n    ];\n\n    snip = {\n        key: MAX_KEY_LENGTH,\n        english: MAX_ENGLISH_LENGTH\n    };\n\n    clickable = {\n        key: (row) => { this.editRow(row); }\n    };\n\n    refresh = () => {\n        this.fetchLanguage();\n    };\n\n    editRow(row) {\n        this.props.history.push('/admin/language/' + row.key);\n    }\n\n    componentDidMount() {\n        this.fetchLanguage();\n    }\n\n    fetchLanguage() {\n        this.setState({ loaded: false, sections: null, error: null });\n        const data = { token: this.props.token };\n        Api.getAllLanguage(data)\n            .then((response) => {\n                const all = response.data.all ? response.data.all : [];\n                this.setState({ loaded: true, sections: all });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch language keys', { api_error: Api.parseAxiosError(error) });\n                this.setState({ error: 'Could not fetch language keys' });\n            });\n    }\n\n    render() {\n        let body = null;\n        if (this.state.loaded) {\n            let sections = Object.keys(this.state.sections)\n                .sort()\n                .map(section => {\n                    const rows = this.state.sections[section].map(info => {\n                        return {\n                            key: info.key,\n                            english: info.english\n                        };\n                    });\n                    return (\n                        <div key={section}>\n                            <h4>{section}</h4>\n                            <Table\n                                rows={rows}\n                                cols={this.cols}\n                                clickable={this.clickable}\n                                snip={this.snip} />\n                        </div>\n                    );\n                });\n            body = sections;\n        } else {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n        }\n        return (\n            <AdminPage\n                title=\"Language: All language used in the user-facing site\"\n                breadcrumbs={['Admin', 'Language', 'List']}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminLanguageList);\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport IconButton from '../../UI/IconButton/IconButton';\n\nimport './EditMarkdown.css';\n\nconst editMarkdown = (props) => {\n    if (props.previewing) {\n        const md = require('markdown-it')();\n        const preview = md.render(props.value);\n        return (\n            <div className=\"PreviewMarkdown\">\n                <h5>Preview</h5>\n                <div className=\"View\" dangerouslySetInnerHTML={{__html: preview}} />\n                <div className=\"EditToggle\">\n                    <IconButton icon_type=\"edit\"\n                        clicked={props.clickedEdit}\n                        append_text=\"edit\" />\n                </div>\n            </div>\n        );\n    } else {\n        const minrows = props.minrows || 5;\n        return (\n            <div className=\"EditMarkdown\">\n                <TextareaAutosize rows=\"5\" cols=\"75\"\n                    minRows={minrows}\n                    name={props.name}\n                    defaultValue={props.value}\n                    onChange={props.changed} />\n                <div className=\"PreviewToggle\">\n                    <IconButton icon_type=\"preview\"\n                        clicked={props.clickedPreview}\n                        append_text=\"preview\" />\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default editMarkdown;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AdminPage from '../../../../hoc/AdminPage/AdminPage';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport Message from '../../../../components/UI/Message/Message';\nimport EditMarkdown from '../../../../components/Admin/EditMarkdown/EditMarkdown';\nimport ProcessingButton from '../../../../components/UI/ProcessingButton/ProcessingButton';\nimport Api from '../../../../storage/Api';\nimport Logger from '../../../../utils/Logger';\n\nimport './Edit.css';\n\nclass AdminLanguageEdit extends Component {\n\n    state = {\n        loaded: false,\n        error: null,\n        language_info: null,\n        original_english: null,\n        preview: false,\n        english: null,\n        processing: false,\n        processing_error: null,\n        saved: false\n    };\n\n    md = null;\n\n    refresh = () => {\n        this.fetchInfo();\n    };\n\n    changeEnglish = (e) => {\n        let val = e.target.value;\n        this.setState({ english: val });\n    };\n\n    doPreview = () => {\n        this.setState({ preview: true });\n    };\n\n    doEdit = () => {\n        this.setState({ preview: false });\n    };\n\n    submitEdit = () => {\n        this.setState({\n            processing: true,\n            saved: false,\n            processing_error: null\n        });\n        const data = {\n            token: this.props.token,\n            key: this.getKey(),\n            language: 'en',\n            translation: this.state.english\n        };\n        Api.saveTranslation(data)\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    processing: false,\n                    processing_error: false,\n                    saved: true\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not save language', { api_error: Api.parseAxiosError(error), key: this.getKey() });\n                this.setState({\n                    processing: false,\n                    processing_error: 'Could not save language'\n                });\n            });\n    };\n\n    componentDidMount() {\n        this.md = require('markdown-it')();\n        this.fetchInfo();\n    }\n\n    fetchInfo() {\n        this.setState({ loaded: false, error: null });\n        const data = { token: this.props.token, key: this.getKey() };\n        Api.getLanguageInfo(data)\n            .then((response) => {\n                this.setState({\n                    loaded: true,\n                    language_info: response.data.info,\n                    original_english: response.data.en,\n                    english: response.data.en\n                });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch language info', { api_error: Api.parseAxiosError(error), key: this.getKey() });\n                this.setState({ error: 'Could not fetch language info' });\n            });\n    }\n\n    getKey() {\n        if (this.props.match.params.key) {\n            return this.props.match.params.key;\n        }\n        return null;\n    }\n\n    render() {\n        let body = null;\n        if (!this.state.loaded) {\n            body = (\n                <Aux>\n                    {this.state.error ?\n                        <Message type=\"error\" text={this.state.error} tryagain={this.refresh} />\n                    : null}\n                    <Spinner />\n                </Aux>\n            );\n\n        } else {\n            let help = this.md.render(this.state.language_info.help);\n            body = (\n                <div className=\"EditLanguage\">\n                    <h4>Editing: {this.getKey()}</h4>\n                    <p><i>Appears in: <strong>{this.state.language_info.section}</strong></i></p>\n                    {help ?\n                        <div className=\"HelpBox\" dangerouslySetInnerHTML={{__html: help}} />\n                    : null}\n                    <form method=\"post\" onSubmit={this.submitEdit}>\n                        {this.state.language_info.markdown_allowed ?\n                            <EditMarkdown\n                                name=\"english\"\n                                previewing={this.state.preview}\n                                value={this.state.english}\n                                clickedEdit={this.doEdit}\n                                clickedPreview={this.doPreview}\n                                changed={this.changeEnglish} />\n                        :\n                            <input type=\"text\"\n                                name=\"english\"\n                                value={this.state.english}\n                                onChange={this.changeEnglish} />\n                        }\n                        {this.state.preview ? null :\n                            <div className=\"ButtonHolder\">\n                                <ProcessingButton\n                                    working={this.state.processing}\n                                    clicked={this.submitEdit}\n                                    text=\"Submit\" />\n                            </div>\n                        }\n                        {this.state.saved ?\n                            <Message type=\"success\" text=\"The new language has been saved\" />\n                        : null}\n                        {this.state.processing_error ?\n                            <Message type=\"error\" text={this.state.processing_error} />\n                        : null}\n                    </form>\n                </div>\n            );\n        }\n\n        return (\n            <AdminPage\n                title=\"Language: Edit language for the tool\"\n                breadcrumbs={['Admin', 'Language', 'Edit']}>\n                {body}\n            </AdminPage>\n        );\n    }\n}\n\nexport default withRouter(AdminLanguageEdit);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List/List';\nimport Edit from './Edit/Edit';\n\nclass AdminLanguage extends Component {\n\n    render() {\n        const doEdit = () => {\n            return <Edit token={this.props.token} />;\n        };\n        const doList = () => {\n            return <List token={this.props.token} />;\n        };\n        return (\n            <Switch>\n                <Route path=\"/admin/language/:key\" render={doEdit} />\n                <Route path=\"/\" render={doList} />\n            </Switch>\n        );\n    }\n}\n\nexport default AdminLanguage;\n","import React from 'react';\n\nimport Spinner from '../../UI/Spinner/Spinner';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport Message from '../../UI/Message/Message';\nimport Table from '../../UI/Table/Table';\n\nimport './DashboardBlock.css';\n\nconst dashboardBlock = (props) => {\n    let body = null;\n    if (props.loaded) {\n        let refresh = null;\n        if (props.refresh) {\n            refresh = (\n                <div className=\"RefreshWrapper\">\n                    <IconButton icon_type=\"refresh\"\n                        clicked={props.refresh} />\n                </div>\n            );\n        }\n        let data = null;\n        if (props.rows.length > 0) {\n            data = (\n                <div className=\"YesData\">\n                    <Table size=\"tiny\" rows={props.rows} cols={props.cols} />\n                </div>\n            );\n        } else {\n            data = <div className=\"NoData\">There is nothing to show</div>\n        }\n        body = (\n            <div className=\"DashboardBlockBody Loaded\">\n                {refresh}\n                {data}\n            </div>\n        );\n    } else {\n        let message = null;\n        if (props.error) {\n            message = (\n                <Message type=\"error\"\n                    text={props.error}\n                    tryagain={props.refresh} />\n            );\n        }\n        body = (\n            <div className=\"DashboardBlockBody Waiting\">\n                <Spinner />\n                {message}\n            </div>\n        );\n    }\n    return (\n        <div className=\"DashboardBlock\">\n            <h4>{props.title}</h4>\n            {body}\n        </div>\n    );\n};\n\nexport default dashboardBlock;\n","import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\n\nimport Block from '../../../components/Admin/DashboardBlock/DashboardBlock';\n\nimport Api from '../../../storage/Api';\nimport Logger from '../../../utils/Logger';\n\nclass AdminDashboard extends Component {\n\n    state = {\n        responses_loaded: false,\n        responses_error: null,\n        responses: null,\n        contacts_loaded: false,\n        contacts_error: null,\n        contacts: null,\n    };\n\n    responses_headers = [\n        { key: 'date', title: 'Date' },\n        { key: 'type', title: 'Employee Type' },\n        { key: 'books', title: 'On the Books?' },\n    ];\n\n    contacts_headers = [\n        { key: 'date', title: 'Date' },\n        { key: 'email', title: 'Email' },\n        { key: 'ZIP', title: 'ZIP Code' },\n    ];\n\n    componentDidMount() {\n        this.fetchRecentResponses();\n        this.fetchRecentContacts();\n    }\n\n    refreshResponses = () => {\n        this.fetchRecentResponses();\n    };\n\n    refreshContacts = () => {\n        this.fetchRecentContacts();\n    };\n\n    fetchRecentResponses() {\n        this.setState({\n            responses_loaded: false,\n            responses: null,\n            responses_error: null });\n        const data = { token: this.props.token };\n        Api.getRecentResponses(data)\n            .then((response) => {\n                const found = response.data.recent ? response.data.recent : [];\n                const recent = found.map((row) => {\n                    let dt = DateTime.fromISO(row.submitted);\n                    let formatted = dt.toFormat('LLL dd');\n                    return { ...row, date: formatted };\n                });\n                this.setState({ responses_loaded: true, responses: recent });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch recent responses', { api_error: Api.parseAxiosError(error) });\n                this.setState({ responses_error: 'Could not fetch recent responses' });\n            });\n    }\n\n    fetchRecentContacts() {\n        this.setState({\n            contacts_loaded: false,\n            contacts: null,\n            contacts_error: null });\n        const data = { token: this.props.token };\n        Api.getRecentContacts(data)\n            .then((response) => {\n                const found = response.data.recent ? response.data.recent : [];\n                const recent = found.map((row) => {\n                    let dt = DateTime.fromISO(row.submitted);\n                    let formatted = dt.toFormat('LLL dd');\n                    return { ...row, date: formatted };\n                });\n                this.setState({ contacts_loaded: true, contacts: recent });\n            })\n            .catch((error) => {\n                if (!error.isAxiosError) {\n                    throw error;\n                }\n                Logger.alert('Could not fetch recent contacts', { api_error: Api.parseAxiosError(error) });\n                this.setState({ contacts_error: 'Could not fetch recent contacts' });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"Dashboard\">\n                <Block\n                    title=\"Recent Responses\"\n                    loaded={this.state.responses_loaded}\n                    error={this.state.responses_error}\n                    refresh={this.refreshResponses}\n                    rows={this.state.responses}\n                    cols={this.responses_headers} />\n                <Block\n                    title=\"Recent Contacts\"\n                    loaded={this.state.contacts_loaded}\n                    error={this.state.contacts_error}\n                    refresh={this.refreshContacts}\n                    rows={this.state.contacts}\n                    cols={this.contacts_headers} />\n            </div>\n        );\n    }\n}\n\nexport default AdminDashboard;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport './AdminLayout.css';\n\nclass AdminLayout extends Component {\n    render() {\n\n        return (\n            <div className=\"Admin\">\n                <div className=\"AdminNav\">\n                    <ul>\n                        <li><NavLink exact to=\"/admin\">Dashboard</NavLink></li>\n                        <li><NavLink to=\"/admin/language\">Language</NavLink></li>\n                        <li><NavLink to=\"/admin/advanced\">Advanced</NavLink></li>\n                    </ul>\n                </div>\n                <div className=\"AdminMain\">\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminLayout;\n","import React from 'react';\n\nimport './LoginBox.css';\n\nconst loginBox = (props) => {\n    let button = null;\n    if (props.loading) {\n        button = <button disabled=\"disabled\" className=\"Loading\">{props.lang.button_text}</button>;\n    } else {\n        button = <button type=\"submit\">{props.lang.button_text}</button>;\n    }\n\n    return (\n        <div className=\"LoginBox\">\n            {props.header ? (\n                <h3>{props.header}</h3>\n            ) : null}\n            {props.loginError ?\n                <div className=\"Error\">{props.lang.login_error}</div>\n            : null}\n            <form method=\"post\" onSubmit={props.submitted}>\n                <label>{props.lang.username_label}</label>\n                <input type=\"text\" name=\"username\" value={props.username} onChange={props.usernameChanged} autoComplete=\"username\" />\n                <label>{props.lang.password_label}</label>\n                <input type=\"password\" name=\"password\" value={props.password} onChange={props.passwordChanged} autoComplete=\"current-password\" />\n                <div className=\"ButtonContainer\">\n                    {button}\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default loginBox;\n","import React, { Component } from 'react';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport LoginBox from '../../components/LoginBox/LoginBox';\nimport Api from '../../storage/Api';\nimport Language from '../../utils/Language';\nimport Logger from '../../utils/Logger';\n\nclass Login extends Component {\n\n    state = {\n        loading: false,\n        username: '',\n        password: '',\n        loginError: false,\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    };\n\n    changePassword = (e) => {\n        this.setState({ password: e.target.value });\n    };\n\n    validate = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true,\n            loginError: false\n        });\n        const data = {\n            username: this.state.username,\n            password: this.state.password\n        };\n        let call = null;\n        if (this.props.login_type === 'prelaunch') {\n            call = Api.checkPrelaunchLogin(data);\n        } else {\n            call = Api.checkAdminLogin(data);\n        }\n        call.then(response => {\n            if (response.data.token) {\n                this.setState({\n                    loading: false,\n                });\n                this.props.updateLoginState(response.data.token);\n            } else {\n                Logger.alert('Log in succeeded without returning a token', { returned: response.data, login_type: this.props.login_type });\n                this.setState({\n                    loading: false,\n                    loginError: true\n                });\n            }\n        })\n        .catch(error => {\n            const parsed = Api.parseAxiosError(error);\n            if (parsed.code !== 'LOGIN_INCORRECT' &&\n                parsed.code !== 'USERNAME_REQUIRED' &&\n                parsed.code !== 'PASSWORD_REQUIRED') {\n                Logger.alert('Log in failed', { api_error: parsed, login_type: this.props.login_type });\n            }\n            this.setState({\n                loading: false,\n                loginError: true\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.lang = {\n            button_text: Language.get('prelaunch_login_button_text'),\n            login_error: Language.get('prelaunch_login_error'),\n            username_label: Language.get('prelaunch_login_username_label'),\n            password_label: Language.get('prelaunch_login_password_label'),\n        };\n        this.setState({ loaded_lang: true });\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return <Spinner />;\n        }\n        return <LoginBox\n            header={this.props.header}\n            loading={this.state.loading}\n            loginError={this.state.loginError}\n            username={this.state.username}\n            password={this.state.password}\n            usernameChanged={this.changeUsername}\n            passwordChanged={this.changePassword}\n            submitted={this.validate}\n            lang={this.lang} />;\n    }\n\n}\n\nexport default Login;\n","import CookieBase from '../CookieBase';\n\nconst loginCookie = new CookieBase(\n    'hnct-login', // name\n    {\n        path: '/',\n        maxAge: 60 * 60,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default loginCookie;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Advanced from './Advanced/Advanced';\nimport Language from './Language/Language';\nimport Dashboard from './Dashboard/Dashboard';\nimport AdminLayout from '../../hoc/AdminLayout/AdminLayout';\nimport Login from '../Login/Login';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport LoginCookie from '../../storage/cookies/LoginCookie';\nimport Api from '../../storage/Api';\nimport Logger from '../../utils/Logger';\n\nimport './Admin.css';\n\n// TODO: Use context to pass the token to children?\n// const TokenContext = React.createContext(null);\n// TODO: Use react-idle-timer to trigger token updates?\n// https://github.com/SupremeTechnopriest/react-idle-timer\n\nclass Admin extends Component {\n\n    state = {\n        loggedIn: false,\n        loaded: false,\n        token: null\n    };\n\n    updateLogin = (token) => {\n        this.setState({ loggedIn: true, loaded: true, token: token });\n        LoginCookie.set(token);\n    };\n\n    componentDidMount() {\n        let token = LoginCookie.get();\n        if (token) {\n            Api.checkAdminToken({ token: token })\n                .then(response => {\n                    this.setState({ loggedIn: true, loaded: true, token: token });\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Admin session check failed', { api_error: parsed });\n                    }\n                    this.setState({ loaded: true });\n                });\n        } else {\n            this.setState({ loaded: true });\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        if (this.state.loggedIn) {\n            const doAdvanced = () => <Advanced token={this.state.token} />;\n            const doLanguage = () => <Language token={this.state.token} />;\n            const doDashboard = () => <Dashboard token={this.state.token} />;\n            return (\n                <AdminLayout>\n                    <Switch>\n                        <Route path=\"/admin/advanced\" render={doAdvanced} />\n                        <Route path=\"/admin/language\" render={doLanguage} />\n                        <Route path=\"/admin\" render={doDashboard} />\n                    </Switch>\n                </AdminLayout>\n            );\n\n        } else {\n            const header = 'Admin Login';\n            return (\n                <div className=\"AdminLogin\">\n                    <Login header={header} updateLoginState={this.updateLogin} />\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Admin;\n","import React from 'react';\n\nimport './Notice.css';\n\nconst notice = (props) => {\n    if (!props.show) {\n        return null;\n    }\n    return (\n        <div className=\"Notice\">\n            <button className=\"CloseNotice\" onClick={props.closed}><i className=\"fas fa-times\" title=\"{props.lang.close_alt}\"></i></button>\n            <div className=\"NoticeContent\">\n                <div className=\"NoticeMessage\">\n                    <h6>{props.lang.title}</h6>\n                    <div dangerouslySetInnerHTML={{__html: props.lang.message}}></div>\n                </div>\n                <button className=\"AcceptButton\" onClick={props.accepted}>{props.lang.accept_button_text}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default notice;\n","import CookieBase from '../CookieBase';\n\nconst cookieNoticeCookie = new CookieBase(\n    'hnct-cookienotice', // name\n    {\n        path: '/',\n        maxAge: 60 * 60 * 24 * 14,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default cookieNoticeCookie;\n","import React, { Component } from 'react';\n\nimport Notice from '../../components/UI/Notice/Notice';\nimport CookieNoticeCookie from '../../storage/cookies/CookieNoticeCookie';\nimport Language from '../../utils/Language';\n\nclass CookieNotice extends Component {\n\n    state = {\n        showNotice: true,\n        noticeAccepted: true,\n        loaded_lang: false\n    };\n\n    lang = null;\n\n    hideNotice = () => {\n        this.setState({ showNotice: false });\n    };\n\n    acceptNotice = () => {\n        CookieNoticeCookie.set(new Date());\n        this.setState({ noticeAccepted: true, showNotice: false });\n    };\n\n    componentDidMount() {\n        this.lang = {\n            close_alt: Language.get('util_cancel_alt_text'),\n            title: Language.get('cookie_notice_title'),\n            message: Language.get('cookie_notice_message'),\n            accept_button_text: Language.get('cookie_notice_accept_button_text'),\n        };\n        let newstate = { loaded_lang: true };\n        let date = CookieNoticeCookie.get();\n        if (date) {\n            newstate.noticeAccepted = true;\n            newstate.showNotice = false;\n        }\n        this.setState(newstate);\n    }\n\n    render() {\n        if (!this.state.loaded_lang) {\n            return null;\n        }\n        return (\n            <Notice\n                show={this.state.showNotice}\n                closed={this.hideNotice}\n                accepted={this.acceptNotice}\n                lang={this.lang} />\n        );\n    }\n}\n\nexport default CookieNotice;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux/Aux';\nimport Layout from '../../hoc/Layout/Layout';\nimport BenefitsTool from '../../containers/BenefitsTool/BenefitsTool';\nimport Admin from '../../containers/Admin/Admin';\nimport CookieNotice from '../CookieNotice/CookieNotice';\nimport Language from '../../utils/Language';\n\nclass Main extends Component {\n\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        this.lang = {\n            layout: {\n                logo_alt_text: Language.get('layout_logo_alt_text'),\n                header_title: Language.get('layout_header_title')\n            }\n        };\n        this.setState({ loaded: true });\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        return (\n            <Layout lang={this.lang.layout}>\n                <Switch>\n                    <Route path=\"/admin\" component={Admin} />\n                    <Route path=\"/\" render={() => (\n                        <Aux>\n                            <BenefitsTool />\n                            <CookieNotice />\n                        </Aux>\n                    )} />\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nexport default Main;\n","import React from 'react';\n\nimport './LoginLayout.css';\n\nconst loginLayout = (props) => {\n    return (\n        <div className=\"LoginFrame\">\n            <div className=\"LoginMain\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default loginLayout;\n","import CookieBase from '../CookieBase';\n\nconst preLaunchCookie = new CookieBase(\n    'hnct-prelaunch', // name\n    {\n        path: '/',\n        maxAge: 60 * 60,\n        sameSite: 'Strict'\n    } // spec\n);\n\nexport default preLaunchCookie;\n","import React, { Component } from 'react';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Main from '../Main/Main';\nimport Login from '../Login/Login';\nimport LoginLayout from '../../hoc/LoginLayout/LoginLayout';\nimport PreLaunchCookie from '../../storage/cookies/PreLaunchCookie';\nimport Api from '../../storage/Api';\nimport Logger from '../../utils/Logger';\n\nclass PreLaunch extends Component {\n\n    state = {\n        loggedIn: false,\n        loaded: false\n    };\n\n    updateLogin = (token) => {\n        this.setState({ loggedIn: true, loaded: true });\n        PreLaunchCookie.set(token);\n    };\n\n    componentDidMount() {\n        let token = PreLaunchCookie.get();\n        if (token) {\n            Api.checkPrelaunchToken({ token: token })\n                .then(response => {\n                    this.setState({ loggedIn: true, loaded: true });\n                })\n                .catch(error => {\n                    if (!error.isAxiosError) {\n                        throw error;\n                    }\n                    const parsed = Api.parseAxiosError(error);\n                    if (parsed.code !== 'TOKEN_INVALID') {\n                        Logger.alert('Prelaunch session check failed', { api_error: parsed });\n                    }\n                    this.setState({ loaded: true });\n                });\n        } else {\n            this.setState({ loaded: true });\n        }\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <Spinner />;\n        }\n\n        if (this.state.loggedIn) {\n            return <Main />;\n        } else {\n            return (\n                <LoginLayout>\n                    <Login\n                        login_type=\"prelaunch\"\n                        updateLoginState={this.updateLogin} />\n                </LoginLayout>\n            );\n        }\n    }\n}\n\nexport default PreLaunch;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// After launch, load Main directly instead\nimport PreLaunch from './containers/PreLaunch/PreLaunch';\n\nimport './App.css';\n\n// TODO: Tests\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <PreLaunch />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}